{"version":3,"file":"static/504.e956f7761e8d3442ef4f.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/components/Sidebar.tsx","webpack://automata-neural-nexus-portal/./src/components/ui/button.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * AutomataControls™ Remote Portal\n * Copyright © 2024 AutomataNexus, LLC. All rights reserved.\n *\n * PROPRIETARY AND CONFIDENTIAL\n * This software is proprietary to AutomataNexus and constitutes valuable\n * trade secrets. This software may not be copied, distributed, modified,\n * or disclosed to third parties without prior written authorization from\n * AutomataNexus. Use of this software is governed by a commercial license\n * agreement. Unauthorized use is strictly prohibited.\n *\n * AutomataNexusBms Controller Software\n */\nimport { useState, useEffect } from 'react';\nimport { LayoutGrid, Workflow, Terminal, BrainCircuit, Database, Thermometer, Bell, UserCheck, LogOut, Shield, Sliders, Activity } from 'lucide-react';\nimport { Button } from './ui/button';\nconst Sidebar = ({ currentView, onViewChange }) => {\n    const [authUser, setAuthUser] = useState(null);\n    const [clickCount, setClickCount] = useState(0);\n    const [clickTimer, setClickTimer] = useState(null);\n    useEffect(() => {\n        // Check if user is authenticated\n        const checkAuth = () => {\n            const token = sessionStorage.getItem('authToken');\n            if (token) {\n                try {\n                    const payload = JSON.parse(atob(token.split('.')[1]));\n                    setAuthUser(payload.username);\n                }\n                catch {\n                    setAuthUser(null);\n                }\n            }\n            else {\n                setAuthUser(null);\n            }\n        };\n        checkAuth();\n        // Check on focus (in case of login in another tab)\n        window.addEventListener('focus', checkAuth);\n        // Check periodically for session changes\n        const interval = setInterval(checkAuth, 1000);\n        return () => {\n            window.removeEventListener('focus', checkAuth);\n            clearInterval(interval);\n        };\n    }, []);\n    const handleLogout = () => {\n        sessionStorage.removeItem('authToken');\n        setAuthUser(null);\n        // Reload to clear any protected content\n        window.location.reload();\n    };\n    const handleSecurityBadgeClick = () => {\n        // Clear existing timer\n        if (clickTimer) {\n            clearTimeout(clickTimer);\n        }\n        // Increment click count\n        const newCount = clickCount + 1;\n        setClickCount(newCount);\n        // Check if triple click achieved\n        if (newCount === 3) {\n            // Navigate to hidden admin page\n            onViewChange('admin');\n            setClickCount(0);\n        }\n        else {\n            // Set timer to reset count after 500ms\n            const timer = setTimeout(() => {\n                setClickCount(0);\n            }, 500);\n            setClickTimer(timer);\n        }\n    };\n    const navItems = [\n        {\n            id: 'dashboard',\n            label: 'Dashboard',\n            icon: LayoutGrid,\n            description: 'System overview and metrics'\n        },\n        {\n            id: 'controls',\n            label: 'Controls',\n            icon: Sliders,\n            description: 'Equipment I/O control'\n        },\n        {\n            id: 'nodered',\n            label: 'Node-RED',\n            icon: Workflow,\n            description: 'Flow-based programming'\n        },\n        {\n            id: 'terminal',\n            label: 'Terminal',\n            icon: Terminal,\n            description: 'Command line access'\n        },\n        {\n            id: 'neuralbms',\n            label: 'Neural BMS',\n            icon: BrainCircuit,\n            description: 'Building management system'\n        },\n        {\n            id: 'database',\n            label: 'Database',\n            icon: Database,\n            description: 'Database management and analytics'\n        },\n        {\n            id: 'thresholds',\n            label: 'Thresholds',\n            icon: Thermometer,\n            description: 'Configure Node-RED alarm thresholds'\n        },\n        {\n            id: 'alarms',\n            label: 'Alarms',\n            icon: Bell,\n            description: 'Alarm management and notifications'\n        },\n        {\n            id: 'vibration',\n            label: 'Vibration',\n            icon: Activity,\n            description: 'Vibration sensor monitoring'\n        }\n    ];\n    return (_jsxs(\"nav\", { className: \"sidebar\", children: [_jsx(\"div\", { className: \"sidebar-header\", children: _jsx(\"div\", { className: \"sidebar-title\", children: \"Navigation\" }) }), _jsxs(\"div\", { className: \"nav-menu\", children: [navItems.map(item => {\n                        const Icon = item.icon;\n                        const isActive = currentView === item.id;\n                        return (_jsxs(Button, { variant: isActive ? \"sidebarActive\" : \"sidebar\", className: `nav-item ${isActive ? 'active' : ''}`, onClick: () => onViewChange(item.id), title: item.description, style: {\n                                padding: '8px 12px',\n                                height: 'auto',\n                                borderRadius: '6px',\n                                marginBottom: '4px',\n                                marginLeft: '4px',\n                                marginRight: '4px',\n                                position: 'relative',\n                                display: 'flex',\n                                alignItems: 'center',\n                                width: 'calc(100% - 8px)',\n                                borderLeft: isActive ? '3px solid #14b8a6' : 'none',\n                                background: isActive\n                                    ? 'linear-gradient(to right, rgba(20, 184, 166, 0.1), rgba(6, 182, 212, 0.1))'\n                                    : 'transparent'\n                            }, children: [_jsx(Icon, { size: 18, style: { marginRight: '10px' } }), _jsx(\"span\", { style: { fontWeight: 500 }, children: item.label })] }, item.id));\n                    }), authUser && (_jsxs(\"div\", { className: \"sidebar-auth\", children: [_jsxs(\"div\", { className: \"auth-user\", children: [_jsx(UserCheck, { size: 18 }), _jsxs(\"span\", { children: [\"Logged in as: \", authUser] })] }), _jsxs(Button, { onClick: handleLogout, variant: \"sidebar\", className: \"btn-sidebar-logout\", style: {\n                                    marginTop: '8px',\n                                    padding: '8px 12px',\n                                    height: 'auto',\n                                    borderRadius: '6px',\n                                    background: 'rgba(239, 68, 68, 0.1)',\n                                    color: '#ef4444',\n                                    border: '1px solid rgba(239, 68, 68, 0.2)'\n                                }, onMouseEnter: (e) => {\n                                    e.currentTarget.style.background = 'rgba(239, 68, 68, 0.2)';\n                                }, onMouseLeave: (e) => {\n                                    e.currentTarget.style.background = 'rgba(239, 68, 68, 0.1)';\n                                }, children: [_jsx(LogOut, { size: 18, style: { marginRight: '8px' } }), _jsx(\"span\", { children: \"Logout\" })] })] })), _jsxs(\"div\", { className: \"sidebar-security\", onClick: handleSecurityBadgeClick, style: { cursor: 'pointer', userSelect: 'none' }, children: [_jsx(Shield, { size: 18 }), _jsx(\"span\", { children: \"Secured by Nexus\" })] })] }), _jsxs(\"div\", { className: \"sidebar-footer\", children: [_jsx(\"div\", { className: \"sidebar-version\", children: \"v2.0.0\" }), _jsx(\"div\", { className: \"sidebar-copyright\", children: \"\\u00A9 2024 AutomataNexus\" })] })] }));\n};\nexport default Sidebar;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\nfunction cn(...inputs) {\n    return inputs.filter(Boolean).join(' ');\n}\nconst buttonVariants = cva(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\",\n            teal: \"bg-teal-500/10 text-teal-600 hover:bg-teal-500/20 border border-teal-200\",\n            sidebar: \"w-full justify-start text-left bg-transparent hover:bg-gradient-to-r hover:from-teal-500/10 hover:to-cyan-500/10 transition-all duration-200\",\n            sidebarActive: \"w-full justify-start text-left bg-gradient-to-r from-teal-500/20 to-cyan-500/20 border-l-3 border-teal-500\",\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\",\n        },\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\",\n    },\n});\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (_jsx(Comp, { className: cn(buttonVariants({ variant, size, className })), ref: ref, ...props }));\n});\nButton.displayName = \"Button\";\nexport { Button, buttonVariants };\n"],"names":["currentView","onViewChange","authUser","setAuthUser","useState","clickCount","setClickCount","clickTimer","setClickTimer","useEffect","checkAuth","token","sessionStorage","getItem","payload","JSON","parse","atob","split","username","window","addEventListener","interval","setInterval","removeEventListener","clearInterval","navItems","id","label","icon","description","A","className","children","map","item","Icon","isActive","variant","onClick","title","style","padding","height","borderRadius","marginBottom","marginLeft","marginRight","position","display","alignItems","width","borderLeft","background","size","fontWeight","removeItem","location","reload","marginTop","color","border","onMouseEnter","e","currentTarget","onMouseLeave","clearTimeout","newCount","timer","setTimeout","cursor","userSelect","cn","inputs","filter","Boolean","join","buttonVariants","variants","default","destructive","outline","secondary","ghost","link","teal","sidebar","sidebarActive","sm","lg","defaultVariants","Button","asChild","props","ref","Comp","displayName"],"sourceRoot":""}