{"version":3,"file":"static/297.0c59c5751bf7933c608c.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/components/NodeRedReadings.tsx","webpack://automata-neural-nexus-portal/./src/components/ui/button.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\nimport { Button } from './ui/button';\nimport '../styles/nodered-readings.css';\nconst NodeRedReadings = () => {\n    const [currentCard, setCurrentCard] = useState(0);\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [editMode, setEditMode] = useState(false);\n    const [editedLabels, setEditedLabels] = useState({});\n    const [userSetpoint, setUserSetpoint] = useState(72);\n    const [savingSetpoint, setSavingSetpoint] = useState(false);\n    const [setpointSaved, setSetpointSaved] = useState(true);\n    const [autoSetpointMode, setAutoSetpointMode] = useState(false);\n    const [outdoorTemp, setOutdoorTemp] = useState(null);\n    const cards = ['Setpoint', 'Inputs', 'Outputs', 'Alarms'];\n    // Load saved setpoint and auto mode preference on mount\n    useEffect(() => {\n        const loadSetpoint = async () => {\n            try {\n                const response = await fetch('/api/setpoint');\n                if (response.ok) {\n                    const data = await response.json();\n                    if (data.setpoint !== undefined && data.setpoint !== null) {\n                        setUserSetpoint(data.setpoint);\n                    }\n                    else {\n                        // If no saved setpoint, default to 72 and save it\n                        setUserSetpoint(72);\n                        fetch('/api/setpoint', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({ setpoint: 72 })\n                        });\n                    }\n                    // Load auto mode preference\n                    if (data.autoMode !== undefined) {\n                        setAutoSetpointMode(data.autoMode);\n                    }\n                }\n            }\n            catch (err) {\n                console.error('Error loading setpoint:', err);\n                setUserSetpoint(72);\n            }\n        };\n        loadSetpoint();\n    }, []);\n    // Fetch outdoor temperature\n    useEffect(() => {\n        const fetchOutdoorTemp = async () => {\n            try {\n                const response = await fetch('/api/weather');\n                if (response.ok) {\n                    const weatherData = await response.json();\n                    if (weatherData.temperature) {\n                        setOutdoorTemp(weatherData.temperature);\n                    }\n                }\n            }\n            catch (err) {\n                console.error('Error fetching outdoor temp:', err);\n            }\n        };\n        fetchOutdoorTemp();\n        // Fetch weather every 5 minutes\n        const interval = setInterval(fetchOutdoorTemp, 300000);\n        return () => clearInterval(interval);\n    }, []);\n    // Auto adjust setpoint based on outdoor temperature\n    useEffect(() => {\n        if (autoSetpointMode && outdoorTemp !== null) {\n            // When outdoor temp > 60°F, set to 68°F\n            // When outdoor temp < 59°F, set to 72°F\n            let newSetpoint = userSetpoint;\n            if (outdoorTemp > 60) {\n                newSetpoint = 68;\n            }\n            else if (outdoorTemp < 59) {\n                newSetpoint = 72;\n            }\n            // If outdoor temp is between 59-60°F, keep current setpoint (prevents oscillation)\n            if (newSetpoint !== userSetpoint) {\n                console.log(`Auto adjusting setpoint: OAT=${outdoorTemp}°F, Setting to ${newSetpoint}°F`);\n                setUserSetpoint(newSetpoint);\n                setSetpointSaved(false);\n                // Auto-save the new setpoint\n                saveSetpointValue(newSetpoint);\n            }\n        }\n    }, [autoSetpointMode, outdoorTemp]);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                // Fetch board readings\n                const response = await fetch('/api/boards/current-readings');\n                if (response.ok) {\n                    const jsonData = await response.json();\n                    console.log('Fetched data:', jsonData);\n                    console.log('Number of inputs:', Object.keys(jsonData.inputs || {}).length);\n                    // Also fetch vibration sensor readings\n                    try {\n                        const vibResponse = await fetch('/api/vibration/readings');\n                        if (vibResponse.ok) {\n                            const vibData = await vibResponse.json();\n                            // Handle both object and array formats\n                            if (typeof vibData === 'object' && !Array.isArray(vibData)) {\n                                // Object format: {sensor_id: reading}\n                                Object.entries(vibData).forEach(([sensorId, reading]) => {\n                                    if (reading && reading.velocity_mms !== undefined) {\n                                        jsonData.inputs[`vib_${sensorId}_velocity`] = reading.velocity_mms;\n                                        jsonData.inputs[`vib_${sensorId}_temp`] = reading.temperature_f;\n                                    }\n                                });\n                            }\n                            else if (Array.isArray(vibData)) {\n                                // Array format\n                                vibData.forEach((reading) => {\n                                    if (reading.sensor_id && reading.velocity_mms !== undefined) {\n                                        jsonData.inputs[`vib_${reading.sensor_id}_velocity`] = reading.velocity_mms;\n                                        jsonData.inputs[`vib_${reading.sensor_id}_temp`] = reading.temperature_f;\n                                    }\n                                });\n                            }\n                        }\n                    }\n                    catch (vibErr) {\n                        console.error('Failed to fetch vibration readings:', vibErr);\n                    }\n                    // Apply saved labels from localStorage if they exist\n                    const savedLabels = localStorage.getItem('nodeRedOutputLabels');\n                    if (savedLabels) {\n                        jsonData.labels = JSON.parse(savedLabels);\n                    }\n                    setData(jsonData);\n                    setError(null);\n                }\n                else {\n                    setError('Failed to fetch board readings');\n                }\n            }\n            catch (err) {\n                setError('Connection error');\n            }\n            finally {\n                setLoading(false);\n            }\n        };\n        fetchData();\n        const interval = setInterval(fetchData, 10000); // Update every 10 seconds\n        return () => clearInterval(interval);\n    }, []);\n    const handleNext = () => {\n        setCurrentCard((prev) => (prev + 1) % cards.length);\n    };\n    const handlePrev = () => {\n        setCurrentCard((prev) => (prev - 1 + cards.length) % cards.length);\n    };\n    const handleSetpointChange = (value) => {\n        setUserSetpoint(value);\n        setSetpointSaved(false); // Mark as unsaved when changed\n    };\n    const saveSetpointValue = async (value) => {\n        try {\n            const response = await fetch('/api/setpoint', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ setpoint: value, autoMode: autoSetpointMode })\n            });\n            if (response.ok) {\n                console.log('Setpoint saved:', value);\n                setSetpointSaved(true);\n            }\n        }\n        catch (err) {\n            console.error('Error saving setpoint:', err);\n        }\n    };\n    const saveSetpoint = async () => {\n        setSavingSetpoint(true);\n        try {\n            const response = await fetch('/api/setpoint', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ setpoint: userSetpoint, autoMode: autoSetpointMode })\n            });\n            if (response.ok) {\n                console.log('Setpoint saved:', userSetpoint);\n                setSetpointSaved(true);\n                // Show saved indicator briefly\n                setTimeout(() => {\n                    setSavingSetpoint(false);\n                }, 1500);\n            }\n            else {\n                console.error('Failed to save setpoint');\n                setSavingSetpoint(false);\n            }\n        }\n        catch (err) {\n            console.error('Error saving setpoint:', err);\n            setSavingSetpoint(false);\n        }\n    };\n    const toggleAutoMode = () => {\n        const newMode = !autoSetpointMode;\n        setAutoSetpointMode(newMode);\n        // Save the preference\n        fetch('/api/setpoint', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ setpoint: userSetpoint, autoMode: newMode })\n        });\n    };\n    const renderSetpoint = () => {\n        return (_jsxs(\"div\", { className: \"setpoint-control\", children: [_jsxs(\"div\", { className: \"setpoint-display\", children: [_jsx(\"h4\", { children: \"System Setpoint\" }), _jsxs(\"div\", { className: \"setpoint-value\", children: [_jsx(\"span\", { className: \"setpoint-number\", children: userSetpoint }), _jsx(\"span\", { className: \"setpoint-unit\", children: \"\\u00B0F\" })] }), outdoorTemp !== null && (_jsxs(\"div\", { style: {\n                                fontSize: '12px',\n                                color: '#6b7280',\n                                marginTop: '4px'\n                            }, children: [\"OAT: \", outdoorTemp, \"\\u00B0F\"] }))] }), _jsxs(\"div\", { style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        gap: '10px',\n                        marginBottom: '15px'\n                    }, children: [_jsx(\"label\", { style: {\n                                fontSize: '14px',\n                                fontWeight: 500,\n                                color: autoSetpointMode ? '#14b8a6' : '#6b7280'\n                            }, children: \"Auto Mode\" }), _jsx(\"button\", { onClick: toggleAutoMode, style: {\n                                width: '50px',\n                                height: '24px',\n                                borderRadius: '12px',\n                                border: 'none',\n                                background: autoSetpointMode ? '#14b8a6' : '#cbd5e1',\n                                position: 'relative',\n                                cursor: 'pointer',\n                                transition: 'background 0.3s'\n                            }, children: _jsx(\"div\", { style: {\n                                    width: '20px',\n                                    height: '20px',\n                                    borderRadius: '10px',\n                                    background: 'white',\n                                    position: 'absolute',\n                                    top: '2px',\n                                    left: autoSetpointMode ? '28px' : '2px',\n                                    transition: 'left 0.3s',\n                                    boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n                                } }) }), _jsx(\"span\", { style: {\n                                fontSize: '11px',\n                                color: '#6b7280',\n                                marginLeft: '5px'\n                            }, children: autoSetpointMode ? 'OAT>60°=68° | OAT<59°=72°' : 'Manual' })] }), _jsxs(\"div\", { className: \"setpoint-adjuster\", children: [_jsx(\"button\", { className: \"setpoint-btn decrease\", onClick: () => handleSetpointChange(Math.max(50, userSetpoint - 1)), children: _jsx(\"i\", { className: \"fas fa-minus\" }) }), _jsx(\"input\", { type: \"range\", className: \"setpoint-slider\", min: \"50\", max: \"90\", value: userSetpoint, onChange: (e) => handleSetpointChange(Number(e.target.value)) }), _jsx(\"button\", { className: \"setpoint-btn increase\", onClick: () => handleSetpointChange(Math.min(90, userSetpoint + 1)), children: _jsx(\"i\", { className: \"fas fa-plus\" }) })] }), _jsxs(\"div\", { className: \"setpoint-presets\", children: [_jsx(\"button\", { className: \"preset-btn\", onClick: () => handleSetpointChange(68), children: \"68\\u00B0F\" }), _jsx(\"button\", { className: \"preset-btn\", onClick: () => handleSetpointChange(70), children: \"70\\u00B0F\" }), _jsx(\"button\", { className: \"preset-btn\", onClick: () => handleSetpointChange(72), children: \"72\\u00B0F\" }), _jsx(\"button\", { className: \"preset-btn\", onClick: () => handleSetpointChange(75), children: \"75\\u00B0F\" })] }), _jsx(\"div\", { className: \"setpoint-save-container\", children: _jsx(Button, { variant: \"teal\", size: \"default\", onClick: saveSetpoint, disabled: savingSetpoint || setpointSaved, className: \"save-setpoint-btn\", style: {\n                            backgroundColor: 'rgba(203, 213, 225, 0.2)', // Ultra light gray\n                            color: '#14b8a6', // Teal text\n                            border: '1px solid rgba(20, 184, 166, 0.2)',\n                            width: '100%',\n                            marginTop: '12px',\n                            fontSize: '14px',\n                            fontWeight: '500',\n                            height: '36px'\n                        }, children: savingSetpoint ? (_jsxs(_Fragment, { children: [_jsx(\"i\", { className: \"fas fa-spinner fa-spin\", style: { marginRight: '8px' } }), \"Saving...\"] })) : setpointSaved ? (_jsxs(_Fragment, { children: [_jsx(\"i\", { className: \"fas fa-check\", style: { marginRight: '8px' } }), \"Saved\"] })) : (_jsxs(_Fragment, { children: [_jsx(\"i\", { className: \"fas fa-save\", style: { marginRight: '8px' } }), \"Save Setpoint\"] })) }) })] }));\n    };\n    const renderInputs = () => {\n        if (!data || !data.inputs) {\n            console.log('No data or inputs available');\n            return null;\n        }\n        console.log('Rendering inputs:', Object.keys(data.inputs).length, 'items');\n        console.log('Input keys:', Object.keys(data.inputs));\n        console.log('Full input data:', data.inputs);\n        // Helper to format label from key\n        const formatLabel = (key) => {\n            // Remove technical suffixes like _0_10v_0_50a, _1k_rtd\n            let cleaned = key\n                .replace(/_0_10v_0_\\d+a/g, '')\n                .replace(/_1k_rtd/g, '')\n                .replace(/_10k/g, '')\n                .replace(/_/g, ' ')\n                .replace(/\\b\\w/g, l => l.toUpperCase());\n            // Fix common abbreviations\n            cleaned = cleaned\n                .replace(/Vfd/g, 'VFD')\n                .replace(/Hp/g, 'HP')\n                .replace(/Oat/g, 'OAT')\n                .replace(/L1/g, 'L1')\n                .replace(/L3/g, 'L3')\n                .replace(/Temp/g, 'Temp');\n            return cleaned;\n        };\n        // Helper to determine icon based on input name\n        const getIcon = (key) => {\n            if (key.includes('setpoint'))\n                return 'fas fa-crosshairs';\n            if (key.includes('vib_') && key.includes('velocity'))\n                return 'fas fa-wave-square';\n            if (key.includes('vib_') && key.includes('temp'))\n                return 'fas fa-thermometer-half';\n            if (key.includes('current') || key.includes('amps'))\n                return 'fas fa-bolt';\n            if (key.includes('temp') || key.includes('oat'))\n                return 'fas fa-thermometer-half';\n            if (key.includes('supply'))\n                return 'fas fa-wind';\n            if (key.includes('return'))\n                return 'fas fa-reply';\n            if (key.includes('tower'))\n                return 'fas fa-building';\n            if (key.includes('pump'))\n                return 'fas fa-tint';\n            if (key.includes('space'))\n                return 'fas fa-home';\n            return 'fas fa-chart-line';\n        };\n        // Helper to format value with appropriate units\n        const formatValue = (key, value) => {\n            if (value === null || value === undefined)\n                return '--';\n            let numValue = parseFloat(value);\n            if (isNaN(numValue))\n                return value;\n            // Apply baseline offsets for Tower 2 and Tower 3 current sensors\n            const keyLower = key.toLowerCase();\n            if (keyLower.includes('current') && keyLower.includes('0_10v_0_50a')) {\n                // Check if it's Tower 2 or Tower 3 current sensor\n                if (keyLower.includes('tower_2') && keyLower.includes('l1')) {\n                    // Tower 2 L1 baseline: 0.402V = 2.01A\n                    numValue = Math.max(0, numValue - 2.01);\n                }\n                else if (keyLower.includes('tower_2') && keyLower.includes('l3')) {\n                    // Tower 2 L3 baseline: 0.773V = 3.865A\n                    numValue = Math.max(0, numValue - 3.865);\n                }\n                else if (keyLower.includes('tower_3') && keyLower.includes('l1')) {\n                    // Tower 3 L1 baseline: 0.651V = 3.255A\n                    numValue = Math.max(0, numValue - 3.255);\n                }\n                else if (keyLower.includes('tower_3') && keyLower.includes('l3')) {\n                    // Tower 3 L3 baseline: 1.537V = 7.685A\n                    numValue = Math.max(0, numValue - 7.685);\n                }\n            }\n            // Determine units based on key name and value range\n            if (key.includes('vib_') && key.includes('velocity')) {\n                return `${numValue.toFixed(2)} mm/s`;\n            }\n            else if (key.includes('vib_') && key.includes('temp')) {\n                return `${numValue.toFixed(1)}°F`;\n            }\n            else if (key.includes('current') || key.includes('amps') || key.includes('l1') || key.includes('l3')) {\n                return `${numValue.toFixed(1)}A`;\n            }\n            else if (key.includes('voltage')) {\n                return `${numValue.toFixed(1)}V`;\n            }\n            else if (key.includes('pressure')) {\n                return `${numValue.toFixed(1)} PSI`;\n            }\n            else if (key.includes('humidity')) {\n                return `${numValue.toFixed(0)}%`;\n            }\n            else if (numValue > 900 && numValue < 1200) {\n                // This looks like raw BALCO 1000Ω value that wasn't converted\n                // BALCO formula: Temperature = (SQRT((0.00644 × R) - 1.6597) - 1.961) / 0.00322\n                const tempF = (Math.sqrt((0.00644 * numValue) - 1.6597) - 1.961) / 0.00322;\n                const clampedTemp = Math.max(-40, Math.min(250, tempF));\n                return `${clampedTemp.toFixed(1)}°F`;\n            }\n            else if (key.includes('temp') || key.includes('supply') || key.includes('return') || key.includes('oat') || key.includes('space')) {\n                // Temperature values\n                return `${numValue.toFixed(1)}°F`;\n            }\n            else {\n                // Default to showing value with no units\n                return numValue.toFixed(1);\n            }\n        };\n        // Sort inputs to show temperatures first, then currents\n        console.log('About to sort inputs, total:', Object.entries(data.inputs).length);\n        // Don't filter out any inputs - show all even if value is 0\n        const sortedInputs = Object.entries(data.inputs)\n            .filter(([key]) => key !== 'amps') // Remove the generic 'amps' entry\n            .sort(([a], [b]) => {\n            const aLower = a.toLowerCase();\n            const bLower = b.toLowerCase();\n            // Group items by category with priority\n            const getCategory = (key) => {\n                if (key === 'setpoint')\n                    return 1;\n                if (key.includes('outdoor_air_temp'))\n                    return 2;\n                if (key.includes('hp_loop_supply_temp'))\n                    return 3;\n                if (key.includes('hp_loop_return_temp'))\n                    return 4;\n                if (key.includes('tower_supply_temp'))\n                    return 5;\n                if (key.includes('tower_return_temp'))\n                    return 6;\n                if (key.includes('pump_1_current'))\n                    return 7;\n                if (key.includes('pump_2_current'))\n                    return 8;\n                if (key.includes('pump_3_current'))\n                    return 9;\n                if (key.includes('tower_1_vfd_current_l1'))\n                    return 10;\n                if (key.includes('tower_1_vfd_current_l3'))\n                    return 11;\n                if (key.includes('tower_2_vfd_current_l1'))\n                    return 12;\n                if (key.includes('tower_2_vfd_current_l3'))\n                    return 13;\n                if (key.includes('tower_3_vfd_current_l1'))\n                    return 14;\n                if (key.includes('tower_3_vfd_current_l3'))\n                    return 15;\n                if (key.includes('vfd_current_7'))\n                    return 16;\n                if (key.includes('vfd_current_8'))\n                    return 17;\n                return 99; // Everything else at the end\n            };\n            const aCat = getCategory(aLower);\n            const bCat = getCategory(bLower);\n            if (aCat !== bCat)\n                return aCat - bCat;\n            return a.localeCompare(b);\n        });\n        return (_jsx(\"div\", { className: \"readings-content scrollable\", style: { maxHeight: '400px', overflowY: 'auto' }, children: sortedInputs.map(([key, value]) => (_jsxs(\"div\", { className: \"reading-item\", children: [_jsx(\"i\", { className: getIcon(key) }), _jsx(\"span\", { className: \"reading-label\", children: formatLabel(key) }), _jsx(\"span\", { className: \"reading-value\", children: formatValue(key, value) })] }, key))) }));\n    };\n    const handleLabelChange = (type, key, value) => {\n        setEditedLabels((prev) => ({\n            ...prev,\n            [type]: {\n                ...prev[type],\n                [key]: value\n            }\n        }));\n    };\n    const saveLabels = () => {\n        // Save labels to localStorage so they persist\n        localStorage.setItem('nodeRedOutputLabels', JSON.stringify(editedLabels));\n        setEditMode(false);\n        // Update the displayed data with new labels\n        if (data) {\n            setData({\n                ...data,\n                labels: editedLabels\n            });\n        }\n    };\n    // Load saved labels from localStorage on mount\n    useEffect(() => {\n        const savedLabels = localStorage.getItem('nodeRedOutputLabels');\n        if (savedLabels) {\n            const parsed = JSON.parse(savedLabels);\n            setEditedLabels(parsed);\n            // Don't overwrite data here - it gets applied during fetch\n        }\n    }, []);\n    const renderOutputs = () => {\n        if (!data)\n            return null;\n        // Default labels if not provided\n        const defaultTriacLabels = {\n            triac1: 'Triac 1',\n            triac2: 'Triac 2',\n            triac3: 'Triac 3',\n            triac4: 'Triac 4'\n        };\n        const defaultAnalogLabels = {\n            ao1: 'AO 1',\n            ao2: 'AO 2',\n            ao3: 'AO 3',\n            ao4: 'AO 4'\n        };\n        const defaultRelayLabels = {};\n        for (let i = 1; i <= 16; i++) {\n            defaultRelayLabels[`relay${i}`] = `Relay ${i}`;\n        }\n        const triacLabels = editMode && editedLabels.triacs ? editedLabels.triacs : (data.labels?.triacs || defaultTriacLabels);\n        const analogLabels = editMode && editedLabels.analog ? editedLabels.analog : (data.labels?.analog || defaultAnalogLabels);\n        const relayLabels = editMode && editedLabels.relays ? editedLabels.relays : (data.labels?.relays || defaultRelayLabels);\n        // Initialize edited labels when entering edit mode\n        if (editMode && Object.keys(editedLabels).length === 0) {\n            setEditedLabels({\n                triacs: triacLabels,\n                analog: analogLabels,\n                relays: relayLabels\n            });\n        }\n        return (_jsxs(\"div\", { className: \"readings-content scrollable\", style: { maxHeight: '400px', overflowY: 'auto' }, children: [_jsxs(\"div\", { className: \"output-section\", children: [_jsx(\"h4\", { children: \"Digital Outputs (Triacs)\" }), Object.entries(data.outputs.triacs).map(([key, value]) => (_jsxs(\"div\", { className: \"reading-item\", children: [editMode ? (_jsx(\"input\", { type: \"text\", className: \"label-edit-input\", value: triacLabels[key] || '', onChange: (e) => handleLabelChange('triacs', key, e.target.value) })) : (_jsx(\"span\", { className: \"reading-label\", children: triacLabels[key] || defaultTriacLabels[key] })), _jsx(\"span\", { className: `triac-status ${value ? 'enabled' : 'disabled'}`, children: value ? 'ON' : 'OFF' })] }, key)))] }), data.outputs.relays && Object.keys(data.outputs.relays).length > 0 && (_jsxs(\"div\", { className: \"output-section\", children: [_jsx(\"h4\", { children: \"Relay Outputs\" }), Object.entries(data.outputs.relays).map(([key, value]) => (_jsxs(\"div\", { className: \"reading-item\", children: [editMode ? (_jsx(\"input\", { type: \"text\", className: \"label-edit-input\", value: relayLabels[key] || '', onChange: (e) => handleLabelChange('relays', key, e.target.value) })) : (_jsx(\"span\", { className: \"reading-label\", children: relayLabels[key] || defaultRelayLabels[key] || key })), _jsx(\"span\", { className: `triac-status ${value ? 'enabled' : 'disabled'}`, children: value ? 'ON' : 'OFF' })] }, key)))] })), _jsxs(\"div\", { className: \"output-section\", children: [_jsx(\"h4\", { children: \"Analog Outputs\" }), Object.entries(data.outputs.analog).map(([key, value]) => (_jsxs(\"div\", { className: \"reading-item\", children: [editMode ? (_jsx(\"input\", { type: \"text\", className: \"label-edit-input\", value: analogLabels[key] || '', onChange: (e) => handleLabelChange('analog', key, e.target.value) })) : (_jsx(\"span\", { className: \"reading-label\", children: analogLabels[key] || defaultAnalogLabels[key] })), _jsxs(\"div\", { className: \"analog-display\", children: [_jsxs(\"span\", { className: \"analog-voltage\", children: [(value * 0.1).toFixed(1), \"V\"] }), _jsxs(\"span\", { className: \"analog-percent\", children: [value, \"%\"] })] })] }, key)))] })] }));\n    };\n    const renderAlarms = () => {\n        if (!data)\n            return null;\n        if (data.alarms.length === 0) {\n            return (_jsxs(\"div\", { className: \"readings-content centered\", children: [_jsx(\"i\", { className: \"fas fa-check-circle alarm-ok\" }), _jsx(\"span\", { children: \"No Active Alarms\" })] }));\n        }\n        return (_jsx(\"div\", { className: \"readings-content scrollable\", children: data.alarms.map((alarm, index) => {\n                // Map type to status for styling\n                const status = alarm.status || alarm.type || 'warning';\n                return (_jsxs(\"div\", { className: `alarm-item ${status}`, children: [_jsxs(\"div\", { className: \"alarm-header\", children: [_jsx(\"i\", { className: `fas fa-exclamation-triangle alarm-icon ${status}` }), _jsx(\"span\", { className: \"alarm-name\", children: alarm.name })] }), _jsxs(\"div\", { className: \"alarm-details\", children: [_jsxs(\"span\", { children: [\"Value: \", alarm.value.toFixed(1), alarm.unit ? alarm.unit : ''] }), alarm.threshold && _jsxs(\"span\", { children: [\"Threshold: \", alarm.threshold.toFixed(1)] }), alarm.message && _jsx(\"span\", { children: alarm.message })] }), _jsx(\"div\", { className: \"alarm-time\", children: new Date(alarm.timestamp).toLocaleTimeString() })] }, alarm.id || index));\n            }) }));\n    };\n    const renderContent = () => {\n        switch (currentCard) {\n            case 0:\n                return renderSetpoint();\n            case 1:\n                return renderInputs();\n            case 2:\n                return renderOutputs();\n            case 3:\n                return renderAlarms();\n            default:\n                return null;\n        }\n    };\n    if (loading) {\n        return (_jsx(\"div\", { className: \"nodered-readings-card\", children: _jsx(\"div\", { className: \"readings-loading\", children: _jsx(\"div\", { className: \"spinner\" }) }) }));\n    }\n    return (_jsxs(\"div\", { className: \"nodered-readings-card\", children: [_jsxs(\"div\", { className: \"readings-header\", children: [_jsx(\"button\", { className: \"nav-btn\", onClick: handlePrev, children: _jsx(\"i\", { className: \"fas fa-chevron-left\" }) }), _jsx(\"h3\", { style: { flex: 1, textAlign: 'center' }, children: cards[currentCard] }), currentCard === 2 && (editMode ? (_jsx(\"button\", { className: \"edit-btn\", onClick: saveLabels, title: \"Save Labels\", children: _jsx(\"i\", { className: \"fas fa-save\" }) })) : (_jsx(\"button\", { className: \"edit-btn\", onClick: () => setEditMode(true), title: \"Edit Labels\", children: _jsx(\"i\", { className: \"fas fa-edit\" }) }))), _jsx(\"button\", { className: \"nav-btn\", onClick: handleNext, children: _jsx(\"i\", { className: \"fas fa-chevron-right\" }) })] }), _jsx(\"div\", { className: \"card-indicators\", children: cards.map((_, index) => (_jsx(\"span\", { className: `indicator ${index === currentCard ? 'active' : ''}`, onClick: () => setCurrentCard(index) }, index))) }), error ? (_jsxs(\"div\", { className: \"readings-error\", children: [_jsx(\"i\", { className: \"fas fa-exclamation-circle\" }), _jsx(\"span\", { children: error })] })) : (renderContent())] }));\n};\nexport default NodeRedReadings;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva } from \"class-variance-authority\";\nfunction cn(...inputs) {\n    return inputs.filter(Boolean).join(' ');\n}\nconst buttonVariants = cva(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n            outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\",\n            teal: \"bg-teal-500/10 text-teal-600 hover:bg-teal-500/20 border border-teal-200\",\n            sidebar: \"w-full justify-start text-left bg-transparent hover:bg-gradient-to-r hover:from-teal-500/10 hover:to-cyan-500/10 transition-all duration-200\",\n            sidebarActive: \"w-full justify-start text-left bg-gradient-to-r from-teal-500/20 to-cyan-500/20 border-l-3 border-teal-500\",\n        },\n        size: {\n            default: \"h-10 px-4 py-2\",\n            sm: \"h-9 rounded-md px-3\",\n            lg: \"h-11 rounded-md px-8\",\n            icon: \"h-10 w-10\",\n        },\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\",\n    },\n});\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (_jsx(Comp, { className: cn(buttonVariants({ variant, size, className })), ref: ref, ...props }));\n});\nButton.displayName = \"Button\";\nexport { Button, buttonVariants };\n"],"names":["currentCard","setCurrentCard","useState","data","setData","loading","setLoading","error","setError","editMode","setEditMode","editedLabels","setEditedLabels","userSetpoint","setUserSetpoint","savingSetpoint","setSavingSetpoint","setpointSaved","setSetpointSaved","autoSetpointMode","setAutoSetpointMode","outdoorTemp","setOutdoorTemp","cards","useEffect","async","response","fetch","ok","json","undefined","setpoint","method","headers","body","JSON","stringify","autoMode","err","console","loadSetpoint","fetchOutdoorTemp","weatherData","temperature","interval","setInterval","clearInterval","newSetpoint","log","saveSetpointValue","fetchData","jsonData","Object","keys","inputs","length","vibResponse","vibData","Array","isArray","forEach","reading","sensor_id","velocity_mms","temperature_f","entries","sensorId","vibErr","savedLabels","localStorage","getItem","labels","parse","handleSetpointChange","value","saveSetpoint","setTimeout","toggleAutoMode","newMode","handleLabelChange","type","key","prev","parsed","className","children","onClick","style","flex","textAlign","setItem","title","map","_","index","fontSize","color","marginTop","display","alignItems","justifyContent","gap","marginBottom","fontWeight","width","height","borderRadius","border","background","position","cursor","transition","top","left","boxShadow","marginLeft","Math","max","min","onChange","e","Number","target","variant","size","disabled","backgroundColor","marginRight","formatLabel","cleaned","replace","l","toUpperCase","getIcon","includes","formatValue","numValue","parseFloat","isNaN","keyLower","toLowerCase","toFixed","tempF","sqrt","sortedInputs","filter","sort","a","b","aLower","bLower","getCategory","aCat","bCat","localeCompare","maxHeight","overflowY","renderInputs","defaultTriacLabels","triac1","triac2","triac3","triac4","defaultAnalogLabels","ao1","ao2","ao3","ao4","defaultRelayLabels","i","triacLabels","triacs","analogLabels","analog","relayLabels","relays","outputs","renderOutputs","alarms","alarm","status","name","unit","threshold","message","Date","timestamp","toLocaleTimeString","id","cn","Boolean","join","buttonVariants","variants","default","destructive","outline","secondary","ghost","link","teal","sidebar","sidebarActive","sm","lg","icon","defaultVariants","Button","asChild","props","ref","Comp","displayName"],"sourceRoot":""}