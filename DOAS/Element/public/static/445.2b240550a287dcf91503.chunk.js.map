{"version":3,"file":"static/445.2b240550a287dcf91503.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/pages/Terminal.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * AutomataControls™ Remote Portal\n * Copyright © 2024 AutomataNexus, LLC. All rights reserved.\n *\n * PROPRIETARY AND CONFIDENTIAL\n * This software is proprietary to AutomataNexus and constitutes valuable\n * trade secrets. This software may not be copied, distributed, modified,\n * or disclosed to third parties without prior written authorization from\n * AutomataNexus. Use of this software is governed by a commercial license\n * agreement. Unauthorized use is strictly prohibited.\n *\n * AutomataNexusBms Controller Software\n */\nimport { useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { Terminal as XTerm } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { WebLinksAddon } from 'xterm-addon-web-links';\nimport 'xterm/css/xterm.css';\nconst Terminal = () => {\n    const terminalRef = useRef(null);\n    const termRef = useRef(null);\n    const socketRef = useRef(null);\n    const fitAddonRef = useRef(null);\n    useEffect(() => {\n        if (!terminalRef.current)\n            return;\n        // Initialize xterm with Neural Nexus theme\n        const term = new XTerm({\n            cursorBlink: true,\n            fontSize: 14,\n            fontFamily: 'JetBrains Mono, Menlo, Monaco, \"Courier New\", monospace',\n            theme: {\n                background: '#0a0e1a',\n                foreground: '#06b6d4',\n                cursor: '#06b6d4',\n                cursorAccent: '#0a0e1a',\n                selectionBackground: 'rgba(6, 182, 212, 0.3)',\n                black: '#000000',\n                red: '#ef4444',\n                green: '#10b981',\n                yellow: '#f59e0b',\n                blue: '#3b82f6',\n                magenta: '#8b5cf6',\n                cyan: '#06b6d4',\n                white: '#f0f9ff',\n                brightBlack: '#64748b',\n                brightRed: '#f87171',\n                brightGreen: '#34d399',\n                brightYellow: '#fbbf24',\n                brightBlue: '#60a5fa',\n                brightMagenta: '#a78bfa',\n                brightCyan: '#67e8f9',\n                brightWhite: '#ffffff'\n            },\n            allowTransparency: true,\n            windowsMode: false\n        });\n        // Load addons\n        const fitAddon = new FitAddon();\n        const webLinksAddon = new WebLinksAddon();\n        term.loadAddon(fitAddon);\n        term.loadAddon(webLinksAddon);\n        termRef.current = term;\n        fitAddonRef.current = fitAddon;\n        // Open terminal\n        term.open(terminalRef.current);\n        fitAddon.fit();\n        // Connect to WebSocket\n        const socket = io({\n            transports: ['polling', 'websocket'],\n            reconnection: true,\n            reconnectionAttempts: 5,\n            reconnectionDelay: 1000,\n            upgrade: true\n        });\n        socketRef.current = socket;\n        socket.on('connect', () => {\n            console.log('Terminal connected');\n            socket.emit('terminal-init', {\n                cols: term.cols,\n                rows: term.rows\n            });\n        });\n        socket.on('terminal-output', (data) => {\n            term.write(data);\n        });\n        socket.on('disconnect', () => {\n            console.log('Terminal disconnected');\n            term.write('\\r\\n\\x1b[31mConnection lost. Reconnecting...\\x1b[0m\\r\\n');\n        });\n        socket.on('reconnect', () => {\n            term.clear();\n            socket.emit('terminal-init', {\n                cols: term.cols,\n                rows: term.rows\n            });\n        });\n        // Handle terminal input\n        term.onData((data) => {\n            socket.emit('terminal-input', data);\n        });\n        // Handle terminal resize\n        term.onResize((size) => {\n            socket.emit('terminal-resize', {\n                cols: size.cols,\n                rows: size.rows\n            });\n        });\n        // Handle window resize\n        const handleResize = () => {\n            if (fitAddon) {\n                fitAddon.fit();\n            }\n        };\n        window.addEventListener('resize', handleResize);\n        // Focus terminal on mount\n        term.focus();\n        // Cleanup\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            if (socket) {\n                socket.disconnect();\n            }\n            if (term) {\n                term.dispose();\n            }\n        };\n    }, []);\n    const handleClear = () => {\n        if (termRef.current) {\n            termRef.current.clear();\n        }\n    };\n    const handleReset = () => {\n        if (termRef.current) {\n            termRef.current.reset();\n        }\n    };\n    const handleFit = () => {\n        if (fitAddonRef.current) {\n            fitAddonRef.current.fit();\n        }\n    };\n    const handleCopy = () => {\n        if (termRef.current && termRef.current.hasSelection()) {\n            const selection = termRef.current.getSelection();\n            navigator.clipboard.writeText(selection);\n        }\n    };\n    return (_jsxs(\"div\", { className: \"terminal-container\", children: [_jsxs(\"div\", { className: \"terminal-header\", children: [_jsxs(\"div\", { className: \"terminal-title\", children: [_jsx(\"i\", { className: \"ri-terminal-box-line\" }), _jsx(\"span\", { children: \"Neural Terminal\" }), _jsx(\"span\", { className: \"terminal-subtitle\", children: \"AutomataNexusBms Controller\" })] }), _jsxs(\"div\", { className: \"terminal-controls\", children: [_jsx(\"button\", { className: \"terminal-btn\", onClick: handleCopy, title: \"Copy Selection\", children: _jsx(\"i\", { className: \"ri-file-copy-line\" }) }), _jsx(\"button\", { className: \"terminal-btn\", onClick: handleClear, title: \"Clear Terminal\", children: _jsx(\"i\", { className: \"ri-delete-bin-line\" }) }), _jsx(\"button\", { className: \"terminal-btn\", onClick: handleReset, title: \"Reset Terminal\", children: _jsx(\"i\", { className: \"ri-refresh-line\" }) }), _jsx(\"button\", { className: \"terminal-btn\", onClick: handleFit, title: \"Fit to Window\", children: _jsx(\"i\", { className: \"ri-fullscreen-line\" }) })] })] }), _jsx(\"div\", { className: \"terminal-body\", ref: terminalRef })] }));\n};\nexport default Terminal;\n"],"names":["terminalRef","useRef","termRef","socketRef","fitAddonRef","useEffect","current","term","cursorBlink","fontSize","fontFamily","theme","background","foreground","cursor","cursorAccent","selectionBackground","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","allowTransparency","windowsMode","fitAddon","FitAddon","webLinksAddon","WebLinksAddon","loadAddon","open","fit","socket","io","transports","reconnection","reconnectionAttempts","reconnectionDelay","upgrade","on","console","log","emit","cols","rows","data","write","clear","onData","onResize","size","handleResize","window","addEventListener","focus","removeEventListener","disconnect","dispose","className","children","onClick","hasSelection","selection","getSelection","navigator","clipboard","writeText","title","reset","ref"],"sourceRoot":""}