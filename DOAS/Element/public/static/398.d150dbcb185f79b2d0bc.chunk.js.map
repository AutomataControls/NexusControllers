{"version":3,"file":"static/398.d150dbcb185f79b2d0bc.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/styles/vibration-monitor.css","webpack://automata-neural-nexus-portal/./src/styles/vibration-monitor.css?44f9","webpack://automata-neural-nexus-portal/./src/pages/VibrationMonitor.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Vibration Monitor - Light/Teal Theme matching main app */\n.vibration-monitor {\n  padding: 20px;\n  height: calc(100vh - 80px);\n  overflow-y: auto;\n  background: #f9fafb;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding: 20px;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.header-left h1 {\n  font-size: 24px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.btn-primary, .btn-secondary {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 10px 20px;\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.btn-primary {\n  background: linear-gradient(135deg, #14b8a6 0%, #0d9488 100%);\n  color: white;\n}\n\n.btn-primary:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 20px rgba(20, 184, 166, 0.3);\n}\n\n.btn-secondary {\n  background: white;\n  color: #374151;\n  border: 1px solid #d1d5db;\n}\n\n.btn-secondary:hover {\n  background: #f3f4f6;\n  border-color: #9ca3af;\n}\n\n.save-status {\n  padding: 8px 16px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  animation: fadeIn 0.3s ease;\n}\n\n.save-status.success {\n  background: #d1fae5;\n  color: #065f46;\n  border: 1px solid #a7f3d0;\n}\n\n.save-status.error {\n  background: #fee2e2;\n  color: #991b1b;\n  border: 1px solid #fecaca;\n}\n\n.sensors-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.sensor-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.sensor-card:hover {\n  border-color: #14b8a6;\n  box-shadow: 0 4px 20px rgba(20, 184, 166, 0.15);\n}\n\n.sensor-card.disabled {\n  opacity: 0.6;\n  background: #f9fafb;\n}\n\n.sensor-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.sensor-title {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.name-display {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.name-display h3 {\n  font-size: 18px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.name-edit {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.name-edit input {\n  padding: 6px 10px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  color: #1f2937;\n  font-size: 16px;\n  width: 200px;\n}\n\n.sensor-port {\n  padding: 4px 8px;\n  background: #f3f4f6;\n  border-radius: 4px;\n  color: #6b7280;\n  font-size: 12px;\n  font-family: monospace;\n}\n\n.sensor-controls {\n  display: flex;\n  gap: 8px;\n}\n\n.btn-icon {\n  padding: 8px;\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  color: #6b7280;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.btn-icon:hover {\n  background: #f3f4f6;\n  color: #374151;\n  border-color: #9ca3af;\n}\n\n.btn-icon.active {\n  background: #d1fae5;\n  color: #14b8a6;\n  border-color: #14b8a6;\n}\n\n.btn-icon.danger:hover {\n  background: #fee2e2;\n  color: #ef4444;\n  border-color: #ef4444;\n}\n\n/* Threshold Control Section */\n.threshold-control {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background: #f9fafb;\n  border-radius: 8px;\n  margin-bottom: 10px;\n}\n\n.threshold-control label {\n  font-size: 14px;\n  color: #374151;\n  font-weight: 500;\n}\n\n.threshold-input {\n  width: 80px;\n  padding: 6px 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n  text-align: center;\n}\n\n.threshold-save {\n  padding: 6px 12px;\n  background: #14b8a6;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.threshold-save:hover {\n  background: #0d9488;\n  transform: translateY(-1px);\n}\n\n/* Baseline Control Section */\n.baseline-control {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px;\n  background: #f3f9ff;\n  border: 1px solid #bfdbfe;\n  border-radius: 8px;\n  margin-bottom: 15px;\n}\n\n.baseline-btn {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 4px 8px;\n  background: #0ea5e9;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.baseline-btn:hover:not(:disabled) {\n  background: #0284c7;\n  transform: translateY(-1px);\n}\n\n.baseline-btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.baseline-info {\n  font-size: 14px;\n  color: #1e40af;\n  font-weight: 500;\n  padding: 4px 8px;\n  background: #dbeafe;\n  border-radius: 4px;\n}\n\n.baseline-clear-btn {\n  padding: 6px 10px;\n  background: white;\n  color: #ef4444;\n  border: 1px solid #fecaca;\n  border-radius: 6px;\n  font-size: 13px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.baseline-clear-btn:hover {\n  background: #fee2e2;\n  border-color: #ef4444;\n}\n\n.relative-toggle {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 14px;\n  color: #374151;\n  cursor: pointer;\n  margin-left: auto;\n}\n\n.relative-toggle input[type=\"checkbox\"] {\n  cursor: pointer;\n}\n\n.baseline-reference {\n  font-size: 12px;\n  color: #6b7280;\n  margin-left: 8px;\n  font-style: italic;\n}\n\n.sensor-readings {\n  margin-bottom: 20px;\n}\n\n.reading-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 15px;\n  margin-bottom: 15px;\n}\n\n.reading-item {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.reading-item .label {\n  font-size: 12px;\n  color: #6b7280;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.reading-item .value {\n  font-size: 16px;\n  font-weight: 600;\n  color: #1f2937;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.reading-item .value.large {\n  font-size: 20px;\n}\n\n.iso-zone {\n  padding: 4px 8px;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 14px;\n  display: inline-block;\n}\n\n.iso-zone.zone-A {\n  background: #d1fae5;\n  color: #065f46;\n  border: 1px solid #a7f3d0;\n}\n\n.iso-zone.zone-B {\n  background: #fed7aa;\n  color: #92400e;\n  border: 1px solid #fdba74;\n}\n\n.iso-zone.zone-C {\n  background: #fee2e2;\n  color: #991b1b;\n  border: 1px solid #fecaca;\n}\n\n.iso-zone.zone-D {\n  background: #fecaca;\n  color: #7f1d1d;\n  border: 1px solid #fca5a5;\n}\n\n.status {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 500;\n}\n\n.axis-readings {\n  display: flex;\n  gap: 15px;\n  padding: 10px;\n  background: #f9fafb;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n.axis {\n  flex: 1;\n  text-align: center;\n}\n\n.axis span {\n  font-size: 13px;\n  color: #6b7280;\n  font-family: monospace;\n}\n\n.sensor-graph {\n  margin-top: 20px;\n  padding: 15px;\n  background: #f9fafb;\n  border-radius: 8px;\n  border: 1px solid #e5e7eb;\n}\n\n/* Modal Styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 500px;\n  max-height: 80vh;\n  overflow-y: auto;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.modal-header h2 {\n  font-size: 20px;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.modal-body {\n  padding: 20px;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #374151;\n}\n\n.form-group input,\n.form-group select {\n  width: 100%;\n  padding: 10px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  color: #1f2937;\n  font-size: 14px;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 3px rgba(20, 184, 166, 0.1);\n}\n\n.form-group small {\n  display: block;\n  margin-top: 5px;\n  font-size: 12px;\n  color: #6b7280;\n}\n\n.form-actions {\n  display: flex;\n  gap: 10px;\n  justify-content: flex-end;\n  margin-top: 30px;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@media (max-width: 768px) {\n  .sensors-grid {\n    grid-template-columns: 1fr;\n  }\n\n  .reading-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  .axis-readings {\n    flex-direction: column;\n    gap: 8px;\n  }\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/vibration-monitor.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Vibration Monitor - Light/Teal Theme matching main app */\\n.vibration-monitor {\\n  padding: 20px;\\n  height: calc(100vh - 80px);\\n  overflow-y: auto;\\n  background: #f9fafb;\\n}\\n\\n.page-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 30px;\\n  padding: 20px;\\n  background: white;\\n  border-radius: 12px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.header-left {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n}\\n\\n.header-left h1 {\\n  font-size: 24px;\\n  font-weight: 600;\\n  color: #1f2937;\\n  margin: 0;\\n}\\n\\n.header-right {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.btn-primary, .btn-secondary {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  padding: 10px 20px;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  border: none;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.btn-primary {\\n  background: linear-gradient(135deg, #14b8a6 0%, #0d9488 100%);\\n  color: white;\\n}\\n\\n.btn-primary:hover {\\n  transform: translateY(-2px);\\n  box-shadow: 0 10px 20px rgba(20, 184, 166, 0.3);\\n}\\n\\n.btn-secondary {\\n  background: white;\\n  color: #374151;\\n  border: 1px solid #d1d5db;\\n}\\n\\n.btn-secondary:hover {\\n  background: #f3f4f6;\\n  border-color: #9ca3af;\\n}\\n\\n.save-status {\\n  padding: 8px 16px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  animation: fadeIn 0.3s ease;\\n}\\n\\n.save-status.success {\\n  background: #d1fae5;\\n  color: #065f46;\\n  border: 1px solid #a7f3d0;\\n}\\n\\n.save-status.error {\\n  background: #fee2e2;\\n  color: #991b1b;\\n  border: 1px solid #fecaca;\\n}\\n\\n.sensors-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.sensor-card {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  padding: 20px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  transition: all 0.3s ease;\\n}\\n\\n.sensor-card:hover {\\n  border-color: #14b8a6;\\n  box-shadow: 0 4px 20px rgba(20, 184, 166, 0.15);\\n}\\n\\n.sensor-card.disabled {\\n  opacity: 0.6;\\n  background: #f9fafb;\\n}\\n\\n.sensor-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n  padding-bottom: 15px;\\n  border-bottom: 1px solid #e5e7eb;\\n}\\n\\n.sensor-title {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n}\\n\\n.name-display {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.name-display h3 {\\n  font-size: 18px;\\n  font-weight: 600;\\n  color: #1f2937;\\n  margin: 0;\\n}\\n\\n.name-edit {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n}\\n\\n.name-edit input {\\n  padding: 6px 10px;\\n  background: white;\\n  border: 1px solid #d1d5db;\\n  border-radius: 6px;\\n  color: #1f2937;\\n  font-size: 16px;\\n  width: 200px;\\n}\\n\\n.sensor-port {\\n  padding: 4px 8px;\\n  background: #f3f4f6;\\n  border-radius: 4px;\\n  color: #6b7280;\\n  font-size: 12px;\\n  font-family: monospace;\\n}\\n\\n.sensor-controls {\\n  display: flex;\\n  gap: 8px;\\n}\\n\\n.btn-icon {\\n  padding: 8px;\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 6px;\\n  color: #6b7280;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.btn-icon:hover {\\n  background: #f3f4f6;\\n  color: #374151;\\n  border-color: #9ca3af;\\n}\\n\\n.btn-icon.active {\\n  background: #d1fae5;\\n  color: #14b8a6;\\n  border-color: #14b8a6;\\n}\\n\\n.btn-icon.danger:hover {\\n  background: #fee2e2;\\n  color: #ef4444;\\n  border-color: #ef4444;\\n}\\n\\n/* Threshold Control Section */\\n.threshold-control {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  padding: 10px;\\n  background: #f9fafb;\\n  border-radius: 8px;\\n  margin-bottom: 10px;\\n}\\n\\n.threshold-control label {\\n  font-size: 14px;\\n  color: #374151;\\n  font-weight: 500;\\n}\\n\\n.threshold-input {\\n  width: 80px;\\n  padding: 6px 10px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  text-align: center;\\n}\\n\\n.threshold-save {\\n  padding: 6px 12px;\\n  background: #14b8a6;\\n  color: white;\\n  border: none;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.threshold-save:hover {\\n  background: #0d9488;\\n  transform: translateY(-1px);\\n}\\n\\n/* Baseline Control Section */\\n.baseline-control {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  padding: 10px;\\n  background: #f3f9ff;\\n  border: 1px solid #bfdbfe;\\n  border-radius: 8px;\\n  margin-bottom: 15px;\\n}\\n\\n.baseline-btn {\\n  display: flex;\\n  align-items: center;\\n  gap: 4px;\\n  padding: 4px 8px;\\n  background: #0ea5e9;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.baseline-btn:hover:not(:disabled) {\\n  background: #0284c7;\\n  transform: translateY(-1px);\\n}\\n\\n.baseline-btn:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n.baseline-info {\\n  font-size: 14px;\\n  color: #1e40af;\\n  font-weight: 500;\\n  padding: 4px 8px;\\n  background: #dbeafe;\\n  border-radius: 4px;\\n}\\n\\n.baseline-clear-btn {\\n  padding: 6px 10px;\\n  background: white;\\n  color: #ef4444;\\n  border: 1px solid #fecaca;\\n  border-radius: 6px;\\n  font-size: 13px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n}\\n\\n.baseline-clear-btn:hover {\\n  background: #fee2e2;\\n  border-color: #ef4444;\\n}\\n\\n.relative-toggle {\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n  font-size: 14px;\\n  color: #374151;\\n  cursor: pointer;\\n  margin-left: auto;\\n}\\n\\n.relative-toggle input[type=\\\"checkbox\\\"] {\\n  cursor: pointer;\\n}\\n\\n.baseline-reference {\\n  font-size: 12px;\\n  color: #6b7280;\\n  margin-left: 8px;\\n  font-style: italic;\\n}\\n\\n.sensor-readings {\\n  margin-bottom: 20px;\\n}\\n\\n.reading-grid {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  gap: 15px;\\n  margin-bottom: 15px;\\n}\\n\\n.reading-item {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 5px;\\n}\\n\\n.reading-item .label {\\n  font-size: 12px;\\n  color: #6b7280;\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n}\\n\\n.reading-item .value {\\n  font-size: 16px;\\n  font-weight: 600;\\n  color: #1f2937;\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n}\\n\\n.reading-item .value.large {\\n  font-size: 20px;\\n}\\n\\n.iso-zone {\\n  padding: 4px 8px;\\n  border-radius: 4px;\\n  font-weight: 600;\\n  font-size: 14px;\\n  display: inline-block;\\n}\\n\\n.iso-zone.zone-A {\\n  background: #d1fae5;\\n  color: #065f46;\\n  border: 1px solid #a7f3d0;\\n}\\n\\n.iso-zone.zone-B {\\n  background: #fed7aa;\\n  color: #92400e;\\n  border: 1px solid #fdba74;\\n}\\n\\n.iso-zone.zone-C {\\n  background: #fee2e2;\\n  color: #991b1b;\\n  border: 1px solid #fecaca;\\n}\\n\\n.iso-zone.zone-D {\\n  background: #fecaca;\\n  color: #7f1d1d;\\n  border: 1px solid #fca5a5;\\n}\\n\\n.status {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-weight: 500;\\n}\\n\\n.axis-readings {\\n  display: flex;\\n  gap: 15px;\\n  padding: 10px;\\n  background: #f9fafb;\\n  border-radius: 8px;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.axis {\\n  flex: 1;\\n  text-align: center;\\n}\\n\\n.axis span {\\n  font-size: 13px;\\n  color: #6b7280;\\n  font-family: monospace;\\n}\\n\\n.sensor-graph {\\n  margin-top: 20px;\\n  padding: 15px;\\n  background: #f9fafb;\\n  border-radius: 8px;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n/* Modal Styles */\\n.modal-overlay {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1000;\\n}\\n\\n.modal-content {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  width: 90%;\\n  max-width: 500px;\\n  max-height: 80vh;\\n  overflow-y: auto;\\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\\n}\\n\\n.modal-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 20px;\\n  border-bottom: 1px solid #e5e7eb;\\n}\\n\\n.modal-header h2 {\\n  font-size: 20px;\\n  font-weight: 600;\\n  color: #1f2937;\\n  margin: 0;\\n}\\n\\n.modal-body {\\n  padding: 20px;\\n}\\n\\n.form-group {\\n  margin-bottom: 20px;\\n}\\n\\n.form-group label {\\n  display: block;\\n  margin-bottom: 8px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  color: #374151;\\n}\\n\\n.form-group input,\\n.form-group select {\\n  width: 100%;\\n  padding: 10px;\\n  background: white;\\n  border: 1px solid #d1d5db;\\n  border-radius: 6px;\\n  color: #1f2937;\\n  font-size: 14px;\\n}\\n\\n.form-group input:focus,\\n.form-group select:focus {\\n  outline: none;\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 3px rgba(20, 184, 166, 0.1);\\n}\\n\\n.form-group small {\\n  display: block;\\n  margin-top: 5px;\\n  font-size: 12px;\\n  color: #6b7280;\\n}\\n\\n.form-actions {\\n  display: flex;\\n  gap: 10px;\\n  justify-content: flex-end;\\n  margin-top: 30px;\\n}\\n\\n@keyframes fadeIn {\\n  from {\\n    opacity: 0;\\n    transform: translateY(-10px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@media (max-width: 768px) {\\n  .sensors-grid {\\n    grid-template-columns: 1fr;\\n  }\\n\\n  .reading-grid {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n\\n  .axis-readings {\\n    flex-direction: column;\\n    gap: 8px;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./vibration-monitor.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./vibration-monitor.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect, useCallback } from 'react';\nimport { Activity, AlertTriangle, Settings, Trash2, Save, Plus, Power, RefreshCw, Thermometer, Eye, EyeOff, Edit2, Check, X, Target } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ReferenceLine } from 'recharts';\nimport '../styles/vibration-monitor.css';\nconst VibrationMonitor = () => {\n    const [sensors, setSensors] = useState([]);\n    const [readings, setReadings] = useState(new Map());\n    const [historicalData, setHistoricalData] = useState(new Map());\n    const [availablePorts, setAvailablePorts] = useState([]);\n    const [showGraphs, setShowGraphs] = useState(new Map());\n    const [editingName, setEditingName] = useState(null);\n    const [newName, setNewName] = useState('');\n    const [saveStatus, setSaveStatus] = useState('');\n    const [selectedSensor, setSelectedSensor] = useState(null);\n    const [showRelative, setShowRelative] = useState(new Map());\n    const [pendingThresholdUpdates, setPendingThresholdUpdates] = useState(new Map());\n    // ISO 10816-3 Zone thresholds\n    const ISO_ZONES = {\n        A: { max: 2.8, color: '#10b981', label: 'Good' },\n        B: { max: 7.1, color: '#f59e0b', label: 'Acceptable' },\n        C: { max: 11.0, color: '#ef4444', label: 'Unsatisfactory' },\n        D: { max: Infinity, color: '#dc2626', label: 'Unacceptable' }\n    };\n    // Fetch sensor configurations\n    const fetchSensors = useCallback(async () => {\n        try {\n            const response = await fetch('/api/vibration/configs');\n            if (!response.ok) {\n                console.error('Failed to fetch sensors:', response.status);\n                return;\n            }\n            const data = await response.json();\n            // Ensure data is an array\n            const sensorsArray = Array.isArray(data) ? data : [];\n            setSensors(sensorsArray);\n            // Initialize graph visibility\n            const graphVisibility = new Map();\n            sensorsArray.forEach((sensor) => {\n                graphVisibility.set(sensor.sensor_id, true);\n            });\n            setShowGraphs(graphVisibility);\n        }\n        catch (error) {\n            console.error('Error fetching sensors:', error);\n        }\n    }, []);\n    // Fetch available ports\n    const fetchPorts = useCallback(async () => {\n        try {\n            const response = await fetch('/api/vibration/ports');\n            if (!response.ok)\n                return;\n            const data = await response.json();\n            setAvailablePorts(Array.isArray(data) ? data : []);\n        }\n        catch (error) {\n            console.error('Error fetching ports:', error);\n        }\n    }, []);\n    // Fetch current readings\n    const fetchReadings = useCallback(async () => {\n        try {\n            console.log('Fetching vibration readings...');\n            const response = await fetch('/api/vibration/readings');\n            if (!response.ok) {\n                console.warn('Vibration readings not available:', response.status);\n                return;\n            }\n            const data = await response.json();\n            console.log('Received readings:', data);\n            const readingsMap = new Map();\n            // Handle both object and array formats\n            if (typeof data === 'object' && !Array.isArray(data)) {\n                // Object format: {sensor_id: reading, ...}\n                Object.entries(data).forEach(([sensorId, reading]) => {\n                    readingsMap.set(sensorId, reading);\n                });\n            }\n            else if (Array.isArray(data)) {\n                // Array format\n                data.forEach((reading) => {\n                    readingsMap.set(reading.sensor_id, reading);\n                });\n            }\n            setReadings(readingsMap);\n        }\n        catch (error) {\n            console.warn('Vibration readings unavailable:', error);\n            // Don't throw error, just log it\n        }\n    }, []);\n    // Fetch historical data for graphs\n    const fetchHistoricalData = useCallback(async (sensorId) => {\n        try {\n            const response = await fetch(`/api/vibration/history/${sensorId}?hours=8`);\n            const data = await response.json();\n            // Format data for Recharts\n            const formatted = data.map((point) => ({\n                time: new Date(point.timestamp).toLocaleTimeString(),\n                velocity: point.velocity_mms,\n                temperature: point.temperature_f,\n                x: point.velocity_x,\n                y: point.velocity_y,\n                z: point.velocity_z\n            }));\n            setHistoricalData(prev => {\n                const newMap = new Map(prev);\n                newMap.set(sensorId, formatted);\n                return newMap;\n            });\n        }\n        catch (error) {\n            console.error('Error fetching historical data:', error);\n        }\n    }, []);\n    // Add new sensor\n    const addSensor = async () => {\n        const sensorId = `sensor_${Date.now()}`;\n        const newSensor = {\n            sensor_id: sensorId,\n            equipment_name: `Sensor ${sensors.length + 1}`,\n            port: availablePorts[0] || '/dev/ttyUSB0',\n            modbus_id: 0x50, // Default address\n            baud_rate: 9600,\n            alert_threshold_mms: 7.1,\n            enabled: false\n        };\n        try {\n            const token = sessionStorage.getItem('authToken');\n            const response = await fetch('/api/vibration/configs', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(newSensor)\n            });\n            if (response.ok) {\n                await fetchSensors();\n                setSaveStatus('Sensor added successfully');\n                setTimeout(() => setSaveStatus(''), 3000);\n                // Auto-open name editing for the new sensor\n                setEditingName(sensorId);\n                setNewName(`Sensor ${sensors.length + 1}`);\n            }\n        }\n        catch (error) {\n            console.error('Error adding sensor:', error);\n            setSaveStatus('Error adding sensor');\n        }\n    };\n    // Update sensor configuration\n    const updateSensor = async (sensor) => {\n        try {\n            const token = sessionStorage.getItem('authToken');\n            const response = await fetch(`/api/vibration/configs`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify(sensor)\n            });\n            if (response.ok) {\n                await fetchSensors();\n                setSaveStatus('Configuration saved');\n                setTimeout(() => setSaveStatus(''), 3000);\n            }\n        }\n        catch (error) {\n            console.error('Error updating sensor:', error);\n            setSaveStatus('Error saving configuration');\n        }\n    };\n    // Delete sensor\n    const deleteSensor = async (sensorId) => {\n        if (!confirm('Are you sure you want to delete this sensor?'))\n            return;\n        try {\n            const token = sessionStorage.getItem('authToken');\n            const response = await fetch(`/api/vibration/configs/${sensorId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            if (response.ok) {\n                // Remove from local state immediately\n                setSensors(prev => prev.filter(s => s.sensor_id !== sensorId));\n                setReadings(prev => {\n                    const newMap = new Map(prev);\n                    newMap.delete(sensorId);\n                    return newMap;\n                });\n                setHistoricalData(prev => {\n                    const newMap = new Map(prev);\n                    newMap.delete(sensorId);\n                    return newMap;\n                });\n                setShowGraphs(prev => {\n                    const newMap = new Map(prev);\n                    newMap.delete(sensorId);\n                    return newMap;\n                });\n                setSaveStatus('Sensor deleted');\n                setTimeout(() => setSaveStatus(''), 3000);\n            }\n        }\n        catch (error) {\n            console.error('Error deleting sensor:', error);\n            setSaveStatus('Error deleting sensor');\n        }\n    };\n    // Toggle sensor enabled state\n    const toggleSensor = async (sensor) => {\n        const updated = { ...sensor, enabled: !sensor.enabled };\n        await updateSensor(updated);\n    };\n    // Update sensor name\n    const updateSensorName = async (sensor, name) => {\n        const updated = { ...sensor, equipment_name: name };\n        await updateSensor(updated);\n        setEditingName(null);\n        setNewName('');\n    };\n    // Toggle graph visibility\n    const toggleGraph = (sensorId) => {\n        setShowGraphs(prev => {\n            const newMap = new Map(prev);\n            const newValue = !prev.get(sensorId);\n            newMap.set(sensorId, newValue);\n            // Fetch historical data when graph is turned on\n            if (newValue) {\n                fetchHistoricalData(sensorId);\n            }\n            return newMap;\n        });\n    };\n    // Capture baseline reading\n    const captureBaseline = async (sensor) => {\n        const reading = readings.get(sensor.sensor_id);\n        if (!reading) {\n            setSaveStatus('No reading available to capture');\n            setTimeout(() => setSaveStatus(''), 3000);\n            return;\n        }\n        const updated = {\n            ...sensor,\n            baseline_velocity: reading.velocity_mms || 0,\n            baseline_timestamp: new Date().toISOString()\n        };\n        try {\n            const token = sessionStorage.getItem('authToken');\n            const response = await fetch(`/api/vibration/baseline/${sensor.sensor_id}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    baseline_velocity: reading.velocity_mms || 0,\n                    baseline_timestamp: new Date().toISOString()\n                })\n            });\n            if (response.ok) {\n                // Update local state\n                setSensors(prev => prev.map(s => s.sensor_id === sensor.sensor_id ? updated : s));\n                setSaveStatus(`Baseline captured: ${(reading.velocity_mms || 0).toFixed(2)} mm/s`);\n                setTimeout(() => setSaveStatus(''), 3000);\n            }\n        }\n        catch (error) {\n            console.error('Error capturing baseline:', error);\n            setSaveStatus('Error capturing baseline');\n            setTimeout(() => setSaveStatus(''), 3000);\n        }\n    };\n    // Clear baseline\n    const clearBaseline = async (sensor) => {\n        const updated = {\n            ...sensor,\n            baseline_velocity: undefined,\n            baseline_timestamp: undefined\n        };\n        try {\n            const token = sessionStorage.getItem('authToken');\n            const response = await fetch(`/api/vibration/baseline/${sensor.sensor_id}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n            if (response.ok) {\n                setSensors(prev => prev.map(s => s.sensor_id === sensor.sensor_id ? updated : s));\n                setSaveStatus('Baseline cleared');\n                setTimeout(() => setSaveStatus(''), 3000);\n            }\n        }\n        catch (error) {\n            console.error('Error clearing baseline:', error);\n            setSaveStatus('Error clearing baseline');\n            setTimeout(() => setSaveStatus(''), 3000);\n        }\n    };\n    // Toggle relative display\n    const toggleRelative = (sensorId) => {\n        setShowRelative(prev => {\n            const newMap = new Map(prev);\n            newMap.set(sensorId, !prev.get(sensorId));\n            return newMap;\n        });\n    };\n    // Get zone color based on velocity\n    const getZoneColor = (velocity) => {\n        if (velocity <= ISO_ZONES.A.max)\n            return ISO_ZONES.A.color;\n        if (velocity <= ISO_ZONES.B.max)\n            return ISO_ZONES.B.color;\n        if (velocity <= ISO_ZONES.C.max)\n            return ISO_ZONES.C.color;\n        return ISO_ZONES.D.color;\n    };\n    // Get alert icon based on level\n    const getAlertIcon = (level) => {\n        switch (level) {\n            case 'Good':\n                return _jsx(Activity, { className: \"w-5 h-5 text-green-500\" });\n            case 'Acceptable':\n                return _jsx(Activity, { className: \"w-5 h-5 text-yellow-500\" });\n            case 'Warning':\n                return _jsx(AlertTriangle, { className: \"w-5 h-5 text-orange-500\" });\n            case 'Unsatisfactory':\n            case 'Unacceptable':\n                return _jsx(AlertTriangle, { className: \"w-5 h-5 text-red-500\" });\n            default:\n                return _jsx(Activity, { className: \"w-5 h-5 text-gray-500\" });\n        }\n    };\n    useEffect(() => {\n        fetchSensors();\n        fetchPorts();\n        // Fetch readings once on load\n        fetchReadings();\n        // Disable polling completely\n        // const interval = setInterval(() => {\n        //   fetchReadings();\n        // }, 120000);\n        // return () => clearInterval(interval);\n    }, []); // Only run once on mount\n    useEffect(() => {\n        // Disable all historical data fetching to prevent freezing\n        // const historicalInterval = setInterval(() => {\n        //   sensors.forEach(sensor => {\n        //     if (sensor.enabled && showGraphs.get(sensor.sensor_id)) {\n        //       fetchHistoricalData(sensor.sensor_id);\n        //     }\n        //   });\n        // }, 120000);\n        // Disable initial fetch for enabled sensors\n        // sensors.forEach(sensor => {\n        //   if (sensor.enabled && showGraphs.get(sensor.sensor_id)) {\n        //     fetchHistoricalData(sensor.sensor_id);\n        //   }\n        // });\n        // return () => clearInterval(historicalInterval);\n    }, [sensors, showGraphs]);\n    return (_jsxs(\"div\", { className: \"vibration-monitor\", children: [_jsxs(\"div\", { className: \"page-header\", children: [_jsxs(\"div\", { className: \"header-left\", children: [_jsx(Activity, { className: \"w-8 h-8 text-cyan-400\" }), _jsx(\"h1\", { children: \"Vibration Monitoring System\" })] }), _jsxs(\"div\", { className: \"header-right\", children: [_jsxs(\"button\", { onClick: fetchReadings, className: \"btn-secondary\", children: [_jsx(RefreshCw, { className: \"w-4 h-4\" }), \"Refresh Readings\"] }), _jsxs(\"button\", { onClick: fetchPorts, className: \"btn-secondary\", children: [_jsx(RefreshCw, { className: \"w-4 h-4\" }), \"Scan Ports\"] }), _jsxs(\"button\", { onClick: addSensor, className: \"btn-primary\", children: [_jsx(Plus, { className: \"w-4 h-4\" }), \"Add Sensor\"] }), saveStatus && (_jsx(\"span\", { className: `save-status ${saveStatus.includes('Error') ? 'error' : 'success'}`, children: saveStatus }))] })] }), _jsx(\"div\", { className: \"sensors-grid\", children: sensors.map(sensor => {\n                    const reading = readings.get(sensor.sensor_id);\n                    const history = historicalData.get(sensor.sensor_id) || [];\n                    const showGraph = showGraphs.get(sensor.sensor_id) || false;\n                    return (_jsxs(\"div\", { className: `sensor-card ${!sensor.enabled ? 'disabled' : ''}`, children: [_jsxs(\"div\", { className: \"sensor-header\", children: [_jsxs(\"div\", { className: \"sensor-title\", children: [editingName === sensor.sensor_id ? (_jsxs(\"div\", { className: \"name-edit\", children: [_jsx(\"input\", { type: \"text\", value: newName || sensor.equipment_name, onChange: (e) => setNewName(e.target.value), autoFocus: true }), _jsx(\"button\", { onClick: () => updateSensorName(sensor, newName || sensor.equipment_name), className: \"btn-icon\", children: _jsx(Check, { className: \"w-4 h-4\" }) }), _jsx(\"button\", { onClick: () => {\n                                                            setEditingName(null);\n                                                            setNewName('');\n                                                        }, className: \"btn-icon\", children: _jsx(X, { className: \"w-4 h-4\" }) })] })) : (_jsxs(\"div\", { className: \"name-display\", children: [_jsx(\"h3\", { children: sensor.equipment_name }), _jsx(\"button\", { onClick: () => {\n                                                            setEditingName(sensor.sensor_id);\n                                                            setNewName(sensor.equipment_name);\n                                                        }, className: \"btn-icon\", children: _jsx(Edit2, { className: \"w-4 h-4\" }) })] })), _jsx(\"span\", { className: \"sensor-port\", children: sensor.port })] }), _jsxs(\"div\", { className: \"sensor-controls\", children: [_jsx(\"button\", { onClick: () => toggleGraph(sensor.sensor_id), className: \"btn-icon\", title: showGraph ? 'Hide Graph' : 'Show Graph', children: showGraph ? _jsx(Eye, { className: \"w-4 h-4\" }) : _jsx(EyeOff, { className: \"w-4 h-4\" }) }), _jsx(\"button\", { onClick: () => toggleSensor(sensor), className: `btn-icon ${sensor.enabled ? 'active' : ''}`, title: sensor.enabled ? 'Disable' : 'Enable', children: _jsx(Power, { className: \"w-4 h-4\" }) }), _jsx(\"button\", { onClick: () => setSelectedSensor(sensor.sensor_id), className: \"btn-icon\", title: \"Settings\", children: _jsx(Settings, { className: \"w-4 h-4\" }) }), _jsx(\"button\", { onClick: () => deleteSensor(sensor.sensor_id), className: \"btn-icon danger\", title: \"Delete\", children: _jsx(Trash2, { className: \"w-4 h-4\" }) })] })] }), _jsxs(\"div\", { className: \"threshold-control\", children: [_jsx(\"label\", { children: \"Alert Threshold:\" }), _jsx(\"input\", { type: \"number\", step: \"0.1\", className: \"threshold-input\", value: pendingThresholdUpdates.get(sensor.sensor_id) ?? sensor.alert_threshold_mms, onChange: (e) => {\n                                            const value = parseFloat(e.target.value) || 7.1;\n                                            setPendingThresholdUpdates(prev => {\n                                                const newMap = new Map(prev);\n                                                newMap.set(sensor.sensor_id, value);\n                                                return newMap;\n                                            });\n                                            // Update locally for immediate feedback\n                                            const updated = sensors.map(s => s.sensor_id === sensor.sensor_id\n                                                ? { ...s, alert_threshold_mms: value }\n                                                : s);\n                                            setSensors(updated);\n                                        }, onBlur: () => {\n                                            // Save on blur\n                                            if (pendingThresholdUpdates.has(sensor.sensor_id)) {\n                                                updateSensor(sensor);\n                                                setPendingThresholdUpdates(prev => {\n                                                    const newMap = new Map(prev);\n                                                    newMap.delete(sensor.sensor_id);\n                                                    return newMap;\n                                                });\n                                            }\n                                        } }), _jsx(\"span\", { style: { color: '#6b7280', fontSize: '14px' }, children: \"mm/s\" })] }), _jsxs(\"div\", { className: \"baseline-control\", children: [_jsxs(\"button\", { className: \"baseline-btn\", onClick: () => captureBaseline(sensor), disabled: !reading, title: \"Capture current reading as baseline\", children: [_jsx(Target, { className: \"w-3 h-3\" }), \"Set Baseline\"] }), sensor.baseline_velocity !== undefined && sensor.baseline_velocity !== null && (_jsxs(_Fragment, { children: [_jsxs(\"span\", { className: \"baseline-info\", children: [\"Baseline: \", sensor.baseline_velocity.toFixed(2), \" mm/s\"] }), _jsx(\"button\", { className: \"baseline-clear-btn\", onClick: () => clearBaseline(sensor), title: \"Clear baseline\", children: \"Clear\" }), _jsxs(\"label\", { className: \"relative-toggle\", children: [_jsx(\"input\", { type: \"checkbox\", checked: showRelative.get(sensor.sensor_id) || false, onChange: () => toggleRelative(sensor.sensor_id) }), _jsx(\"span\", { children: \"Show Relative\" })] })] }))] }), reading ? (reading.error ? (_jsxs(\"div\", { className: \"sensor-error\", children: [_jsx(AlertTriangle, { className: \"w-5 h-5 text-red-500\" }), _jsx(\"span\", { className: \"error-message\", children: reading.errorMessage || 'Sensor connection failed' }), _jsx(\"small\", { children: \"Check USB connection and port configuration\" })] })) : (_jsxs(\"div\", { className: \"sensor-readings\", children: [_jsxs(\"div\", { className: \"reading-grid\", children: [_jsxs(\"div\", { className: \"reading-item\", children: [_jsx(\"span\", { className: \"label\", children: \"Velocity\" }), _jsx(\"span\", { className: \"value large\", style: { color: getZoneColor(reading.velocity_mms || 0) }, children: showRelative.get(sensor.sensor_id) && sensor.baseline_velocity !== undefined\n                                                            ? `${((reading.velocity_mms || 0) - sensor.baseline_velocity >= 0 ? '+' : '')}${((reading.velocity_mms || 0) - sensor.baseline_velocity).toFixed(2)} mm/s`\n                                                            : `${(reading.velocity_mms || 0).toFixed(2)} mm/s` }), showRelative.get(sensor.sensor_id) && sensor.baseline_velocity !== undefined && (_jsxs(\"span\", { className: \"baseline-reference\", children: [\"(Actual: \", (reading.velocity_mms || 0).toFixed(2), \")\"] }))] }), _jsxs(\"div\", { className: \"reading-item\", children: [_jsx(\"span\", { className: \"label\", children: \"Temperature\" }), _jsxs(\"span\", { className: \"value\", children: [_jsx(Thermometer, { className: \"w-4 h-4 inline\" }), (reading.temperature_f || 0).toFixed(1), \"\\u00B0F\"] })] }), _jsxs(\"div\", { className: \"reading-item\", children: [_jsx(\"span\", { className: \"label\", children: \"ISO Zone\" }), _jsx(\"span\", { className: `iso-zone zone-${reading.iso_zone || 'unknown'}`, children: reading.iso_zone || 'Unknown' })] }), _jsxs(\"div\", { className: \"reading-item\", children: [_jsx(\"span\", { className: \"label\", children: \"Status\" }), _jsxs(\"div\", { className: \"status\", children: [getAlertIcon(reading.alert_level || 'Unknown'), _jsx(\"span\", { children: reading.alert_level || 'Unknown' })] })] })] }), _jsxs(\"div\", { className: \"axis-readings\", children: [_jsx(\"div\", { className: \"axis\", children: _jsxs(\"span\", { children: [\"X: \", reading.velocity_x?.toFixed(2) || '0.00'] }) }), _jsx(\"div\", { className: \"axis\", children: _jsxs(\"span\", { children: [\"Y: \", reading.velocity_y?.toFixed(2) || '0.00'] }) }), _jsx(\"div\", { className: \"axis\", children: _jsxs(\"span\", { children: [\"Z: \", reading.velocity_z?.toFixed(2) || '0.00'] }) })] })] }))) : (_jsxs(\"div\", { className: \"sensor-no-data\", children: [_jsx(Activity, { className: \"w-5 h-5 text-gray-400\" }), _jsx(\"span\", { children: sensor.enabled ? 'Waiting for data...' : 'Sensor disabled' })] })), showGraph && sensor.enabled && history.length > 0 && (_jsx(\"div\", { className: \"sensor-graph\", children: _jsx(ResponsiveContainer, { width: \"100%\", height: 200, children: _jsxs(LineChart, { data: history, children: [_jsx(CartesianGrid, { strokeDasharray: \"3 3\", stroke: \"#374151\" }), _jsx(XAxis, { dataKey: \"time\", stroke: \"#9ca3af\", tick: { fontSize: 10 } }), _jsx(YAxis, { stroke: \"#9ca3af\", tick: { fontSize: 10 }, domain: [0, 15] }), _jsx(Tooltip, { contentStyle: {\n                                                    backgroundColor: 'white',\n                                                    border: '1px solid #e5e7eb'\n                                                } }), _jsx(Legend, {}), _jsx(ReferenceLine, { y: 2.8, stroke: \"#10b981\", strokeDasharray: \"5 5\", label: \"Zone A\" }), _jsx(ReferenceLine, { y: 7.1, stroke: \"#f59e0b\", strokeDasharray: \"5 5\", label: \"Zone B\" }), _jsx(ReferenceLine, { y: 11.0, stroke: \"#ef4444\", strokeDasharray: \"5 5\", label: \"Zone C\" }), _jsx(ReferenceLine, { y: sensor.alert_threshold_mms, stroke: \"#dc2626\", strokeWidth: 2, label: \"Alert\" }), _jsx(Line, { type: \"monotone\", dataKey: \"velocity\", stroke: \"#06b6d4\", strokeWidth: 2, dot: false, name: \"RMS Velocity\", isAnimationActive: false }), _jsx(Line, { type: \"monotone\", dataKey: \"x\", stroke: \"#8b5cf6\", strokeWidth: 1, dot: false, name: \"X-axis\", isAnimationActive: false }), _jsx(Line, { type: \"monotone\", dataKey: \"y\", stroke: \"#ec4899\", strokeWidth: 1, dot: false, name: \"Y-axis\", isAnimationActive: false }), _jsx(Line, { type: \"monotone\", dataKey: \"z\", stroke: \"#10b981\", strokeWidth: 1, dot: false, name: \"Z-axis\", isAnimationActive: false })] }) }) }))] }, sensor.sensor_id));\n                }) }), selectedSensor && (_jsx(\"div\", { className: \"modal-overlay\", onClick: () => setSelectedSensor(null), children: _jsxs(\"div\", { className: \"modal-content\", onClick: (e) => e.stopPropagation(), children: [_jsxs(\"div\", { className: \"modal-header\", children: [_jsx(\"h2\", { children: \"Sensor Configuration\" }), _jsx(\"button\", { onClick: () => setSelectedSensor(null), className: \"btn-icon\", children: _jsx(X, { className: \"w-5 h-5\" }) })] }), _jsx(\"div\", { className: \"modal-body\", children: sensors.find(s => s.sensor_id === selectedSensor) && (_jsx(\"form\", { onSubmit: (e) => {\n                                    e.preventDefault();\n                                    const sensor = sensors.find(s => s.sensor_id === selectedSensor);\n                                    updateSensor(sensor);\n                                    setSelectedSensor(null);\n                                }, children: (() => {\n                                    const sensor = sensors.find(s => s.sensor_id === selectedSensor);\n                                    return (_jsxs(_Fragment, { children: [_jsxs(\"div\", { className: \"form-group\", children: [_jsx(\"label\", { children: \"Equipment Name\" }), _jsx(\"input\", { type: \"text\", value: sensor.equipment_name, onChange: (e) => {\n                                                            const updated = sensors.map(s => s.sensor_id === selectedSensor\n                                                                ? { ...s, equipment_name: e.target.value }\n                                                                : s);\n                                                            setSensors(updated);\n                                                        } })] }), _jsxs(\"div\", { className: \"form-group\", children: [_jsx(\"label\", { children: \"Port\" }), _jsx(\"select\", { value: sensor.port, onChange: (e) => {\n                                                            const updated = sensors.map(s => s.sensor_id === selectedSensor\n                                                                ? { ...s, port: e.target.value }\n                                                                : s);\n                                                            setSensors(updated);\n                                                        }, children: availablePorts.map(port => (_jsx(\"option\", { value: port, children: port }, port))) })] }), _jsxs(\"div\", { className: \"form-group\", children: [_jsx(\"label\", { children: \"Modbus Address (Hex)\" }), _jsx(\"input\", { type: \"text\", value: `0x${sensor.modbus_id.toString(16).toUpperCase()}`, onChange: (e) => {\n                                                            const value = parseInt(e.target.value, 16);\n                                                            if (!isNaN(value)) {\n                                                                const updated = sensors.map(s => s.sensor_id === selectedSensor\n                                                                    ? { ...s, modbus_id: value }\n                                                                    : s);\n                                                                setSensors(updated);\n                                                            }\n                                                        } })] }), _jsxs(\"div\", { className: \"form-group\", children: [_jsx(\"label\", { children: \"Baud Rate\" }), _jsxs(\"select\", { value: sensor.baud_rate, onChange: (e) => {\n                                                            const updated = sensors.map(s => s.sensor_id === selectedSensor\n                                                                ? { ...s, baud_rate: parseInt(e.target.value) }\n                                                                : s);\n                                                            setSensors(updated);\n                                                        }, children: [_jsx(\"option\", { value: \"9600\", children: \"9600\" }), _jsx(\"option\", { value: \"19200\", children: \"19200\" }), _jsx(\"option\", { value: \"38400\", children: \"38400\" }), _jsx(\"option\", { value: \"57600\", children: \"57600\" }), _jsx(\"option\", { value: \"115200\", children: \"115200\" })] })] }), _jsxs(\"div\", { className: \"form-group\", children: [_jsx(\"label\", { children: \"Alert Threshold (mm/s)\" }), _jsx(\"input\", { type: \"number\", step: \"0.1\", value: sensor.alert_threshold_mms, onChange: (e) => {\n                                                            const updated = sensors.map(s => s.sensor_id === selectedSensor\n                                                                ? { ...s, alert_threshold_mms: parseFloat(e.target.value) }\n                                                                : s);\n                                                            setSensors(updated);\n                                                        } }), _jsx(\"small\", { children: \"ISO 10816-3: Zone B=7.1, Zone C=11.0\" })] }), _jsxs(\"div\", { className: \"form-actions\", children: [_jsxs(\"button\", { type: \"submit\", className: \"btn-primary\", children: [_jsx(Save, { className: \"w-4 h-4\" }), \"Save Configuration\"] }), _jsx(\"button\", { type: \"button\", onClick: () => setSelectedSensor(null), className: \"btn-secondary\", children: \"Cancel\" })] })] }));\n                                })() })) })] }) }))] }));\n};\nexport default VibrationMonitor;\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","sensors","setSensors","useState","readings","setReadings","Map","historicalData","setHistoricalData","availablePorts","setAvailablePorts","showGraphs","setShowGraphs","editingName","setEditingName","newName","setNewName","saveStatus","setSaveStatus","selectedSensor","setSelectedSensor","showRelative","setShowRelative","pendingThresholdUpdates","setPendingThresholdUpdates","ISO_ZONES","fetchSensors","useCallback","async","response","fetch","ok","console","error","status","data","json","sensorsArray","Array","isArray","graphVisibility","forEach","sensor","set","sensor_id","fetchPorts","fetchReadings","log","warn","readingsMap","reading","Object","entries","sensorId","fetchHistoricalData","formatted","map","point","time","Date","timestamp","toLocaleTimeString","velocity","velocity_mms","temperature","temperature_f","x","velocity_x","y","velocity_y","z","velocity_z","prev","newMap","updateSensor","token","sessionStorage","getItem","method","headers","body","JSON","stringify","setTimeout","getAlertIcon","level","A","className","useEffect","children","onClick","now","newSensor","equipment_name","length","port","modbus_id","baud_rate","alert_threshold_mms","enabled","includes","get","history","showGraph","type","value","onChange","e","target","autoFocus","name","updated","updateSensorName","toggleGraph","newValue","title","toggleSensor","confirm","filter","s","delete","deleteSensor","step","parseFloat","onBlur","has","style","color","fontSize","baseline_velocity","baseline_timestamp","toISOString","toFixed","captureBaseline","disabled","undefined","clearBaseline","checked","toggleRelative","errorMessage","iso_zone","alert_level","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","tick","YAxis","domain","Tooltip","contentStyle","backgroundColor","border","Legend","ReferenceLine","label","strokeWidth","Line","dot","isAnimationActive","stopPropagation","find","onSubmit","preventDefault","toString","toUpperCase","parseInt","isNaN"],"sourceRoot":""}