{"version":3,"file":"static/397.0cdb99062fa94a403593.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/pages/Dashboard.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { Eye, EyeOff, Edit2, ChartCandlestick } from 'lucide-react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport { authenticatedFetch } from '../services/api';\nconst NodeRedReadings = lazy(() => import('../components/NodeRedReadings'));\nconst TrendGraph = lazy(() => import('../components/TrendGraph'));\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = ({ systemInfo }) => {\n    const [weatherData, setWeatherData] = useState(null);\n    const [servicesStatus, setServicesStatus] = useState({\n        nodeRed: 'checking',\n        neuralBMS: 'checking',\n        cloudflare: 'checking'\n    });\n    const [equipmentStatus, setEquipmentStatus] = useState({\n        fan: false,\n        dxStage1: false,\n        dxStage2: false,\n        heat: false,\n        modGas: 0\n    });\n    const [cpuHistory, setCpuHistory] = useState(Array(20).fill(0));\n    const [memHistory, setMemHistory] = useState(Array(20).fill(0));\n    const [timeLabels, setTimeLabels] = useState(Array(20).fill(''));\n    const [showIP, setShowIP] = useState(false);\n    const [ipAddress, setIpAddress] = useState('192.168.1.100'); // Default IP\n    const [showZipModal, setShowZipModal] = useState(false);\n    const [newZipCode, setNewZipCode] = useState('');\n    const [zipError, setZipError] = useState('');\n    const [savingZip, setSavingZip] = useState(false);\n    // Fetch IP address\n    useEffect(() => {\n        const fetchIP = async () => {\n            try {\n                const response = await authenticatedFetch('/api/network-info');\n                if (response.ok) {\n                    const data = await response.json();\n                    if (data.ip) {\n                        setIpAddress(data.ip);\n                    }\n                }\n            }\n            catch (error) {\n                console.error('Failed to fetch IP:', error);\n                // Try to get local IP from system info or use default\n                if (systemInfo && systemInfo.ip_address) {\n                    setIpAddress(systemInfo.ip_address);\n                }\n            }\n        };\n        fetchIP();\n    }, [systemInfo]);\n    // Save zip code function\n    const handleSaveZipCode = async () => {\n        // Validate zip code\n        if (!newZipCode || newZipCode.length !== 5 || !/^\\d{5}$/.test(newZipCode)) {\n            setZipError('Please enter a valid 5-digit ZIP code');\n            return;\n        }\n        setSavingZip(true);\n        setZipError('');\n        try {\n            const response = await authenticatedFetch('/api/settings/weather-location', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ zipCode: newZipCode }),\n            });\n            if (response.ok) {\n                // Close modal\n                setShowZipModal(false);\n                setNewZipCode('');\n                // Refresh weather data\n                const weatherResponse = await authenticatedFetch('/api/weather');\n                if (weatherResponse.ok) {\n                    const data = await weatherResponse.json();\n                    setWeatherData(data);\n                }\n            }\n            else {\n                const error = await response.json();\n                setZipError(error.message || 'Failed to save ZIP code');\n            }\n        }\n        catch (error) {\n            console.error('Failed to save ZIP code:', error);\n            setZipError('Failed to save ZIP code');\n        }\n        finally {\n            setSavingZip(false);\n        }\n    };\n    // Fetch weather\n    useEffect(() => {\n        const fetchWeather = async () => {\n            try {\n                const response = await authenticatedFetch('/api/weather');\n                if (response.ok) {\n                    const data = await response.json();\n                    setWeatherData(data);\n                }\n            }\n            catch (error) {\n                console.error('Failed to fetch weather:', error);\n            }\n        };\n        fetchWeather();\n        const interval = setInterval(fetchWeather, 600000);\n        return () => clearInterval(interval);\n    }, []);\n    // Check services\n    useEffect(() => {\n        const checkServices = async () => {\n            try {\n                const response = await fetch('/node-red/');\n                setServicesStatus(prev => ({ ...prev, nodeRed: response.ok ? 'online' : 'offline' }));\n            }\n            catch {\n                setServicesStatus(prev => ({ ...prev, nodeRed: 'offline' }));\n            }\n            setServicesStatus(prev => ({\n                ...prev,\n                neuralBMS: systemInfo ? 'online' : 'offline',\n                cloudflare: systemInfo ? 'online' : 'offline'\n            }));\n        };\n        checkServices();\n        const interval = setInterval(checkServices, 30000);\n        return () => clearInterval(interval);\n    }, [systemInfo]);\n    // Check valve status\n    useEffect(() => {\n        const checkEquipmentStatus = async () => {\n            try {\n                const response = await authenticatedFetch('/api/boards/current-readings');\n                if (response.ok) {\n                    const data = await response.json();\n                    // Read DOAS equipment status from MegaBas triacs and analog outputs\n                    setEquipmentStatus({\n                        fan: data.outputs?.triacs?.triac1 || false, // T1 - OA Damper/Supply Fan Enable\n                        dxStage1: data.outputs?.triacs?.triac3 || false, // T3 - Chiller Enable Stage 1\n                        dxStage2: data.outputs?.triacs?.triac4 || false, // T4 - Chiller Enable Stage 2\n                        heat: data.outputs?.triacs?.triac2 || false, // T2 - Heat Enable\n                        modGas: data.outputs?.analog?.ao2 || 0 // AO2 - Modulating Gas Valve voltage\n                    });\n                }\n            }\n            catch (error) {\n                console.error('Failed to check equipment status:', error);\n            }\n        };\n        checkEquipmentStatus();\n        const interval = setInterval(checkEquipmentStatus, 5000); // Check every 5 seconds\n        return () => clearInterval(interval);\n    }, []);\n    // Update charts\n    useEffect(() => {\n        if (!systemInfo)\n            return;\n        const now = new Date().toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            timeZone: 'America/New_York'\n        });\n        setCpuHistory(prev => [...prev.slice(1), parseFloat(systemInfo.cpu_usage || '0')]);\n        setMemHistory(prev => [...prev.slice(1), systemInfo.mem_percent || 0]);\n        setTimeLabels(prev => [...prev.slice(1), now]);\n    }, [systemInfo]);\n    const formatUptime = (seconds) => {\n        const days = Math.floor(seconds / 86400);\n        const hours = Math.floor((seconds % 86400) / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        return `${days}d ${hours}h ${minutes}m`;\n    };\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: { display: false },\n            tooltip: {\n                mode: 'index',\n                intersect: false,\n                backgroundColor: 'rgba(255, 255, 255, 0.95)',\n                titleColor: '#111827',\n                bodyColor: '#374151',\n                borderColor: '#e5e7eb',\n                borderWidth: 1\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n                max: 100,\n                ticks: {\n                    color: '#64748b',\n                    callback: function (value) {\n                        return value + '%';\n                    }\n                },\n                grid: {\n                    color: 'rgba(148, 163, 184, 0.1)',\n                    drawBorder: false\n                }\n            },\n            x: {\n                ticks: {\n                    color: '#64748b',\n                    maxRotation: 0,\n                    autoSkip: true,\n                    maxTicksLimit: 6\n                },\n                grid: { display: false }\n            }\n        }\n    };\n    const cpuChartData = {\n        labels: timeLabels,\n        datasets: [{\n                label: 'CPU Usage',\n                data: cpuHistory,\n                borderColor: '#14b8a6',\n                backgroundColor: 'rgba(20, 184, 166, 0.1)',\n                borderWidth: 2,\n                tension: 0.4,\n                fill: true,\n                pointRadius: 0,\n                pointHoverRadius: 4,\n                pointBackgroundColor: '#14b8a6'\n            }]\n    };\n    const memChartData = {\n        labels: timeLabels,\n        datasets: [{\n                label: 'Memory Usage',\n                data: memHistory,\n                borderColor: '#10b981',\n                backgroundColor: 'rgba(16, 185, 129, 0.1)',\n                borderWidth: 2,\n                tension: 0.4,\n                fill: true,\n                pointRadius: 0,\n                pointHoverRadius: 4,\n                pointBackgroundColor: '#10b981'\n            }]\n    };\n    if (!systemInfo) {\n        return (_jsxs(\"div\", { className: \"dashboard-loading\", children: [_jsx(\"div\", { className: \"spinner\" }), _jsx(\"div\", { children: \"Loading system information...\" })] }));\n    }\n    return (_jsxs(\"div\", { className: \"dashboard-container\", children: [_jsxs(\"div\", { className: \"status-buttons-row\", children: [_jsxs(\"button\", { className: `status-button nodered ${servicesStatus.nodeRed}`, children: [_jsx(\"div\", { className: \"status-icon\", children: _jsx(\"i\", { className: \"fas fa-project-diagram\" }) }), _jsx(\"div\", { className: \"status-text\", children: \"Node-RED\" })] }), _jsxs(\"button\", { className: `status-button neuralbms ${servicesStatus.neuralBMS}`, children: [_jsx(\"div\", { className: \"status-icon\", children: _jsx(\"i\", { className: \"fas fa-brain\" }) }), _jsx(\"div\", { className: \"status-text\", children: \"NeuralBMS\" })] }), _jsxs(\"button\", { className: `status-button cloudflare ${servicesStatus.cloudflare}`, children: [_jsx(\"div\", { className: \"status-icon\", children: _jsx(\"i\", { className: \"fas fa-cloud\" }) }), _jsx(\"div\", { className: \"status-text\", children: \"Cloudflare\" })] })] }), _jsxs(\"div\", { className: \"valve-status-row\", children: [_jsxs(\"div\", { className: `valve-indicator ${equipmentStatus.fan ? 'open' : 'closed'}`, children: [_jsx(\"div\", { className: \"valve-icon\", children: _jsx(ChartCandlestick, { size: 14 }) }), _jsxs(\"div\", { className: \"valve-info\", children: [_jsx(\"div\", { className: \"valve-text\", children: \"Fan\" }), _jsx(\"div\", { className: \"valve-state\", children: equipmentStatus.fan ? 'On' : 'Off' })] })] }), _jsxs(\"div\", { className: `valve-indicator ${equipmentStatus.dxStage1 ? 'open' : 'closed'}`, children: [_jsx(\"div\", { className: \"valve-icon\", children: _jsx(ChartCandlestick, { size: 14 }) }), _jsxs(\"div\", { className: \"valve-info\", children: [_jsx(\"div\", { className: \"valve-text\", children: \"DX Stage 1\" }), _jsx(\"div\", { className: \"valve-state\", children: equipmentStatus.dxStage1 ? 'On' : 'Off' })] })] }), _jsxs(\"div\", { className: `valve-indicator ${equipmentStatus.dxStage2 ? 'open' : 'closed'}`, children: [_jsx(\"div\", { className: \"valve-icon\", children: _jsx(ChartCandlestick, { size: 14 }) }), _jsxs(\"div\", { className: \"valve-info\", children: [_jsx(\"div\", { className: \"valve-text\", children: \"DX Stage 2\" }), _jsx(\"div\", { className: \"valve-state\", children: equipmentStatus.dxStage2 ? 'On' : 'Off' })] })] }), _jsxs(\"div\", { className: `valve-indicator ${equipmentStatus.heat ? 'open' : 'closed'}`, children: [_jsx(\"div\", { className: \"valve-icon\", children: _jsx(ChartCandlestick, { size: 14 }) }), _jsxs(\"div\", { className: \"valve-info\", children: [_jsx(\"div\", { className: \"valve-text\", children: \"Heat\" }), _jsx(\"div\", { className: \"valve-state\", children: equipmentStatus.heat ? 'On' : 'Off' })] })] }), _jsxs(\"div\", { className: `valve-indicator ${equipmentStatus.modGas > 0 ? 'open' : 'closed'}`, children: [_jsx(\"div\", { className: \"valve-icon\", children: _jsx(ChartCandlestick, { size: 14 }) }), _jsxs(\"div\", { className: \"valve-info\", children: [_jsx(\"div\", { className: \"valve-text\", children: \"ModGas\" }), _jsxs(\"div\", { className: \"valve-state\", children: [equipmentStatus.modGas.toFixed(1), \"V\"] })] })] })] }), _jsxs(\"div\", { className: \"weather-row\", children: [weatherData && (_jsxs(\"div\", { className: \"weather-card\", children: [_jsxs(\"div\", { className: \"weather-header\", children: [_jsx(\"img\", { src: `https://openweathermap.org/img/wn/${weatherData.icon}@4x.png`, alt: weatherData.condition, className: \"weather-main-icon\" }), _jsxs(\"div\", { className: \"weather-main-info\", children: [_jsxs(\"div\", { className: \"weather-temperature\", children: [weatherData.temperature, \"\\u00B0F\"] }), _jsx(\"div\", { className: \"weather-description\", children: weatherData.condition }), _jsxs(\"div\", { className: \"weather-feels\", children: [\"Feels like \", weatherData.feelsLike, \"\\u00B0F\"] })] })] }), _jsxs(\"div\", { className: \"weather-stats\", children: [_jsxs(\"div\", { className: \"weather-stat\", children: [_jsx(\"i\", { className: \"fas fa-wind\" }), _jsxs(\"span\", { children: [weatherData.windSpeed, \" mph\"] })] }), _jsxs(\"div\", { className: \"weather-stat\", children: [_jsx(\"i\", { className: \"fas fa-tint\" }), _jsxs(\"span\", { children: [weatherData.humidity, \"%\"] })] }), _jsxs(\"div\", { className: \"weather-stat\", children: [_jsx(\"i\", { className: \"fas fa-eye\" }), _jsxs(\"span\", { children: [weatherData.visibility, \" mi\"] })] })] }), _jsxs(\"div\", { className: \"weather-footer\", children: [_jsx(\"i\", { className: \"fas fa-map-marker-alt\" }), _jsx(\"span\", { children: weatherData.location }), _jsx(\"button\", { className: \"weather-edit-btn\", onClick: () => {\n                                            setShowZipModal(true);\n                                            setNewZipCode('');\n                                            setZipError('');\n                                        }, title: \"Change location\", children: _jsx(Edit2, { size: 14 }) })] })] })), _jsx(Suspense, { fallback: _jsx(\"div\", { className: \"trend-graph-card\", children: _jsx(\"div\", { className: \"loading-placeholder\", children: \"Loading graph...\" }) }), children: _jsx(TrendGraph, {}) }), _jsx(Suspense, { fallback: _jsx(\"div\", { className: \"widget-card\", children: _jsx(\"div\", { className: \"loading-placeholder\", children: \"Loading readings...\" }) }), children: _jsx(NodeRedReadings, {}) })] }), _jsxs(\"div\", { className: \"metrics-row\", children: [_jsxs(\"div\", { className: \"metric-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper cpu\", children: _jsx(\"i\", { className: \"fas fa-thermometer-half\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsx(\"div\", { className: \"metric-label\", children: \"CPU Temperature\" }), _jsx(\"div\", { className: \"metric-value\", children: systemInfo.cpu_temp || 'N/A' }), _jsx(\"div\", { className: \"metric-status\", children: \"Normal\" })] })] }), _jsxs(\"div\", { className: \"metric-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper cpu\", children: _jsx(\"i\", { className: \"fas fa-microchip\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsx(\"div\", { className: \"metric-label\", children: \"CPU Usage\" }), _jsxs(\"div\", { className: \"metric-value\", children: [systemInfo.cpu_usage || '0', \"%\"] }), _jsx(\"div\", { className: \"metric-bar\", children: _jsx(\"div\", { className: \"metric-bar-fill cpu\", style: { width: `${systemInfo.cpu_usage || 0}%` } }) })] })] }), _jsxs(\"div\", { className: \"metric-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper memory\", children: _jsx(\"i\", { className: \"fas fa-memory\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsx(\"div\", { className: \"metric-label\", children: \"Memory Usage\" }), _jsxs(\"div\", { className: \"metric-value\", children: [systemInfo.mem_percent || 0, \"%\"] }), _jsx(\"div\", { className: \"metric-bar\", children: _jsx(\"div\", { className: \"metric-bar-fill memory\", style: { width: `${systemInfo.mem_percent || 0}%` } }) })] })] }), _jsxs(\"div\", { className: \"metric-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper disk\", children: _jsx(\"i\", { className: \"fas fa-hdd\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsx(\"div\", { className: \"metric-label\", children: \"Disk Usage\" }), _jsxs(\"div\", { className: \"metric-value\", children: [systemInfo.disk_percent || 0, \"%\"] }), _jsxs(\"div\", { className: \"metric-subtext\", children: [systemInfo.disk_used || 'N/A', \" / \", systemInfo.disk_total || 'N/A'] })] })] }), _jsxs(\"div\", { className: \"metric-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper uptime\", children: _jsx(\"i\", { className: \"fas fa-clock\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsx(\"div\", { className: \"metric-label\", children: \"Uptime\" }), _jsx(\"div\", { className: \"metric-value\", children: formatUptime(systemInfo.uptime || 0) }), _jsx(\"div\", { className: \"metric-status\", children: \"Stable\" })] })] }), _jsxs(\"div\", { className: \"metric-box network-box\", children: [_jsx(\"div\", { className: \"metric-icon-wrapper network\", children: _jsx(\"i\", { className: \"fas fa-wifi\" }) }), _jsxs(\"div\", { className: \"metric-content\", children: [_jsxs(\"div\", { className: \"metric-label\", children: [\"Network\", _jsx(\"button\", { className: \"ip-toggle-btn\", onClick: () => setShowIP(!showIP), title: showIP ? \"Hide IP\" : \"Show IP\", children: showIP ? _jsx(EyeOff, { size: 14 }) : _jsx(Eye, { size: 14 }) })] }), _jsx(\"div\", { className: \"metric-value\", children: \"Connected\" }), _jsx(\"div\", { className: \"metric-status\", children: showIP ? ipAddress : 'Strong Signal' })] })] })] }), _jsxs(\"div\", { className: \"charts-row\", children: [_jsxs(\"div\", { className: \"chart-box\", children: [_jsxs(\"div\", { className: \"chart-header\", children: [_jsx(\"h3\", { children: \"CPU Usage History\" }), _jsxs(\"span\", { className: \"chart-current\", children: [systemInfo.cpu_usage || 0, \"%\"] })] }), _jsx(\"div\", { className: \"chart-content\", children: _jsx(Line, { data: cpuChartData, options: chartOptions }) })] }), _jsxs(\"div\", { className: \"chart-box\", children: [_jsxs(\"div\", { className: \"chart-header\", children: [_jsx(\"h3\", { children: \"Memory Usage History\" }), _jsxs(\"span\", { className: \"chart-current\", children: [systemInfo.mem_percent || 0, \"%\"] })] }), _jsx(\"div\", { className: \"chart-content\", children: _jsx(Line, { data: memChartData, options: chartOptions }) })] })] }), showZipModal && (_jsx(\"div\", { className: \"modal-overlay\", onClick: () => setShowZipModal(false), children: _jsxs(\"div\", { className: \"modal-content\", onClick: (e) => e.stopPropagation(), children: [_jsxs(\"div\", { className: \"modal-header\", children: [_jsx(\"h3\", { children: \"Change Weather Location\" }), _jsx(\"button\", { className: \"modal-close-btn\", onClick: () => setShowZipModal(false), children: \"\\u00D7\" })] }), _jsxs(\"div\", { className: \"modal-body\", children: [_jsx(\"label\", { htmlFor: \"zipCode\", children: \"Enter ZIP Code:\" }), _jsx(\"input\", { id: \"zipCode\", type: \"text\", value: newZipCode, onChange: (e) => {\n                                        setNewZipCode(e.target.value);\n                                        setZipError('');\n                                    }, placeholder: \"e.g., 60601\", maxLength: 5, className: zipError ? 'input-error' : '' }), zipError && _jsx(\"div\", { className: \"error-message\", children: zipError })] }), _jsxs(\"div\", { className: \"modal-footer\", children: [_jsx(\"button\", { className: \"btn-secondary\", onClick: () => setShowZipModal(false), disabled: savingZip, children: \"Cancel\" }), _jsx(\"button\", { className: \"btn-primary\", onClick: handleSaveZipCode, disabled: savingZip, children: savingZip ? 'Saving...' : 'Save' })] })] }) }))] }));\n};\nexport default Dashboard;\n"],"names":["NodeRedReadings","lazy","TrendGraph","register","systemInfo","weatherData","setWeatherData","useState","servicesStatus","setServicesStatus","nodeRed","neuralBMS","cloudflare","equipmentStatus","setEquipmentStatus","fan","dxStage1","dxStage2","heat","modGas","cpuHistory","setCpuHistory","Array","fill","memHistory","setMemHistory","timeLabels","setTimeLabels","showIP","setShowIP","ipAddress","setIpAddress","showZipModal","setShowZipModal","newZipCode","setNewZipCode","zipError","setZipError","savingZip","setSavingZip","useEffect","async","response","ok","data","json","ip","error","console","ip_address","fetchIP","fetchWeather","interval","setInterval","clearInterval","checkServices","fetch","prev","checkEquipmentStatus","outputs","triacs","triac1","triac3","triac4","triac2","analog","ao2","now","Date","toLocaleTimeString","hour","minute","timeZone","slice","parseFloat","cpu_usage","mem_percent","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","backgroundColor","titleColor","bodyColor","borderColor","borderWidth","scales","y","beginAtZero","max","ticks","color","callback","value","grid","drawBorder","x","maxRotation","autoSkip","maxTicksLimit","cpuChartData","labels","datasets","label","tension","pointRadius","pointHoverRadius","pointBackgroundColor","memChartData","className","children","size","toFixed","src","icon","alt","condition","temperature","feelsLike","windSpeed","humidity","visibility","location","onClick","title","Suspense","fallback","cpu_temp","style","width","disk_percent","disk_used","disk_total","seconds","uptime","Math","floor","options","e","stopPropagation","htmlFor","id","type","onChange","target","placeholder","maxLength","disabled","length","test","method","headers","body","JSON","stringify","zipCode","weatherResponse","message"],"sourceRoot":""}