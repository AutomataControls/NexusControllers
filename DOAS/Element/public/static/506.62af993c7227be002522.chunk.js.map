{"version":3,"file":"static/506.62af993c7227be002522.chunk.js","mappings":"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","sources":["webpack://automata-neural-nexus-portal/./src/styles/switch.css?1f95","webpack://automata-neural-nexus-portal/./src/components/Switch.tsx","webpack://automata-neural-nexus-portal/./src/styles/admin.css","webpack://automata-neural-nexus-portal/./src/styles/switch.css","webpack://automata-neural-nexus-portal/./src/hooks/usePersistedState.ts","webpack://automata-neural-nexus-portal/./src/styles/admin.css?cb59","webpack://automata-neural-nexus-portal/./src/pages/Admin.tsx"],"sourcesContent":["\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./switch.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./switch.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\nimport '../styles/switch.css';\nconst Switch = ({ checked, onCheckedChange, disabled = false, className = '' }) => {\n    return (_jsx(SwitchPrimitive.Root, { className: `switch-root ${className}`, checked: checked, onCheckedChange: onCheckedChange, disabled: disabled, children: _jsx(SwitchPrimitive.Thumb, { className: \"switch-thumb\" }) }));\n};\nexport default Switch;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Admin Page Styles */\n.admin-container {\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n.admin-header {\n  margin-bottom: 2rem;\n  padding-bottom: 1.5rem;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.admin-title {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.5rem;\n}\n\n.admin-title h1 {\n  font-size: 2rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin: 0;\n}\n\n.admin-title svg {\n  color: #14b8a6;\n}\n\n.admin-subtitle {\n  color: #6b7280;\n  font-size: 1rem;\n  margin-left: 2.5rem;\n}\n\n/* Tabs */\n.admin-tabs {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.admin-tabs .tab-button {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  background: none;\n  border: none;\n  color: #6b7280;\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  position: relative;\n  transition: color 0.2s;\n}\n\n.admin-tabs .tab-button:hover {\n  color: #374151;\n}\n\n.admin-tabs .tab-button.active {\n  color: #14b8a6;\n}\n\n.admin-tabs .tab-button.active::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  right: 0;\n  height: 2px;\n  background-color: #14b8a6;\n}\n\n/* Content Area */\n.admin-content {\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  padding: 2rem;\n  min-height: 500px;\n}\n\n/* Audit Section */\n.audit-section {\n  width: 100%;\n}\n\n.audit-controls {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.audit-controls h2 {\n  margin: 0;\n  font-size: 1.5rem;\n  color: #1f2937;\n}\n\n.time-selector {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n}\n\n.time-selector label {\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.time-selector select {\n  padding: 0.5rem 1rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.375rem;\n  background: white;\n  color: #1f2937;\n  font-size: 0.95rem;\n  cursor: pointer;\n  transition: border-color 0.2s;\n}\n\n.time-selector select:hover {\n  border-color: #14b8a6;\n}\n\n.time-selector select:focus {\n  outline: none;\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 3px rgba(20, 184, 166, 0.1);\n}\n\n/* Audit Table */\n.audit-table-wrapper {\n  overflow-x: auto;\n}\n\n.audit-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.audit-table thead {\n  background-color: #f9fafb;\n}\n\n.audit-table th {\n  padding: 0.75rem 1rem;\n  text-align: left;\n  font-weight: 600;\n  color: #374151;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  border-bottom: 2px solid #e5e7eb;\n}\n\n.audit-table td {\n  padding: 0.75rem 1rem;\n  border-bottom: 1px solid #e5e7eb;\n  font-size: 0.9rem;\n}\n\n.time-cell {\n  color: #6b7280;\n  font-family: monospace;\n  font-size: 0.85rem;\n}\n\n.user-cell .username {\n  font-weight: 500;\n  color: #1f2937;\n}\n\n.action-cell .action-badge {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.375rem;\n  padding: 0.25rem 0.75rem;\n  background: #f3f4f6;\n  border-radius: 9999px;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #374151;\n}\n\n.resource-cell {\n  color: #374151;\n  font-family: monospace;\n  font-size: 0.875rem;\n}\n\n.ip-cell code {\n  padding: 0.125rem 0.375rem;\n  background: #f3f4f6;\n  border-radius: 0.25rem;\n  font-size: 0.85rem;\n  color: #4b5563;\n}\n\n.status-cell .status-badge {\n  font-weight: 600;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n}\n\n.details-cell .details {\n  color: #6b7280;\n  font-size: 0.85rem;\n  cursor: help;\n}\n\n/* No Data State */\n.no-data {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem;\n  text-align: center;\n}\n\n.no-data h3 {\n  margin: 1rem 0 0.5rem;\n  font-size: 1.25rem;\n  color: #1f2937;\n}\n\n.no-data p {\n  color: #6b7280;\n}\n\n/* Loading State */\n.loading {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4rem;\n  color: #6b7280;\n  font-size: 1.1rem;\n}\n\n/* Access Denied */\n.access-denied {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem;\n  text-align: center;\n}\n\n.access-denied h2 {\n  margin: 1rem 0 0.5rem;\n  font-size: 1.5rem;\n  color: #1f2937;\n}\n\n.access-denied p {\n  color: #6b7280;\n  font-size: 1rem;\n}\n\n/* Feature Placeholder */\n.feature-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 4rem 2rem;\n  text-align: center;\n}\n\n.feature-placeholder h2 {\n  margin: 1.5rem 0 1rem;\n  font-size: 1.75rem;\n  color: #1f2937;\n}\n\n.feature-placeholder p {\n  color: #6b7280;\n  font-size: 1rem;\n  margin-bottom: 2rem;\n  max-width: 500px;\n}\n\n.placeholder-badge {\n  display: inline-block;\n  padding: 0.5rem 1.5rem;\n  background: linear-gradient(135deg, #14b8a6 0%, #06b6d4 100%);\n  color: white;\n  border-radius: 9999px;\n  font-weight: 600;\n  font-size: 0.875rem;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  margin-bottom: 1rem;\n  box-shadow: 0 4px 6px rgba(20, 184, 166, 0.2);\n}\n\n.placeholder-features {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1.5rem;\n  margin-top: 2rem;\n  max-width: 600px;\n  width: 100%;\n}\n\n.feature-item {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 1rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n  border: 2px solid #e5e7eb;\n  transition: all 0.2s;\n}\n\n.feature-item:hover {\n  background: white;\n  border-color: #14b8a6;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.feature-icon {\n  font-size: 1.5rem;\n}\n\n.feature-item span:last-child {\n  font-weight: 500;\n  color: #374151;\n  font-size: 0.95rem;\n}\n\n/* Logic Engine Section */\n.logic-section {\n  width: 100%;\n}\n\n.logic-section h2 {\n  margin-bottom: 1.5rem;\n  color: #1f2937;\n  font-size: 1.3rem;\n}\n\n.equipment-selector {\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  padding: 15px;\n  margin-bottom: 15px;\n}\n\n.equipment-selector label {\n  display: block;\n  font-weight: 500;\n  color: #374151;\n  margin-bottom: 8px;\n  font-size: 13px;\n}\n\n.equipment-id-select {\n  width: 100%;\n  max-width: 500px;\n  padding: 8px 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 13px;\n  font-family: 'Courier New', monospace;\n  background: white;\n  cursor: pointer;\n}\n\n.equipment-id-select:focus {\n  border-color: #14b8a6;\n  outline: none;\n}\n\n.equipment-id-select:disabled {\n  background: #f3f4f6;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.equipment-info {\n  margin-top: 10px;\n  color: #6b7280;\n}\n\n.existing-equipment {\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.equipment-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 10px;\n  margin-top: 15px;\n}\n\n.equipment-card {\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  border: 2px solid #e5e7eb;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.equipment-card:hover {\n  border-color: #14b8a6;\n  background: #f0fdfa;\n}\n\n.equipment-card.selected {\n  border-color: #14b8a6;\n  background: #f0fdfa;\n}\n\n.equipment-id {\n  font-family: 'Courier New', monospace;\n  font-size: 12px;\n  color: #374151;\n  margin-bottom: 5px;\n}\n\n.equipment-status {\n  font-size: 12px;\n  color: #10b981;\n  font-weight: 600;\n}\n\n.logic-controls {\n  background: #f9fafb;\n  border: 1px solid #e5e7eb;\n  border-radius: 6px;\n  padding: 12px 15px;\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.auto-run-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 10px;\n  background: white;\n  border-radius: 4px;\n  border: 1px solid #e5e7eb;\n}\n\n.polling-interval-selector {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: auto;\n}\n\n.polling-interval-selector label {\n  color: #6b7280;\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.interval-select {\n  padding: 5px 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 13px;\n  background: white;\n  cursor: pointer;\n  transition: border-color 0.2s;\n}\n\n.interval-select:hover {\n  border-color: #9ca3af;\n}\n\n.interval-select:focus {\n  outline: none;\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\n}\n\n.logic-enable-toggle {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.toggle-container {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.toggle-label-text {\n  color: #374151;\n  min-width: 100px;\n}\n\n.toggle-switch.large {\n  width: 40px;\n  height: 18px;\n}\n\n.toggle-switch.large .toggle-slider {\n  top: 1px;\n  left: 1px;\n  width: 16px;\n  height: 16px;\n}\n\n.toggle-switch.large input:checked + .toggle-slider {\n  transform: translateX(22px);\n}\n\n.status-text {\n  font-weight: 600;\n  padding: 3px 10px;\n  border-radius: 4px;\n  min-width: 70px;\n  text-align: center;\n  font-size: 12px;\n}\n\n.status-text.enabled {\n  background: #10b981;\n  color: white;\n}\n\n.status-text.disabled {\n  background: #6b7280;\n  color: white;\n}\n\n.config-warning {\n  background: #fef3c7;\n  border: 1px solid #fbbf24;\n  color: #92400e;\n  padding: 6px 10px;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.logic-upload {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1.5rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.upload-controls {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.logic-actions {\n  display: flex;\n  gap: 1rem;\n}\n\n.file-name {\n  color: #374151;\n  font-weight: 500;\n  padding: 0.5rem 1rem;\n  background: white;\n  border-radius: 0.375rem;\n  border: 1px solid #e5e7eb;\n}\n\n.logic-editor {\n  margin-bottom: 2rem;\n}\n\n.editor-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.editor-header h3 {\n  margin: 0;\n  color: #374151;\n}\n\n.editor-actions {\n  display: flex;\n  gap: 0.75rem;\n}\n\n.btn-modify {\n  padding: 6px 14px;\n  background: #8b5cf6;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.2s;\n}\n\n.btn-modify:hover {\n  background: #7c3aed;\n}\n\n.btn-save-changes {\n  padding: 6px 14px;\n  background: #10b981;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.2s;\n}\n\n.btn-save-changes:hover {\n  background: #059669;\n}\n\n.btn-cancel {\n  padding: 6px 14px;\n  background: #6b7280;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.2s;\n}\n\n.btn-cancel:hover {\n  background: #4b5563;\n}\n\n.logic-editor textarea {\n  width: 100%;\n  min-height: 400px;\n  padding: 1rem;\n  font-family: 'Courier New', monospace;\n  font-size: 0.9rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  background: #1f2937;\n  color: #10b981;\n  resize: vertical;\n  transition: border-color 0.2s, box-shadow 0.2s;\n}\n\n.logic-editor textarea.readonly {\n  background: #1a1f2e;\n  cursor: default;\n}\n\n.logic-editor textarea.editing {\n  border-color: #8b5cf6;\n  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);\n}\n\n.edit-indicator {\n  margin-top: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: #f0f9ff;\n  border: 1px solid #0ea5e9;\n  border-radius: 0.375rem;\n  color: #0c4a6e;\n  font-size: 0.875rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.logic-output {\n  padding: 1.5rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.logic-output h3 {\n  margin-bottom: 1rem;\n  color: #374151;\n}\n\n.logic-output pre {\n  padding: 1rem;\n  background: #1f2937;\n  color: #10b981;\n  border-radius: 0.375rem;\n  font-family: 'Courier New', monospace;\n  font-size: 0.85rem;\n  overflow-x: auto;\n  white-space: pre-wrap;\n}\n\n/* Processing Logic Results */\n.processing-results {\n  margin-top: 2rem;\n  padding: 1.5rem;\n  background: #f9fafb;\n  border-radius: 0.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.processing-results h3 {\n  margin-bottom: 1rem;\n  color: #374151;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.processing-results h3::after {\n  content: '🔴';\n  font-size: 0.8rem;\n  animation: pulse 2s infinite;\n}\n\n@keyframes pulse {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.5; }\n}\n\n.results-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 1rem;\n  margin-bottom: 1rem;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.result-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.5rem;\n  padding: 1rem;\n  transition: all 0.2s;\n}\n\n.result-card:first-child {\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\n}\n\n.result-timestamp {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-bottom: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n}\n\n.result-data {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.result-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.25rem 0;\n  border-bottom: 1px solid #f3f4f6;\n}\n\n.result-row:last-child {\n  border-bottom: none;\n}\n\n.result-label {\n  font-size: 0.8rem;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.result-value {\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: #1f2937;\n}\n\n.result-value.heat {\n  color: #dc2626;\n}\n\n.result-value.cool {\n  color: #2563eb;\n}\n\n.result-value.active {\n  color: #10b981;\n}\n\n.result-value.inactive {\n  color: #6b7280;\n}\n\n.results-info {\n  text-align: center;\n  color: #6b7280;\n  padding-top: 0.5rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.results-info small {\n  font-size: 0.75rem;\n}\n\n/* Board Configuration Section */\n.boards-section h2 {\n  margin-bottom: 1.5rem;\n  color: #1f2937;\n}\n\n.boards-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  gap: 1.5rem;\n}\n\n.board-card {\n  padding: 1.5rem;\n  background: white;\n  border: 2px solid #e5e7eb;\n  border-radius: 0.75rem;\n  transition: all 0.2s;\n  min-width: 500px;\n}\n\n.board-card:hover {\n  border-color: #14b8a6;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.board-card h3 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n  font-size: 1.1rem;\n}\n\n.board-status {\n  margin-bottom: 1rem;\n}\n\n.board-toggle-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n}\n\n.board-toggle-container span {\n  color: #374151;\n  font-weight: 500;\n  font-size: 0.95rem;\n}\n\n/* Remove old toggle styles - using the existing .toggle-switch from PID section */\n\n.board-type {\n  margin-bottom: 1.5rem;\n}\n\n.board-type label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #6b7280;\n  font-weight: 500;\n  font-size: 0.9rem;\n}\n\n.board-type select {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.375rem;\n  background: white;\n  color: #1f2937;\n  font-size: 0.95rem;\n}\n\n.board-outputs h4 {\n  margin-bottom: 0.75rem;\n  color: #374151;\n  font-size: 1rem;\n}\n\n.output-group {\n  margin-bottom: 1.5rem;\n}\n\n.output-group h5 {\n  margin-bottom: 0.75rem;\n  color: #6b7280;\n  font-size: 0.9rem;\n  font-weight: 600;\n}\n\n.output-item {\n  display: grid;\n  grid-template-columns: 50px 1fr 50px;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.5rem;\n  padding: 0.375rem;\n}\n\n.output-item.compact {\n  display: grid;\n  grid-template-columns: 40px 1fr;\n  gap: 0.5rem;\n  margin-bottom: 0.375rem;\n}\n\n.output-item input[type=\"text\"] {\n  padding: 0.375rem 0.5rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.375rem;\n  font-size: 0.9rem;\n}\n\n.output-number {\n  font-weight: 600;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.output-item label {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #6b7280;\n  font-size: 0.9rem;\n}\n\n.output-item.compact span {\n  font-weight: 600;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n/* Input Configuration */\n.input-group {\n  margin-top: 1.5rem;\n  padding-top: 1.5rem;\n  border-top: 1px solid #e5e7eb;\n}\n\n.input-group h5 {\n  margin-bottom: 0.75rem;\n  color: #6b7280;\n  font-size: 0.9rem;\n  font-weight: 600;\n}\n\n.input-config-item {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  background: #f9fafb;\n  border-radius: 0.375rem;\n  flex-wrap: nowrap;\n}\n\n.input-config-item:hover {\n  background: #f3f4f6;\n}\n\n.input-number {\n  min-width: 40px;\n  font-weight: 600;\n  color: #6b7280;\n  font-size: 0.875rem;\n}\n\n.input-config-item input[type=\"text\"] {\n  flex: 1;\n  min-width: 200px;\n  padding: 0.375rem 0.5rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n}\n\n.input-config-item input[type=\"text\"]:focus {\n  outline: none;\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\n}\n\n.input-type-select,\n.conversion-select {\n  min-width: 100px;\n  max-width: 120px;\n  padding: 0.375rem 0.5rem;\n  border: 1px solid #e5e7eb;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  background: white;\n  cursor: pointer;\n}\n\n.input-type-select:focus,\n.conversion-select:focus {\n  outline: none;\n  border-color: #14b8a6;\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\n}\n\n/* Using common .toggle-switch styles for all toggles */\n\n/* Board Actions */\n.board-actions {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.board-actions .btn-save {\n  padding: 12px 30px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n  background: #14b8a6;\n  color: white;\n  border: none;\n}\n\n.board-actions .btn-save:hover {\n  background: #0d9488;\n}\n\n/* BMS Status Section */\n.status-section h2 {\n  margin-bottom: 1.5rem;\n  color: #1f2937;\n}\n\n.status-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  padding: 1.5rem;\n  background: #f9fafb;\n  border-radius: 0.75rem;\n}\n\n.connection-toggle .toggle-btn {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 0.75rem 1.5rem;\n  border: 2px solid #e5e7eb;\n  border-radius: 0.5rem;\n  background: white;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.toggle-btn.enabled {\n  background: #10b981;\n  color: white;\n  border-color: #10b981;\n}\n\n.toggle-btn.disabled {\n  background: #ef4444;\n  color: white;\n  border-color: #ef4444;\n}\n\n.bms-address {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  background: white;\n  border-radius: 0.5rem;\n  border: 1px solid #e5e7eb;\n}\n\n.bms-address span {\n  font-weight: 500;\n  color: #374151;\n}\n\n.status-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n}\n\n.status-card {\n  padding: 1.5rem;\n  background: white;\n  border-radius: 0.75rem;\n  border: 1px solid #e5e7eb;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n.status-card h3 {\n  margin-bottom: 1rem;\n  color: #1f2937;\n  font-size: 1rem;\n}\n\n.status-indicator {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 1.5rem;\n}\n\n.status-indicator.connected {\n  color: #10b981;\n}\n\n.status-indicator.disconnected {\n  color: #ef4444;\n}\n\n.status-indicator span {\n  font-weight: 600;\n  font-size: 1.1rem;\n}\n\n.status-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.detail-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 0;\n  border-bottom: 1px solid #f3f4f6;\n}\n\n.detail-row:last-child {\n  border-bottom: none;\n}\n\n.detail-row span:first-child {\n  color: #6b7280;\n  font-size: 0.9rem;\n}\n\n.detail-row span:last-child {\n  font-weight: 500;\n  color: #1f2937;\n}\n\n.source-badge {\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-size: 0.85rem;\n  font-weight: 600;\n}\n\n.source-badge.remote {\n  background: #dbeafe;\n  color: #1e40af;\n}\n\n.source-badge.local {\n  background: #fef3c7;\n  color: #92400e;\n}\n\n.failover-info {\n  padding: 1rem;\n}\n\n.failover-active,\n.failover-standby {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.75rem;\n  text-align: center;\n}\n\n.failover-active p,\n.failover-standby p {\n  margin: 0;\n  color: #374151;\n  font-size: 0.95rem;\n}\n\n.integration-status {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.integration-status .active {\n  color: #10b981;\n  font-weight: 600;\n}\n\n.integration-status .inactive {\n  color: #ef4444;\n  font-weight: 600;\n}\n\n/* Buttons */\n.btn-primary,\n.btn-success,\n.btn-info {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.625rem 1.25rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.95rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-primary {\n  background: #14b8a6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #0d9488;\n}\n\n.btn-success {\n  background: #10b981;\n  color: white;\n}\n\n.btn-success:hover {\n  background: #059669;\n}\n\n.btn-success:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.btn-info {\n  background: #06b6d4;\n  color: white;\n}\n\n.btn-info:hover {\n  background: #0891b2;\n}\n\n.btn-info:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .admin-container {\n    padding: 1rem;\n  }\n  \n  .admin-tabs {\n    flex-wrap: wrap;\n  }\n  \n  .audit-controls {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n  \n  .audit-table {\n    font-size: 0.8rem;\n  }\n  \n  .audit-table th,\n  .audit-table td {\n    padding: 0.5rem;\n  }\n  \n  .placeholder-features {\n    grid-template-columns: 1fr;\n  }\n}\n\n/* PID Controllers Section */\n.pid-section {\n  width: 100%;\n  padding: 20px;\n}\n\n.pid-section h2 {\n  margin-bottom: 1.5rem;\n  color: #1f2937;\n}\n\n.pid-controllers {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: 20px;\n  margin-bottom: 30px;\n}\n\n.pid-card {\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.pid-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #f3f4f6;\n}\n\n.pid-header h3 {\n  margin: 0;\n  color: #1f2937;\n  font-size: 1.2rem;\n}\n\n.pid-toggle {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.toggle-label {\n  font-size: 14px;\n  color: #6b7280;\n  font-weight: 500;\n}\n\n.pid-params {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.param-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n}\n\n.param-row label {\n  flex: 1;\n  font-size: 14px;\n  color: #4b5563;\n  font-weight: 500;\n}\n\n.param-row input[type=\"number\"] {\n  width: 100px;\n  padding: 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 14px;\n}\n\n.param-group {\n  background: #f9fafb;\n  border-radius: 8px;\n  padding: 15px;\n}\n\n.param-group h4 {\n  margin: 0 0 12px 0;\n  font-size: 14px;\n  color: #374151;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.voltage-input {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.voltage-unit {\n  font-size: 13px;\n  color: #6b7280;\n  min-width: 60px;\n}\n\n.action-toggle {\n  display: flex;\n  gap: 5px;\n  margin-bottom: 10px;\n}\n\n.action-btn {\n  flex: 1;\n  padding: 10px;\n  border: 2px solid #e5e7eb;\n  background: white;\n  color: #6b7280;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.action-btn:hover {\n  border-color: #d1d5db;\n}\n\n.action-btn.active {\n  background: #1f2937;\n  color: white;\n  border-color: #1f2937;\n}\n\n.action-help {\n  font-size: 12px;\n  color: #6b7280;\n  line-height: 1.4;\n}\n\n.action-help p {\n  margin: 0;\n}\n\n.output-display {\n  background: #f3f4f6;\n  border-radius: 8px;\n  padding: 15px;\n}\n\n.output-display h4 {\n  margin: 0 0 10px 0;\n  font-size: 14px;\n  color: #374151;\n}\n\n.output-value {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 10px;\n}\n\n.output-value .voltage {\n  font-size: 24px;\n  font-weight: bold;\n  color: #14b8a6;\n}\n\n.output-value .percentage {\n  font-size: 18px;\n  color: #6b7280;\n}\n\n.output-bar {\n  width: 100%;\n  height: 20px;\n  background: #e5e7eb;\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.output-fill {\n  height: 100%;\n  background: linear-gradient(90deg, #14b8a6, #06b6d4);\n  transition: width 0.3s ease;\n}\n\n.pid-actions {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin-top: 20px;\n}\n\n.btn-save,\n.btn-reset {\n  padding: 12px 30px;\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.btn-save {\n  background: #14b8a6;\n  color: white;\n  border: none;\n}\n\n.btn-save:hover {\n  background: #0d9488;\n}\n\n.btn-reset {\n  background: white;\n  color: #6b7280;\n  border: 2px solid #e5e7eb;\n}\n\n.btn-reset:hover {\n  border-color: #d1d5db;\n  background: #f9fafb;\n}\n\n/* Logic Engine Button Styles - Slimmer */\n.btn-success, .btn-info, .btn-danger, .btn-primary {\n  padding: 6px 14px;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.2s;\n  height: 32px;\n}\n\n.btn-success {\n  background: #10b981;\n  color: white;\n}\n\n.btn-success:hover {\n  background: #059669;\n}\n\n.btn-info {\n  background: #0891b2;\n  color: white;\n}\n\n.btn-info:hover {\n  background: #0e7490;\n}\n\n.btn-danger {\n  background: #ef4444;\n  color: white;\n}\n\n.btn-danger:hover {\n  background: #dc2626;\n}\n\n.btn-remove {\n  padding: 6px 14px;\n  background: #f87171;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  transition: all 0.2s;\n  height: 32px;\n}\n\n.btn-remove:hover {\n  background: #ef4444;\n}\n\n.btn-primary {\n  background: #14b8a6;\n  color: white;\n}\n\n.btn-primary:hover {\n  background: #0d9488;\n}\n\n/* Button icons should be smaller */\n.btn-success svg,\n.btn-info svg,\n.btn-danger svg,\n.btn-primary svg {\n  width: 14px;\n  height: 14px;\n}\n\n.btn-info:disabled,\n.btn-success:disabled,\n.btn-danger:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* Toggle Switch Styles - Black when ON, Grey when OFF */\n.toggle-switch {\n  position: relative;\n  width: 44px;\n  height: 20px;\n  background: #d1d5db;  /* Grey when OFF */\n  border-radius: 12px;\n  cursor: pointer;\n  transition: background 0.3s ease;\n}\n\n.toggle-switch input {\n  display: none;\n}\n\n.toggle-switch .toggle-slider {\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 16px;\n  height: 16px;\n  background: white;\n  border-radius: 50%;\n  transition: transform 0.3s ease;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n}\n\n.toggle-switch input:checked ~ .toggle-slider {\n  transform: translateX(24px);\n}\n\n/* Black background when checked/ON */\n.toggle-switch:has(input:checked),\n.toggle-switch input:checked + .toggle-slider::before {\n  background: #1f2937 !important;  /* Black when ON */\n}\n\n/* For browsers that don't support :has() */\n.toggle-switch.checked {\n  background: #1f2937 !important;  /* Black when ON */\n}\n\n/* BMS Status Section */\n.bms-status-section {\n  padding: 20px;\n}\n\n.bms-status-section h2 {\n  margin-bottom: 30px;\n  color: #1e293b;\n}\n\n.status-cards {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.status-card {\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e5e7eb;\n}\n\n.status-card h3 {\n  margin: 0 0 20px 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #e5e7eb;\n  font-size: 16px;\n  color: #374151;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #f3f4f6;\n}\n\n.status-item:last-child {\n  border-bottom: none;\n}\n\n.status-label {\n  font-weight: 500;\n  color: #6b7280;\n  font-size: 14px;\n}\n\n.status-value {\n  font-weight: 600;\n  color: #374151;\n  font-size: 14px;\n}\n\n.status-value.connected,\n.status-value.enabled {\n  color: #10b981;\n}\n\n.status-value.disconnected,\n.status-value.disabled {\n  color: #6b7280;\n}\n/* Input Configuration Items - DUPLICATE REMOVED */\n/* See lines 999-1008 for the main input-config-item styles */\n\n.input-config-item .input-number {\n  min-width: 40px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.input-config-item input[type=\"text\"] {\n  flex: 1;\n  padding: 6px 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 13px;\n}\n\n.input-config-item .input-type-select,\n.input-config-item .conversion-select,\n.input-config-item .scaling-select {\n  padding: 6px 8px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 13px;\n  background: white;\n  min-width: 100px;\n}\n\n.input-config-item .scaling-select {\n  min-width: 80px;\n  max-width: 100px;\n  margin-left: -0.5rem;\n}\n\n.board-toggle-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  background: #f3f4f6;\n  border-radius: 6px;\n  margin-bottom: 15px;\n}\n\n.board-toggle-container span {\n  font-weight: 500;\n  color: #374151;\n}\n\n/* Fix the output-item spacing for consistency */\n.output-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px;\n  background: #f9fafb;\n  border-radius: 6px;\n  margin-bottom: 8px;\n}\n\n.output-item .output-number {\n  min-width: 40px;\n  font-weight: 600;\n  color: #374151;\n}\n\n.output-item input[type=\"text\"] {\n  flex: 1;\n  padding: 6px 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 13px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/admin.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* Admin Page Styles */\\n.admin-container {\\n  padding: 2rem;\\n  max-width: 1400px;\\n  margin: 0 auto;\\n}\\n\\n.admin-header {\\n  margin-bottom: 2rem;\\n  padding-bottom: 1.5rem;\\n  border-bottom: 2px solid #e5e7eb;\\n}\\n\\n.admin-title {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.75rem;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.admin-title h1 {\\n  font-size: 2rem;\\n  font-weight: 600;\\n  color: #1f2937;\\n  margin: 0;\\n}\\n\\n.admin-title svg {\\n  color: #14b8a6;\\n}\\n\\n.admin-subtitle {\\n  color: #6b7280;\\n  font-size: 1rem;\\n  margin-left: 2.5rem;\\n}\\n\\n/* Tabs */\\n.admin-tabs {\\n  display: flex;\\n  gap: 1rem;\\n  margin-bottom: 2rem;\\n  border-bottom: 2px solid #e5e7eb;\\n}\\n\\n.admin-tabs .tab-button {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  padding: 0.75rem 1.5rem;\\n  background: none;\\n  border: none;\\n  color: #6b7280;\\n  font-size: 0.95rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  position: relative;\\n  transition: color 0.2s;\\n}\\n\\n.admin-tabs .tab-button:hover {\\n  color: #374151;\\n}\\n\\n.admin-tabs .tab-button.active {\\n  color: #14b8a6;\\n}\\n\\n.admin-tabs .tab-button.active::after {\\n  content: '';\\n  position: absolute;\\n  bottom: -2px;\\n  left: 0;\\n  right: 0;\\n  height: 2px;\\n  background-color: #14b8a6;\\n}\\n\\n/* Content Area */\\n.admin-content {\\n  background: white;\\n  border-radius: 0.75rem;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  padding: 2rem;\\n  min-height: 500px;\\n}\\n\\n/* Audit Section */\\n.audit-section {\\n  width: 100%;\\n}\\n\\n.audit-controls {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 1.5rem;\\n}\\n\\n.audit-controls h2 {\\n  margin: 0;\\n  font-size: 1.5rem;\\n  color: #1f2937;\\n}\\n\\n.time-selector {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.75rem;\\n}\\n\\n.time-selector label {\\n  color: #6b7280;\\n  font-weight: 500;\\n}\\n\\n.time-selector select {\\n  padding: 0.5rem 1rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.375rem;\\n  background: white;\\n  color: #1f2937;\\n  font-size: 0.95rem;\\n  cursor: pointer;\\n  transition: border-color 0.2s;\\n}\\n\\n.time-selector select:hover {\\n  border-color: #14b8a6;\\n}\\n\\n.time-selector select:focus {\\n  outline: none;\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 3px rgba(20, 184, 166, 0.1);\\n}\\n\\n/* Audit Table */\\n.audit-table-wrapper {\\n  overflow-x: auto;\\n}\\n\\n.audit-table {\\n  width: 100%;\\n  border-collapse: collapse;\\n}\\n\\n.audit-table thead {\\n  background-color: #f9fafb;\\n}\\n\\n.audit-table th {\\n  padding: 0.75rem 1rem;\\n  text-align: left;\\n  font-weight: 600;\\n  color: #374151;\\n  font-size: 0.875rem;\\n  text-transform: uppercase;\\n  letter-spacing: 0.05em;\\n  border-bottom: 2px solid #e5e7eb;\\n}\\n\\n.audit-table td {\\n  padding: 0.75rem 1rem;\\n  border-bottom: 1px solid #e5e7eb;\\n  font-size: 0.9rem;\\n}\\n\\n.time-cell {\\n  color: #6b7280;\\n  font-family: monospace;\\n  font-size: 0.85rem;\\n}\\n\\n.user-cell .username {\\n  font-weight: 500;\\n  color: #1f2937;\\n}\\n\\n.action-cell .action-badge {\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 0.375rem;\\n  padding: 0.25rem 0.75rem;\\n  background: #f3f4f6;\\n  border-radius: 9999px;\\n  font-size: 0.875rem;\\n  font-weight: 500;\\n  color: #374151;\\n}\\n\\n.resource-cell {\\n  color: #374151;\\n  font-family: monospace;\\n  font-size: 0.875rem;\\n}\\n\\n.ip-cell code {\\n  padding: 0.125rem 0.375rem;\\n  background: #f3f4f6;\\n  border-radius: 0.25rem;\\n  font-size: 0.85rem;\\n  color: #4b5563;\\n}\\n\\n.status-cell .status-badge {\\n  font-weight: 600;\\n  font-size: 0.875rem;\\n  text-transform: uppercase;\\n}\\n\\n.details-cell .details {\\n  color: #6b7280;\\n  font-size: 0.85rem;\\n  cursor: help;\\n}\\n\\n/* No Data State */\\n.no-data {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 4rem;\\n  text-align: center;\\n}\\n\\n.no-data h3 {\\n  margin: 1rem 0 0.5rem;\\n  font-size: 1.25rem;\\n  color: #1f2937;\\n}\\n\\n.no-data p {\\n  color: #6b7280;\\n}\\n\\n/* Loading State */\\n.loading {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 4rem;\\n  color: #6b7280;\\n  font-size: 1.1rem;\\n}\\n\\n/* Access Denied */\\n.access-denied {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 4rem;\\n  text-align: center;\\n}\\n\\n.access-denied h2 {\\n  margin: 1rem 0 0.5rem;\\n  font-size: 1.5rem;\\n  color: #1f2937;\\n}\\n\\n.access-denied p {\\n  color: #6b7280;\\n  font-size: 1rem;\\n}\\n\\n/* Feature Placeholder */\\n.feature-placeholder {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 4rem 2rem;\\n  text-align: center;\\n}\\n\\n.feature-placeholder h2 {\\n  margin: 1.5rem 0 1rem;\\n  font-size: 1.75rem;\\n  color: #1f2937;\\n}\\n\\n.feature-placeholder p {\\n  color: #6b7280;\\n  font-size: 1rem;\\n  margin-bottom: 2rem;\\n  max-width: 500px;\\n}\\n\\n.placeholder-badge {\\n  display: inline-block;\\n  padding: 0.5rem 1.5rem;\\n  background: linear-gradient(135deg, #14b8a6 0%, #06b6d4 100%);\\n  color: white;\\n  border-radius: 9999px;\\n  font-weight: 600;\\n  font-size: 0.875rem;\\n  text-transform: uppercase;\\n  letter-spacing: 0.05em;\\n  margin-bottom: 1rem;\\n  box-shadow: 0 4px 6px rgba(20, 184, 166, 0.2);\\n}\\n\\n.placeholder-features {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  gap: 1.5rem;\\n  margin-top: 2rem;\\n  max-width: 600px;\\n  width: 100%;\\n}\\n\\n.feature-item {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.75rem;\\n  padding: 1rem;\\n  background: #f9fafb;\\n  border-radius: 0.5rem;\\n  border: 2px solid #e5e7eb;\\n  transition: all 0.2s;\\n}\\n\\n.feature-item:hover {\\n  background: white;\\n  border-color: #14b8a6;\\n  transform: translateY(-2px);\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\\n}\\n\\n.feature-icon {\\n  font-size: 1.5rem;\\n}\\n\\n.feature-item span:last-child {\\n  font-weight: 500;\\n  color: #374151;\\n  font-size: 0.95rem;\\n}\\n\\n/* Logic Engine Section */\\n.logic-section {\\n  width: 100%;\\n}\\n\\n.logic-section h2 {\\n  margin-bottom: 1.5rem;\\n  color: #1f2937;\\n  font-size: 1.3rem;\\n}\\n\\n.equipment-selector {\\n  background: #f9fafb;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 6px;\\n  padding: 15px;\\n  margin-bottom: 15px;\\n}\\n\\n.equipment-selector label {\\n  display: block;\\n  font-weight: 500;\\n  color: #374151;\\n  margin-bottom: 8px;\\n  font-size: 13px;\\n}\\n\\n.equipment-id-select {\\n  width: 100%;\\n  max-width: 500px;\\n  padding: 8px 10px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  font-family: 'Courier New', monospace;\\n  background: white;\\n  cursor: pointer;\\n}\\n\\n.equipment-id-select:focus {\\n  border-color: #14b8a6;\\n  outline: none;\\n}\\n\\n.equipment-id-select:disabled {\\n  background: #f3f4f6;\\n  cursor: not-allowed;\\n  opacity: 0.6;\\n}\\n\\n.equipment-info {\\n  margin-top: 10px;\\n  color: #6b7280;\\n}\\n\\n.existing-equipment {\\n  background: #f9fafb;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 8px;\\n  padding: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.equipment-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\\n  gap: 10px;\\n  margin-top: 15px;\\n}\\n\\n.equipment-card {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 12px;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 6px;\\n  background: white;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n}\\n\\n.equipment-card:hover {\\n  border-color: #14b8a6;\\n  background: #f0fdfa;\\n}\\n\\n.equipment-card.selected {\\n  border-color: #14b8a6;\\n  background: #f0fdfa;\\n}\\n\\n.equipment-id {\\n  font-family: 'Courier New', monospace;\\n  font-size: 12px;\\n  color: #374151;\\n  margin-bottom: 5px;\\n}\\n\\n.equipment-status {\\n  font-size: 12px;\\n  color: #10b981;\\n  font-weight: 600;\\n}\\n\\n.logic-controls {\\n  background: #f9fafb;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 6px;\\n  padding: 12px 15px;\\n  margin-bottom: 15px;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 12px;\\n}\\n\\n.auto-run-controls {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n  padding: 10px;\\n  background: white;\\n  border-radius: 4px;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.polling-interval-selector {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  margin-left: auto;\\n}\\n\\n.polling-interval-selector label {\\n  color: #6b7280;\\n  font-size: 13px;\\n  font-weight: 500;\\n}\\n\\n.interval-select {\\n  padding: 5px 10px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  background: white;\\n  cursor: pointer;\\n  transition: border-color 0.2s;\\n}\\n\\n.interval-select:hover {\\n  border-color: #9ca3af;\\n}\\n\\n.interval-select:focus {\\n  outline: none;\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\\n}\\n\\n.logic-enable-toggle {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n\\n.toggle-container {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n  font-size: 13px;\\n  font-weight: 500;\\n}\\n\\n.toggle-label-text {\\n  color: #374151;\\n  min-width: 100px;\\n}\\n\\n.toggle-switch.large {\\n  width: 40px;\\n  height: 18px;\\n}\\n\\n.toggle-switch.large .toggle-slider {\\n  top: 1px;\\n  left: 1px;\\n  width: 16px;\\n  height: 16px;\\n}\\n\\n.toggle-switch.large input:checked + .toggle-slider {\\n  transform: translateX(22px);\\n}\\n\\n.status-text {\\n  font-weight: 600;\\n  padding: 3px 10px;\\n  border-radius: 4px;\\n  min-width: 70px;\\n  text-align: center;\\n  font-size: 12px;\\n}\\n\\n.status-text.enabled {\\n  background: #10b981;\\n  color: white;\\n}\\n\\n.status-text.disabled {\\n  background: #6b7280;\\n  color: white;\\n}\\n\\n.config-warning {\\n  background: #fef3c7;\\n  border: 1px solid #fbbf24;\\n  color: #92400e;\\n  padding: 6px 10px;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  display: flex;\\n  align-items: center;\\n  gap: 6px;\\n}\\n\\n.logic-upload {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 2rem;\\n  padding: 1.5rem;\\n  background: #f9fafb;\\n  border-radius: 0.5rem;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.upload-controls {\\n  display: flex;\\n  align-items: center;\\n  gap: 1rem;\\n}\\n\\n.logic-actions {\\n  display: flex;\\n  gap: 1rem;\\n}\\n\\n.file-name {\\n  color: #374151;\\n  font-weight: 500;\\n  padding: 0.5rem 1rem;\\n  background: white;\\n  border-radius: 0.375rem;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.logic-editor {\\n  margin-bottom: 2rem;\\n}\\n\\n.editor-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 1rem;\\n}\\n\\n.editor-header h3 {\\n  margin: 0;\\n  color: #374151;\\n}\\n\\n.editor-actions {\\n  display: flex;\\n  gap: 0.75rem;\\n}\\n\\n.btn-modify {\\n  padding: 6px 14px;\\n  background: #8b5cf6;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 6px;\\n  transition: all 0.2s;\\n}\\n\\n.btn-modify:hover {\\n  background: #7c3aed;\\n}\\n\\n.btn-save-changes {\\n  padding: 6px 14px;\\n  background: #10b981;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 6px;\\n  transition: all 0.2s;\\n}\\n\\n.btn-save-changes:hover {\\n  background: #059669;\\n}\\n\\n.btn-cancel {\\n  padding: 6px 14px;\\n  background: #6b7280;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 6px;\\n  transition: all 0.2s;\\n}\\n\\n.btn-cancel:hover {\\n  background: #4b5563;\\n}\\n\\n.logic-editor textarea {\\n  width: 100%;\\n  min-height: 400px;\\n  padding: 1rem;\\n  font-family: 'Courier New', monospace;\\n  font-size: 0.9rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.5rem;\\n  background: #1f2937;\\n  color: #10b981;\\n  resize: vertical;\\n  transition: border-color 0.2s, box-shadow 0.2s;\\n}\\n\\n.logic-editor textarea.readonly {\\n  background: #1a1f2e;\\n  cursor: default;\\n}\\n\\n.logic-editor textarea.editing {\\n  border-color: #8b5cf6;\\n  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);\\n}\\n\\n.edit-indicator {\\n  margin-top: 0.5rem;\\n  padding: 0.5rem 1rem;\\n  background: #f0f9ff;\\n  border: 1px solid #0ea5e9;\\n  border-radius: 0.375rem;\\n  color: #0c4a6e;\\n  font-size: 0.875rem;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.logic-output {\\n  padding: 1.5rem;\\n  background: #f9fafb;\\n  border-radius: 0.5rem;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.logic-output h3 {\\n  margin-bottom: 1rem;\\n  color: #374151;\\n}\\n\\n.logic-output pre {\\n  padding: 1rem;\\n  background: #1f2937;\\n  color: #10b981;\\n  border-radius: 0.375rem;\\n  font-family: 'Courier New', monospace;\\n  font-size: 0.85rem;\\n  overflow-x: auto;\\n  white-space: pre-wrap;\\n}\\n\\n/* Processing Logic Results */\\n.processing-results {\\n  margin-top: 2rem;\\n  padding: 1.5rem;\\n  background: #f9fafb;\\n  border-radius: 0.5rem;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.processing-results h3 {\\n  margin-bottom: 1rem;\\n  color: #374151;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n}\\n\\n.processing-results h3::after {\\n  content: '🔴';\\n  font-size: 0.8rem;\\n  animation: pulse 2s infinite;\\n}\\n\\n@keyframes pulse {\\n  0%, 100% { opacity: 1; }\\n  50% { opacity: 0.5; }\\n}\\n\\n.results-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\\n  gap: 1rem;\\n  margin-bottom: 1rem;\\n  max-height: 400px;\\n  overflow-y: auto;\\n}\\n\\n.result-card {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.5rem;\\n  padding: 1rem;\\n  transition: all 0.2s;\\n}\\n\\n.result-card:first-child {\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\\n}\\n\\n.result-timestamp {\\n  font-size: 0.75rem;\\n  color: #6b7280;\\n  margin-bottom: 0.75rem;\\n  font-weight: 600;\\n  text-transform: uppercase;\\n  letter-spacing: 0.05em;\\n}\\n\\n.result-data {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.5rem;\\n}\\n\\n.result-row {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0.25rem 0;\\n  border-bottom: 1px solid #f3f4f6;\\n}\\n\\n.result-row:last-child {\\n  border-bottom: none;\\n}\\n\\n.result-label {\\n  font-size: 0.8rem;\\n  color: #6b7280;\\n  font-weight: 500;\\n}\\n\\n.result-value {\\n  font-size: 0.875rem;\\n  font-weight: 600;\\n  color: #1f2937;\\n}\\n\\n.result-value.heat {\\n  color: #dc2626;\\n}\\n\\n.result-value.cool {\\n  color: #2563eb;\\n}\\n\\n.result-value.active {\\n  color: #10b981;\\n}\\n\\n.result-value.inactive {\\n  color: #6b7280;\\n}\\n\\n.results-info {\\n  text-align: center;\\n  color: #6b7280;\\n  padding-top: 0.5rem;\\n  border-top: 1px solid #e5e7eb;\\n}\\n\\n.results-info small {\\n  font-size: 0.75rem;\\n}\\n\\n/* Board Configuration Section */\\n.boards-section h2 {\\n  margin-bottom: 1.5rem;\\n  color: #1f2937;\\n}\\n\\n.boards-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\\n  gap: 1.5rem;\\n}\\n\\n.board-card {\\n  padding: 1.5rem;\\n  background: white;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 0.75rem;\\n  transition: all 0.2s;\\n  min-width: 500px;\\n}\\n\\n.board-card:hover {\\n  border-color: #14b8a6;\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\\n}\\n\\n.board-card h3 {\\n  margin-bottom: 1rem;\\n  color: #1f2937;\\n  font-size: 1.1rem;\\n}\\n\\n.board-status {\\n  margin-bottom: 1rem;\\n}\\n\\n.board-toggle-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  gap: 1rem;\\n}\\n\\n.board-toggle-container span {\\n  color: #374151;\\n  font-weight: 500;\\n  font-size: 0.95rem;\\n}\\n\\n/* Remove old toggle styles - using the existing .toggle-switch from PID section */\\n\\n.board-type {\\n  margin-bottom: 1.5rem;\\n}\\n\\n.board-type label {\\n  display: block;\\n  margin-bottom: 0.5rem;\\n  color: #6b7280;\\n  font-weight: 500;\\n  font-size: 0.9rem;\\n}\\n\\n.board-type select {\\n  width: 100%;\\n  padding: 0.5rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.375rem;\\n  background: white;\\n  color: #1f2937;\\n  font-size: 0.95rem;\\n}\\n\\n.board-outputs h4 {\\n  margin-bottom: 0.75rem;\\n  color: #374151;\\n  font-size: 1rem;\\n}\\n\\n.output-group {\\n  margin-bottom: 1.5rem;\\n}\\n\\n.output-group h5 {\\n  margin-bottom: 0.75rem;\\n  color: #6b7280;\\n  font-size: 0.9rem;\\n  font-weight: 600;\\n}\\n\\n.output-item {\\n  display: grid;\\n  grid-template-columns: 50px 1fr 50px;\\n  align-items: center;\\n  gap: 0.75rem;\\n  margin-bottom: 0.5rem;\\n  padding: 0.375rem;\\n}\\n\\n.output-item.compact {\\n  display: grid;\\n  grid-template-columns: 40px 1fr;\\n  gap: 0.5rem;\\n  margin-bottom: 0.375rem;\\n}\\n\\n.output-item input[type=\\\"text\\\"] {\\n  padding: 0.375rem 0.5rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.375rem;\\n  font-size: 0.9rem;\\n}\\n\\n.output-number {\\n  font-weight: 600;\\n  color: #6b7280;\\n  font-size: 0.875rem;\\n}\\n\\n.output-item label {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  color: #6b7280;\\n  font-size: 0.9rem;\\n}\\n\\n.output-item.compact span {\\n  font-weight: 600;\\n  color: #6b7280;\\n  font-size: 0.875rem;\\n}\\n\\n/* Input Configuration */\\n.input-group {\\n  margin-top: 1.5rem;\\n  padding-top: 1.5rem;\\n  border-top: 1px solid #e5e7eb;\\n}\\n\\n.input-group h5 {\\n  margin-bottom: 0.75rem;\\n  color: #6b7280;\\n  font-size: 0.9rem;\\n  font-weight: 600;\\n}\\n\\n.input-config-item {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.75rem;\\n  margin-bottom: 0.5rem;\\n  padding: 0.5rem;\\n  background: #f9fafb;\\n  border-radius: 0.375rem;\\n  flex-wrap: nowrap;\\n}\\n\\n.input-config-item:hover {\\n  background: #f3f4f6;\\n}\\n\\n.input-number {\\n  min-width: 40px;\\n  font-weight: 600;\\n  color: #6b7280;\\n  font-size: 0.875rem;\\n}\\n\\n.input-config-item input[type=\\\"text\\\"] {\\n  flex: 1;\\n  min-width: 200px;\\n  padding: 0.375rem 0.5rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.375rem;\\n  font-size: 0.875rem;\\n}\\n\\n.input-config-item input[type=\\\"text\\\"]:focus {\\n  outline: none;\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\\n}\\n\\n.input-type-select,\\n.conversion-select {\\n  min-width: 100px;\\n  max-width: 120px;\\n  padding: 0.375rem 0.5rem;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 0.375rem;\\n  font-size: 0.875rem;\\n  background: white;\\n  cursor: pointer;\\n}\\n\\n.input-type-select:focus,\\n.conversion-select:focus {\\n  outline: none;\\n  border-color: #14b8a6;\\n  box-shadow: 0 0 0 2px rgba(20, 184, 166, 0.1);\\n}\\n\\n/* Using common .toggle-switch styles for all toggles */\\n\\n/* Board Actions */\\n.board-actions {\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n  margin-top: 20px;\\n}\\n\\n.board-actions .btn-save {\\n  padding: 12px 30px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n  background: #14b8a6;\\n  color: white;\\n  border: none;\\n}\\n\\n.board-actions .btn-save:hover {\\n  background: #0d9488;\\n}\\n\\n/* BMS Status Section */\\n.status-section h2 {\\n  margin-bottom: 1.5rem;\\n  color: #1f2937;\\n}\\n\\n.status-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 2rem;\\n  padding: 1.5rem;\\n  background: #f9fafb;\\n  border-radius: 0.75rem;\\n}\\n\\n.connection-toggle .toggle-btn {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.75rem;\\n  padding: 0.75rem 1.5rem;\\n  border: 2px solid #e5e7eb;\\n  border-radius: 0.5rem;\\n  background: white;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n}\\n\\n.toggle-btn.enabled {\\n  background: #10b981;\\n  color: white;\\n  border-color: #10b981;\\n}\\n\\n.toggle-btn.disabled {\\n  background: #ef4444;\\n  color: white;\\n  border-color: #ef4444;\\n}\\n\\n.bms-address {\\n  display: flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  padding: 0.75rem 1.5rem;\\n  background: white;\\n  border-radius: 0.5rem;\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.bms-address span {\\n  font-weight: 500;\\n  color: #374151;\\n}\\n\\n.status-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n  gap: 1.5rem;\\n}\\n\\n.status-card {\\n  padding: 1.5rem;\\n  background: white;\\n  border-radius: 0.75rem;\\n  border: 1px solid #e5e7eb;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);\\n}\\n\\n.status-card h3 {\\n  margin-bottom: 1rem;\\n  color: #1f2937;\\n  font-size: 1rem;\\n}\\n\\n.status-indicator {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 0.75rem;\\n  padding: 1.5rem;\\n}\\n\\n.status-indicator.connected {\\n  color: #10b981;\\n}\\n\\n.status-indicator.disconnected {\\n  color: #ef4444;\\n}\\n\\n.status-indicator span {\\n  font-weight: 600;\\n  font-size: 1.1rem;\\n}\\n\\n.status-details {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.75rem;\\n}\\n\\n.detail-row {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0.5rem 0;\\n  border-bottom: 1px solid #f3f4f6;\\n}\\n\\n.detail-row:last-child {\\n  border-bottom: none;\\n}\\n\\n.detail-row span:first-child {\\n  color: #6b7280;\\n  font-size: 0.9rem;\\n}\\n\\n.detail-row span:last-child {\\n  font-weight: 500;\\n  color: #1f2937;\\n}\\n\\n.source-badge {\\n  padding: 0.25rem 0.75rem;\\n  border-radius: 9999px;\\n  font-size: 0.85rem;\\n  font-weight: 600;\\n}\\n\\n.source-badge.remote {\\n  background: #dbeafe;\\n  color: #1e40af;\\n}\\n\\n.source-badge.local {\\n  background: #fef3c7;\\n  color: #92400e;\\n}\\n\\n.failover-info {\\n  padding: 1rem;\\n}\\n\\n.failover-active,\\n.failover-standby {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  gap: 0.75rem;\\n  text-align: center;\\n}\\n\\n.failover-active p,\\n.failover-standby p {\\n  margin: 0;\\n  color: #374151;\\n  font-size: 0.95rem;\\n}\\n\\n.integration-status {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.75rem;\\n}\\n\\n.integration-status .active {\\n  color: #10b981;\\n  font-weight: 600;\\n}\\n\\n.integration-status .inactive {\\n  color: #ef4444;\\n  font-weight: 600;\\n}\\n\\n/* Buttons */\\n.btn-primary,\\n.btn-success,\\n.btn-info {\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 0.5rem;\\n  padding: 0.625rem 1.25rem;\\n  border: none;\\n  border-radius: 0.5rem;\\n  font-size: 0.95rem;\\n  font-weight: 500;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n}\\n\\n.btn-primary {\\n  background: #14b8a6;\\n  color: white;\\n}\\n\\n.btn-primary:hover {\\n  background: #0d9488;\\n}\\n\\n.btn-success {\\n  background: #10b981;\\n  color: white;\\n}\\n\\n.btn-success:hover {\\n  background: #059669;\\n}\\n\\n.btn-success:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n.btn-info {\\n  background: #06b6d4;\\n  color: white;\\n}\\n\\n.btn-info:hover {\\n  background: #0891b2;\\n}\\n\\n.btn-info:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n/* Responsive Design */\\n@media (max-width: 768px) {\\n  .admin-container {\\n    padding: 1rem;\\n  }\\n  \\n  .admin-tabs {\\n    flex-wrap: wrap;\\n  }\\n  \\n  .audit-controls {\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 1rem;\\n  }\\n  \\n  .audit-table {\\n    font-size: 0.8rem;\\n  }\\n  \\n  .audit-table th,\\n  .audit-table td {\\n    padding: 0.5rem;\\n  }\\n  \\n  .placeholder-features {\\n    grid-template-columns: 1fr;\\n  }\\n}\\n\\n/* PID Controllers Section */\\n.pid-section {\\n  width: 100%;\\n  padding: 20px;\\n}\\n\\n.pid-section h2 {\\n  margin-bottom: 1.5rem;\\n  color: #1f2937;\\n}\\n\\n.pid-controllers {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\\n  gap: 20px;\\n  margin-bottom: 30px;\\n}\\n\\n.pid-card {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  padding: 20px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n}\\n\\n.pid-header {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n  padding-bottom: 15px;\\n  border-bottom: 2px solid #f3f4f6;\\n}\\n\\n.pid-header h3 {\\n  margin: 0;\\n  color: #1f2937;\\n  font-size: 1.2rem;\\n}\\n\\n.pid-toggle {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.toggle-label {\\n  font-size: 14px;\\n  color: #6b7280;\\n  font-weight: 500;\\n}\\n\\n.pid-params {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n}\\n\\n.param-row {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.param-row label {\\n  flex: 1;\\n  font-size: 14px;\\n  color: #4b5563;\\n  font-weight: 500;\\n}\\n\\n.param-row input[type=\\\"number\\\"] {\\n  width: 100px;\\n  padding: 8px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 6px;\\n  font-size: 14px;\\n}\\n\\n.param-group {\\n  background: #f9fafb;\\n  border-radius: 8px;\\n  padding: 15px;\\n}\\n\\n.param-group h4 {\\n  margin: 0 0 12px 0;\\n  font-size: 14px;\\n  color: #374151;\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n}\\n\\n.voltage-input {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n}\\n\\n.voltage-unit {\\n  font-size: 13px;\\n  color: #6b7280;\\n  min-width: 60px;\\n}\\n\\n.action-toggle {\\n  display: flex;\\n  gap: 5px;\\n  margin-bottom: 10px;\\n}\\n\\n.action-btn {\\n  flex: 1;\\n  padding: 10px;\\n  border: 2px solid #e5e7eb;\\n  background: white;\\n  color: #6b7280;\\n  border-radius: 6px;\\n  cursor: pointer;\\n  font-size: 14px;\\n  font-weight: 500;\\n  transition: all 0.2s;\\n}\\n\\n.action-btn:hover {\\n  border-color: #d1d5db;\\n}\\n\\n.action-btn.active {\\n  background: #1f2937;\\n  color: white;\\n  border-color: #1f2937;\\n}\\n\\n.action-help {\\n  font-size: 12px;\\n  color: #6b7280;\\n  line-height: 1.4;\\n}\\n\\n.action-help p {\\n  margin: 0;\\n}\\n\\n.output-display {\\n  background: #f3f4f6;\\n  border-radius: 8px;\\n  padding: 15px;\\n}\\n\\n.output-display h4 {\\n  margin: 0 0 10px 0;\\n  font-size: 14px;\\n  color: #374151;\\n}\\n\\n.output-value {\\n  display: flex;\\n  align-items: center;\\n  gap: 15px;\\n  margin-bottom: 10px;\\n}\\n\\n.output-value .voltage {\\n  font-size: 24px;\\n  font-weight: bold;\\n  color: #14b8a6;\\n}\\n\\n.output-value .percentage {\\n  font-size: 18px;\\n  color: #6b7280;\\n}\\n\\n.output-bar {\\n  width: 100%;\\n  height: 20px;\\n  background: #e5e7eb;\\n  border-radius: 10px;\\n  overflow: hidden;\\n}\\n\\n.output-fill {\\n  height: 100%;\\n  background: linear-gradient(90deg, #14b8a6, #06b6d4);\\n  transition: width 0.3s ease;\\n}\\n\\n.pid-actions {\\n  display: flex;\\n  justify-content: center;\\n  gap: 15px;\\n  margin-top: 20px;\\n}\\n\\n.btn-save,\\n.btn-reset {\\n  padding: 12px 30px;\\n  border-radius: 6px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  cursor: pointer;\\n  transition: all 0.2s;\\n}\\n\\n.btn-save {\\n  background: #14b8a6;\\n  color: white;\\n  border: none;\\n}\\n\\n.btn-save:hover {\\n  background: #0d9488;\\n}\\n\\n.btn-reset {\\n  background: white;\\n  color: #6b7280;\\n  border: 2px solid #e5e7eb;\\n}\\n\\n.btn-reset:hover {\\n  border-color: #d1d5db;\\n  background: #f9fafb;\\n}\\n\\n/* Logic Engine Button Styles - Slimmer */\\n.btn-success, .btn-info, .btn-danger, .btn-primary {\\n  padding: 6px 14px;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 6px;\\n  transition: all 0.2s;\\n  height: 32px;\\n}\\n\\n.btn-success {\\n  background: #10b981;\\n  color: white;\\n}\\n\\n.btn-success:hover {\\n  background: #059669;\\n}\\n\\n.btn-info {\\n  background: #0891b2;\\n  color: white;\\n}\\n\\n.btn-info:hover {\\n  background: #0e7490;\\n}\\n\\n.btn-danger {\\n  background: #ef4444;\\n  color: white;\\n}\\n\\n.btn-danger:hover {\\n  background: #dc2626;\\n}\\n\\n.btn-remove {\\n  padding: 6px 14px;\\n  background: #f87171;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: inline-flex;\\n  align-items: center;\\n  gap: 6px;\\n  transition: all 0.2s;\\n  height: 32px;\\n}\\n\\n.btn-remove:hover {\\n  background: #ef4444;\\n}\\n\\n.btn-primary {\\n  background: #14b8a6;\\n  color: white;\\n}\\n\\n.btn-primary:hover {\\n  background: #0d9488;\\n}\\n\\n/* Button icons should be smaller */\\n.btn-success svg,\\n.btn-info svg,\\n.btn-danger svg,\\n.btn-primary svg {\\n  width: 14px;\\n  height: 14px;\\n}\\n\\n.btn-info:disabled,\\n.btn-success:disabled,\\n.btn-danger:disabled {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n/* Toggle Switch Styles - Black when ON, Grey when OFF */\\n.toggle-switch {\\n  position: relative;\\n  width: 44px;\\n  height: 20px;\\n  background: #d1d5db;  /* Grey when OFF */\\n  border-radius: 12px;\\n  cursor: pointer;\\n  transition: background 0.3s ease;\\n}\\n\\n.toggle-switch input {\\n  display: none;\\n}\\n\\n.toggle-switch .toggle-slider {\\n  position: absolute;\\n  top: 2px;\\n  left: 2px;\\n  width: 16px;\\n  height: 16px;\\n  background: white;\\n  border-radius: 50%;\\n  transition: transform 0.3s ease;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\n}\\n\\n.toggle-switch input:checked ~ .toggle-slider {\\n  transform: translateX(24px);\\n}\\n\\n/* Black background when checked/ON */\\n.toggle-switch:has(input:checked),\\n.toggle-switch input:checked + .toggle-slider::before {\\n  background: #1f2937 !important;  /* Black when ON */\\n}\\n\\n/* For browsers that don't support :has() */\\n.toggle-switch.checked {\\n  background: #1f2937 !important;  /* Black when ON */\\n}\\n\\n/* BMS Status Section */\\n.bms-status-section {\\n  padding: 20px;\\n}\\n\\n.bms-status-section h2 {\\n  margin-bottom: 30px;\\n  color: #1e293b;\\n}\\n\\n.status-cards {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.status-card {\\n  background: white;\\n  border-radius: 12px;\\n  padding: 20px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  border: 1px solid #e5e7eb;\\n}\\n\\n.status-card h3 {\\n  margin: 0 0 20px 0;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid #e5e7eb;\\n  font-size: 16px;\\n  color: #374151;\\n}\\n\\n.status-item {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 8px 0;\\n  border-bottom: 1px solid #f3f4f6;\\n}\\n\\n.status-item:last-child {\\n  border-bottom: none;\\n}\\n\\n.status-label {\\n  font-weight: 500;\\n  color: #6b7280;\\n  font-size: 14px;\\n}\\n\\n.status-value {\\n  font-weight: 600;\\n  color: #374151;\\n  font-size: 14px;\\n}\\n\\n.status-value.connected,\\n.status-value.enabled {\\n  color: #10b981;\\n}\\n\\n.status-value.disconnected,\\n.status-value.disabled {\\n  color: #6b7280;\\n}\\n/* Input Configuration Items - DUPLICATE REMOVED */\\n/* See lines 999-1008 for the main input-config-item styles */\\n\\n.input-config-item .input-number {\\n  min-width: 40px;\\n  font-weight: 600;\\n  color: #374151;\\n}\\n\\n.input-config-item input[type=\\\"text\\\"] {\\n  flex: 1;\\n  padding: 6px 10px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 4px;\\n  font-size: 13px;\\n}\\n\\n.input-config-item .input-type-select,\\n.input-config-item .conversion-select,\\n.input-config-item .scaling-select {\\n  padding: 6px 8px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 4px;\\n  font-size: 13px;\\n  background: white;\\n  min-width: 100px;\\n}\\n\\n.input-config-item .scaling-select {\\n  min-width: 80px;\\n  max-width: 100px;\\n  margin-left: -0.5rem;\\n}\\n\\n.board-toggle-container {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  padding: 10px;\\n  background: #f3f4f6;\\n  border-radius: 6px;\\n  margin-bottom: 15px;\\n}\\n\\n.board-toggle-container span {\\n  font-weight: 500;\\n  color: #374151;\\n}\\n\\n/* Fix the output-item spacing for consistency */\\n.output-item {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  padding: 8px;\\n  background: #f9fafb;\\n  border-radius: 6px;\\n  margin-bottom: 8px;\\n}\\n\\n.output-item .output-number {\\n  min-width: 40px;\\n  font-weight: 600;\\n  color: #374151;\\n}\\n\\n.output-item input[type=\\\"text\\\"] {\\n  flex: 1;\\n  padding: 6px 10px;\\n  border: 1px solid #d1d5db;\\n  border-radius: 4px;\\n  font-size: 13px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Sleek Switch Component Styles */\n.switch-root {\n  width: 36px;\n  height: 18px;\n  background-color: #d1d5db;\n  border-radius: 9999px;\n  position: relative;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  border: none;\n  padding: 0;\n}\n\n.switch-root[data-state='checked'] {\n  background-color: #14b8a6;\n}\n\n.switch-root[data-disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.switch-thumb {\n  display: block;\n  width: 14px;\n  height: 14px;\n  background-color: white;\n  border-radius: 9999px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  transition: transform 0.2s ease;\n  transform: translateX(2px);\n  will-change: transform;\n}\n\n.switch-thumb[data-state='checked'] {\n  transform: translateX(20px);\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/switch.css\"],\"names\":[],\"mappings\":\"AAAA,kCAAkC;AAClC;EACE,WAAW;EACX,YAAY;EACZ,yBAAyB;EACzB,qBAAqB;EACrB,kBAAkB;EAClB,8CAA8C;EAC9C,eAAe;EACf,sCAAsC;EACtC,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,qBAAqB;EACrB,wCAAwC;EACxC,+BAA+B;EAC/B,0BAA0B;EAC1B,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;AAC7B\",\"sourcesContent\":[\"/* Sleek Switch Component Styles */\\n.switch-root {\\n  width: 36px;\\n  height: 18px;\\n  background-color: #d1d5db;\\n  border-radius: 9999px;\\n  position: relative;\\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n  transition: background-color 0.2s ease;\\n  border: none;\\n  padding: 0;\\n}\\n\\n.switch-root[data-state='checked'] {\\n  background-color: #14b8a6;\\n}\\n\\n.switch-root[data-disabled] {\\n  opacity: 0.5;\\n  cursor: not-allowed;\\n}\\n\\n.switch-thumb {\\n  display: block;\\n  width: 14px;\\n  height: 14px;\\n  background-color: white;\\n  border-radius: 9999px;\\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\\n  transition: transform 0.2s ease;\\n  transform: translateX(2px);\\n  will-change: transform;\\n}\\n\\n.switch-thumb[data-state='checked'] {\\n  transform: translateX(20px);\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n// Custom hook for persisted state with audit tracking\nexport function usePersistedState(key, defaultValue, page = 'unknown') {\n    const [state, setState] = useState(defaultValue);\n    const [loading, setLoading] = useState(true);\n    const previousValueRef = useRef(defaultValue);\n    const saveTimeoutRef = useRef(null);\n    // Load persisted state on mount\n    useEffect(() => {\n        const loadState = async () => {\n            try {\n                const token = sessionStorage.getItem('token');\n                if (!token) {\n                    setLoading(false);\n                    return;\n                }\n                const response = await axios.get(`/api/ui-state/load/${page}`, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                if (response.data.success && response.data.state[key] !== undefined) {\n                    setState(response.data.state[key]);\n                    previousValueRef.current = response.data.state[key];\n                }\n            }\n            catch (error) {\n                console.error('Failed to load persisted state:', error);\n            }\n            finally {\n                setLoading(false);\n            }\n        };\n        loadState();\n    }, [key, page]);\n    // Save state changes with debouncing\n    const saveState = async (newValue) => {\n        // Clear existing timeout\n        if (saveTimeoutRef.current) {\n            clearTimeout(saveTimeoutRef.current);\n        }\n        // Debounce save to avoid too many API calls\n        saveTimeoutRef.current = setTimeout(async () => {\n            try {\n                const token = sessionStorage.getItem('token');\n                if (!token)\n                    return;\n                await axios.post('/api/ui-state/save', {\n                    page,\n                    stateKey: key,\n                    stateValue: newValue\n                }, {\n                    headers: { Authorization: `Bearer ${token}` }\n                });\n                // Log UI change audit if value changed significantly\n                if (JSON.stringify(previousValueRef.current) !== JSON.stringify(newValue)) {\n                    await axios.post('/api/audit/ui-change', {\n                        actionType: 'UI_STATE_CHANGE',\n                        component: page,\n                        description: `Changed ${key} in ${page}`,\n                        oldValue: JSON.stringify(previousValueRef.current),\n                        newValue: JSON.stringify(newValue)\n                    }, {\n                        headers: { Authorization: `Bearer ${token}` }\n                    });\n                    previousValueRef.current = newValue;\n                }\n            }\n            catch (error) {\n                console.error('Failed to save state:', error);\n            }\n        }, 500); // 500ms debounce\n    };\n    // Custom setState that also persists\n    const setPersistedState = (newValue) => {\n        setState(newValue);\n        saveState(newValue);\n    };\n    // Cleanup timeout on unmount\n    useEffect(() => {\n        return () => {\n            if (saveTimeoutRef.current) {\n                clearTimeout(saveTimeoutRef.current);\n            }\n        };\n    }, []);\n    return [state, setPersistedState, loading];\n}\n// Hook for logging audit events\nexport function useAuditLog() {\n    const logAudit = async (actionType, description, details = {}) => {\n        try {\n            const token = sessionStorage.getItem('token');\n            if (!token)\n                return;\n            await axios.post('/api/audit/ui-change', {\n                actionType,\n                description,\n                component: window.location.pathname,\n                pageUrl: window.location.href,\n                ...details\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n        }\n        catch (error) {\n            console.error('Failed to log audit:', error);\n        }\n    };\n    const logNodeRedDeploy = async (details = {}) => {\n        try {\n            const token = sessionStorage.getItem('token');\n            if (!token)\n                return;\n            await axios.post('/api/audit/nodered-deploy', details, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n        }\n        catch (error) {\n            console.error('Failed to log Node-RED deploy:', error);\n        }\n    };\n    return { logAudit, logNodeRedDeploy };\n}\n// Hook for session management\nexport function useSessionTimeout() {\n    const checkInterval = useRef(null);\n    useEffect(() => {\n        // Check session every minute\n        checkInterval.current = setInterval(() => {\n            const token = sessionStorage.getItem('token');\n            if (token) {\n                // Decode token to check expiry\n                try {\n                    const payload = JSON.parse(atob(token.split('.')[1]));\n                    const expiryTime = payload.exp * 1000;\n                    const now = Date.now();\n                    // If token expires in less than 1 minute, warn user\n                    if (expiryTime - now < 60000) {\n                        const remainingSeconds = Math.floor((expiryTime - now) / 1000);\n                        if (remainingSeconds > 0) {\n                            console.warn(`Session expires in ${remainingSeconds} seconds`);\n                            // Could show a modal or notification here\n                        }\n                        else {\n                            // Token expired, clear and redirect\n                            sessionStorage.clear();\n                            window.location.href = '/login';\n                        }\n                    }\n                }\n                catch (error) {\n                    console.error('Failed to decode token:', error);\n                }\n            }\n        }, 30000); // Check every 30 seconds\n        return () => {\n            if (checkInterval.current) {\n                clearInterval(checkInterval.current);\n            }\n        };\n    }, []);\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./admin.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./admin.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useState, useEffect, useRef } from 'react';\nimport { Shield, FileText, Lock, AlertTriangle, Upload, Play, Square, Wifi, WifiOff, CheckCircle, XCircle, Settings, Activity, Server, FileCode, Cpu } from 'lucide-react';\nimport Switch from '../components/Switch';\nimport AuthGuard from '../components/AuthGuard';\nimport { authenticatedFetch } from '../services/api';\nimport { usePersistedState, useSessionTimeout } from '../hooks/usePersistedState';\nimport '../styles/admin.css';\nconst Admin = () => {\n    // Use persisted state for tab selection and equipment\n    const [activeTab, setActiveTab] = usePersistedState('adminActiveTab', 'logic', 'admin');\n    const [selectedEquipment, setSelectedEquipment] = usePersistedState('adminSelectedEquipment', '', 'admin');\n    const [logicEnabled, setLogicEnabled] = usePersistedState('adminLogicEnabled', false, 'admin');\n    const [autoRunEnabled, setAutoRunEnabled] = usePersistedState('adminAutoRunEnabled', false, 'admin');\n    const [pollingInterval, setPollingInterval] = usePersistedState('adminPollingInterval', 7, 'admin');\n    // Regular state for non-persistent data\n    const [auditLogs, setAuditLogs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [timeRange, setTimeRange] = useState(24);\n    // Audit and session hooks\n    // const { logAudit } = useAuditLog(); // Available for audit logging\n    useSessionTimeout(); // Auto-manages 15-minute timeout for admin users\n    // Logic Engine states\n    const [logicFile, setLogicFile] = useState(null);\n    const [logicContent, setLogicContent] = useState('');\n    const [logicRunning, setLogicRunning] = useState(false);\n    const [logicOutput, setLogicOutput] = useState('');\n    const [equipmentList, setEquipmentList] = useState([]);\n    const [configChanged, setConfigChanged] = useState(false);\n    const [isEditingLogic, setIsEditingLogic] = useState(false);\n    const [originalLogicContent, setOriginalLogicContent] = useState('');\n    const [logicResults, setLogicResults] = useState([]);\n    const [executionResults, setExecutionResults] = useState([]);\n    const fileInputRef = useRef(null);\n    const resultsIntervalRef = useRef(null);\n    const executionResultsIntervalRef = useRef(null);\n    // Hardware Configuration HTML states\n    const [configHtmlFile, setConfigHtmlFile] = useState(null);\n    const [parsedHardwareConfig, setParsedHardwareConfig] = useState(null);\n    const [showConfigPreview, setShowConfigPreview] = useState(false);\n    const configFileInputRef = useRef(null);\n    // Board Configuration states - will be populated based on detected boards\n    const [boardConfigs, setBoardConfigs] = useState([]);\n    // BMS Status states\n    const [bmsStatus, setBmsStatus] = useState({\n        connected: false,\n        lastPing: 'Never',\n        latency: 0,\n        usingLocalFile: false,\n        logicFileStatus: 'none'\n    });\n    const [bmsEnabled, setBmsEnabled] = useState(false);\n    const [nodeRedIntegrationEnabled, setNodeRedIntegrationEnabled] = usePersistedState('nodeRedIntegrationEnabled', false, 'admin');\n    // PID Controller states - will be automatically configured based on uploaded config\n    const [pidControllers, setPidControllers] = useState([]);\n    useEffect(() => {\n        checkUserRole();\n        if (activeTab === 'audit') {\n            fetchAuditLogs();\n        }\n        else if (activeTab === 'boards') {\n            fetchBoardConfigs();\n        }\n        else if (activeTab === 'status') {\n            fetchBMSStatus();\n            const interval = setInterval(fetchBMSStatus, 20000); // Check every 20 seconds to reduce load\n            return () => clearInterval(interval);\n        }\n        else if (activeTab === 'logic') {\n            fetchEquipmentList();\n            fetchSavedBoardConfig(); // Load saved board config\n            // Always try to fetch logic if equipment is selected\n            if (selectedEquipment) {\n                fetchCurrentLogic();\n            }\n            else {\n                // If no equipment selected but there are saved ones, select the first\n                fetchEquipmentList().then(() => {\n                    // This will be handled in fetchEquipmentList\n                });\n            }\n        }\n        else if (activeTab === 'pid') {\n            fetchPIDControllers();\n        }\n        return () => { }; // Add cleanup return\n    }, [activeTab, timeRange]);\n    // Poll for logic results when auto-run is enabled\n    useEffect(() => {\n        if (autoRunEnabled && selectedEquipment) {\n            // Fetch immediately\n            fetchLogicResults();\n            // Set up polling interval (every 10 seconds to reduce load)\n            resultsIntervalRef.current = setInterval(fetchLogicResults, 10000);\n            return () => {\n                if (resultsIntervalRef.current) {\n                    clearInterval(resultsIntervalRef.current);\n                    resultsIntervalRef.current = null;\n                }\n            };\n        }\n        else {\n            // Clear results when auto-run is disabled\n            setLogicResults([]);\n            if (resultsIntervalRef.current) {\n                clearInterval(resultsIntervalRef.current);\n                resultsIntervalRef.current = null;\n            }\n            return () => { }; // Add return statement for this branch\n        }\n    }, [autoRunEnabled, selectedEquipment]);\n    // Poll for execution results from background service\n    useEffect(() => {\n        if (activeTab === 'logic' && logicContent && logicContent.includes('processCoolingTowerControl')) {\n            // Fetch immediately\n            fetchExecutionResults();\n            // Set up polling interval (every 15 seconds to reduce load)\n            executionResultsIntervalRef.current = setInterval(fetchExecutionResults, 15000);\n            return () => {\n                if (executionResultsIntervalRef.current) {\n                    clearInterval(executionResultsIntervalRef.current);\n                    executionResultsIntervalRef.current = null;\n                }\n            };\n        }\n        return () => { };\n    }, [activeTab, logicContent]);\n    const checkUserRole = () => {\n        const token = sessionStorage.getItem('authToken');\n        if (token) {\n            try {\n                const payload = JSON.parse(atob(token.split('.')[1]));\n                setIsAdmin(payload.role === 'admin');\n            }\n            catch (error) {\n                console.error('Error parsing token:', error);\n                setIsAdmin(false);\n            }\n        }\n    };\n    const fetchAuditLogs = async () => {\n        setLoading(true);\n        try {\n            const response = await authenticatedFetch(`/api/audit/logs?hours=${timeRange}`);\n            if (response.ok) {\n                const data = await response.json();\n                setAuditLogs(data);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching audit logs:', error);\n        }\n        finally {\n            setLoading(false);\n        }\n    };\n    const fetchSavedBoardConfig = async () => {\n        try {\n            const response = await authenticatedFetch('/api/logic/boards');\n            if (response.ok) {\n                const savedConfigs = await response.json();\n                if (savedConfigs && savedConfigs.length > 0) {\n                    // Reconstruct the parsed config from saved board configs\n                    const reconstructedConfig = {\n                        megabasInputs: [],\n                        megabasTriacs: [],\n                        megabasAnalogOutputs: [],\n                        input16Channels: [],\n                        relay16Channels: [],\n                        systemComponents: [],\n                        sensorSpecs: {}\n                    };\n                    savedConfigs.forEach((board) => {\n                        if (board.boardType === 'megabas') {\n                            // Extract MegaBAS configurations\n                            if (board.outputs) {\n                                Object.entries(board.outputs).forEach(([key, output]) => {\n                                    const channel = parseInt(key);\n                                    if (output.type === 'triac') {\n                                        reconstructedConfig.megabasTriacs.push({\n                                            channel,\n                                            name: output.name,\n                                            type: '24VAC Triac'\n                                        });\n                                    }\n                                    else if (output.type === '0-10V' && channel > 4) {\n                                        reconstructedConfig.megabasAnalogOutputs.push({\n                                            channel: channel - 4,\n                                            name: output.name,\n                                            type: '0-10V',\n                                            range: '0-10V'\n                                        });\n                                    }\n                                });\n                            }\n                            if (board.inputs) {\n                                Object.entries(board.inputs).forEach(([key, input]) => {\n                                    reconstructedConfig.megabasInputs.push({\n                                        channel: parseInt(key),\n                                        name: input.name,\n                                        type: '0-10V',\n                                        conversion: input.conversionType,\n                                        range: input.scaling ? `0-${input.scaling.split('-')[1]}A` : '0-10V',\n                                        scaling: input.scaling\n                                    });\n                                });\n                            }\n                        }\n                        else if (board.boardType === '16univin' && board.inputs) {\n                            Object.entries(board.inputs).forEach(([key, input]) => {\n                                reconstructedConfig.input16Channels.push({\n                                    channel: parseInt(key),\n                                    name: input.name,\n                                    type: input.inputType,\n                                    conversion: input.conversionType,\n                                    range: input.inputType,\n                                    scaling: input.scaling\n                                });\n                            });\n                        }\n                        else if (board.boardType === '16relind' && board.outputs) {\n                            Object.entries(board.outputs).forEach(([key, output]) => {\n                                reconstructedConfig.relay16Channels.push({\n                                    channel: parseInt(key),\n                                    name: output.name,\n                                    type: 'relay'\n                                });\n                            });\n                        }\n                    });\n                    setParsedHardwareConfig(reconstructedConfig);\n                    console.log('Loaded saved board configuration');\n                }\n            }\n        }\n        catch (error) {\n            console.error('Error fetching saved board config:', error);\n        }\n    };\n    const fetchBoardConfigs = async () => {\n        try {\n            // Try to load saved configurations FIRST\n            const configResponse = await authenticatedFetch('/api/logic/boards');\n            if (configResponse.ok) {\n                const savedConfigs = await configResponse.json();\n                if (savedConfigs && savedConfigs.length > 0) {\n                    // Use the saved configs directly - they have all the input/output configs\n                    setBoardConfigs(savedConfigs);\n                    console.log('Loaded saved board configurations:', savedConfigs);\n                    return; // Don't detect boards if we have saved config\n                }\n            }\n            // Only detect boards if no saved config exists\n            const detectResponse = await authenticatedFetch('/api/boards/detect');\n            if (detectResponse.ok) {\n                const detectedBoards = await detectResponse.json();\n                const configs = [];\n                // Add detected MegaBAS boards (usually just one at stack 0)\n                if (detectedBoards.megabas) {\n                    configs.push({\n                        boardType: 'megabas',\n                        stackAddress: 0,\n                        enabled: true,\n                        outputs: {},\n                        inputs: {}\n                    });\n                }\n                // Add detected 16-Input boards\n                if (detectedBoards.input16) {\n                    configs.push({\n                        boardType: '16univin',\n                        stackAddress: 0,\n                        enabled: true,\n                        outputs: {},\n                        inputs: {}\n                    });\n                }\n                // Add detected 16-Relay boards\n                if (detectedBoards.relay16) {\n                    configs.push({\n                        boardType: '16relind',\n                        stackAddress: 0,\n                        enabled: true,\n                        outputs: {}\n                    });\n                }\n                // Add detected 8-Relay boards\n                if (detectedBoards.relay8) {\n                    configs.push({\n                        boardType: '8relind',\n                        stackAddress: 0,\n                        enabled: true,\n                        outputs: {}\n                    });\n                }\n                setBoardConfigs(configs);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching board configs:', error);\n        }\n    };\n    const fetchBMSStatus = async () => {\n        try {\n            const response = await authenticatedFetch('/api/logic/bms-status');\n            if (response.ok) {\n                const data = await response.json();\n                setBmsStatus(data);\n                setBmsEnabled(data.enabled || false);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching BMS status:', error);\n        }\n    };\n    const fetchPIDControllers = async () => {\n        try {\n            const response = await authenticatedFetch('/api/pid-controllers');\n            if (response.ok) {\n                const data = await response.json();\n                setPidControllers(data || []);\n            }\n            else {\n                console.error('Failed to fetch PID controllers');\n                setPidControllers([]);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching PID controllers:', error);\n            setPidControllers([]);\n        }\n    };\n    const fetchEquipmentList = async () => {\n        try {\n            const response = await authenticatedFetch('/api/logic/equipment-list');\n            if (response.ok) {\n                const data = await response.json();\n                setEquipmentList(data);\n                // Auto-select first equipment with logic if none selected\n                if (!selectedEquipment && data.length > 0) {\n                    const firstWithLogic = data.find((eq) => eq.hasLogic);\n                    if (firstWithLogic) {\n                        setSelectedEquipment(firstWithLogic.id);\n                        // Fetch the logic for this equipment\n                        const logicResponse = await authenticatedFetch(`/api/logic/current/${firstWithLogic.id}`);\n                        if (logicResponse.ok) {\n                            const logicData = await logicResponse.text();\n                            setLogicContent(logicData);\n                            setOriginalLogicContent(logicData);\n                            setIsEditingLogic(false);\n                            // Also fetch config\n                            const configResponse = await authenticatedFetch(`/api/logic/config/${firstWithLogic.id}`);\n                            if (configResponse.ok) {\n                                const config = await configResponse.json();\n                                setLogicEnabled(config.enabled || false);\n                                setAutoRunEnabled(config.autoRunEnabled || false);\n                                setPollingInterval(config.pollingInterval || 7);\n                                setConfigChanged(false);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        catch (error) {\n            console.error('Error fetching equipment list:', error);\n        }\n    };\n    const parseHardwareConfigFromHTML = (htmlContent) => {\n        try {\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(htmlContent, 'text/html');\n            const config = {\n                projectInfo: {},\n                megabasInputs: [],\n                megabasTriacs: [],\n                megabasAnalogOutputs: [],\n                input16Channels: [],\n                relay16Channels: [],\n                systemComponents: [],\n                sensorSpecs: {},\n                equipmentIds: []\n            };\n            // Extract project information\n            const headerText = doc.querySelector('.header')?.textContent || '';\n            const projectMatch = headerText.match(/Project:\\s*([^|]+)/);\n            const dateMatch = headerText.match(/Date:\\s*([^|]+)/);\n            const contractorMatch = headerText.match(/Contractor:\\s*([^|]+)/);\n            config.projectInfo = {\n                project: projectMatch ? projectMatch[1].trim() : '',\n                date: dateMatch ? dateMatch[1].trim() : '',\n                contractor: contractorMatch ? contractorMatch[1].trim() : ''\n            };\n            // Parse tables - Equipment IDs first, then I/O assignments\n            const ioTables = doc.querySelectorAll('.io-table');\n            console.log(`Found ${ioTables.length} I/O tables in HTML`);\n            ioTables.forEach((table, tableIndex) => {\n                const rows = table.querySelectorAll('tr');\n                const headerRow = rows[0];\n                const headerText = headerRow?.textContent || '';\n                console.log(`Table ${tableIndex}: Headers = ${headerText}`);\n                // Check if this is the Equipment Identification table\n                if (headerText.includes('Equipment ID')) {\n                    rows.forEach((row, index) => {\n                        if (index === 0)\n                            return; // Skip header\n                        const cells = row.querySelectorAll('td');\n                        if (cells.length >= 2) {\n                            const equipmentName = cells[0]?.textContent?.trim();\n                            const equipmentId = cells[1]?.textContent?.trim();\n                            if (equipmentId && equipmentId.length === 20) { // Standard equipment ID length\n                                config.equipmentIds?.push(equipmentId);\n                                console.log(`Found equipment: ${equipmentName} - ${equipmentId}`);\n                            }\n                        }\n                    });\n                    return; // Skip further processing for this table\n                }\n                // Check if this is a table with specific board headers\n                const hasBAUHeader = headerText.includes('BAU') || headerText.includes('Building Automation');\n                const has16InputHeader = headerText.includes('16Input') || headerText.includes('16 Input');\n                const has16RelayHeader = headerText.includes('16Relay') || headerText.includes('16 Relay');\n                console.log(`Processing table - BAU: ${hasBAUHeader}, 16Input: ${has16InputHeader}, 16Relay: ${has16RelayHeader}`);\n                // Process I/O Assignment tables\n                rows.forEach((row, index) => {\n                    if (index === 0)\n                        return; // Skip header\n                    const cells = row.querySelectorAll('td');\n                    // Determine column layout based on number of cells\n                    // Could be 6-column (BAU, Function, 16Input, Function, 16Relay, Function)\n                    // Or 4-column (Channel, Function, Channel, Function)\n                    // Or 2-column (Channel, Function)\n                    if (cells.length >= 6) {\n                        // Handle 6-column format\n                        // Building Automation HAT assignments (columns 0-1)\n                        const bauChannel = cells[0]?.textContent?.trim();\n                        const bauFunction = cells[1]?.textContent?.trim();\n                        if (bauChannel && bauFunction && bauChannel !== '' && bauFunction !== '') {\n                            if (bauChannel.match(/T\\d+-T\\d+|T\\d+/)) {\n                                // Handle T1-T3 format\n                                const matches = bauChannel.match(/T(\\d+)(?:-T(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        config.megabasTriacs.push({\n                                            channel: i,\n                                            name: bauFunction,\n                                            type: '24VAC Triac'\n                                        });\n                                    }\n                                }\n                            }\n                            else if (bauChannel.match(/AO\\d+(?:-AO\\d+)?/)) {\n                                // Handle AO1-AO3 format\n                                const matches = bauChannel.match(/AO(\\d+)(?:-AO(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        config.megabasAnalogOutputs.push({\n                                            channel: i,\n                                            name: bauFunction.includes('Speed') ? `VFD ${i} Speed` : bauFunction,\n                                            type: '0-10V',\n                                            range: '0-10V'\n                                        });\n                                    }\n                                }\n                            }\n                            else if (bauChannel.match(/AI\\d+(?:-AI\\d+)?/)) {\n                                // Handle AI1-AI6 format\n                                const matches = bauChannel.match(/AI(\\d+)(?:-AI(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        const isCurrentSensor = bauFunction.includes('Current') || bauFunction.includes('0-50A');\n                                        const inputName = bauFunction.includes('VFD') ? bauFunction : `VFD Current ${i}`;\n                                        config.megabasInputs.push({\n                                            channel: i,\n                                            name: inputName,\n                                            type: '0-10V',\n                                            conversion: isCurrentSensor ? 'amps' : 'voltage',\n                                            range: bauFunction.includes('0-50A') ? '0-50A' : '0-10V',\n                                            scaling: isCurrentSensor ? '0-50' : undefined\n                                        });\n                                        console.log(`Added MegaBAS AI${i}: ${inputName} (${isCurrentSensor ? 'current sensor 0-50A' : '0-10V voltage'})`);\n                                    }\n                                }\n                            }\n                        }\n                        // 16 Input HAT assignments (columns 2-3)\n                        const inputChannel = cells[2]?.textContent?.trim();\n                        const inputFunction = cells[3]?.textContent?.trim();\n                        if (inputChannel && inputFunction && inputChannel !== '') {\n                            // Handle both CH format and just number format\n                            let chMatch = inputChannel.match(/CH(\\d+)(?:-CH(\\d+))?/);\n                            if (!chMatch) {\n                                // Try plain number format\n                                chMatch = inputChannel.match(/(\\d+)(?:-(\\d+))?/);\n                            }\n                            if (chMatch) {\n                                const start = parseInt(chMatch[1]);\n                                const end = chMatch[2] ? parseInt(chMatch[2]) : start;\n                                for (let i = start; i <= end; i++) {\n                                    let sensorType = '0-10V';\n                                    let conversionType = 'voltage';\n                                    // Determine sensor type from function description\n                                    let scaling = undefined;\n                                    if (inputFunction.includes('RTD') || inputFunction.includes('Temp') || inputFunction.includes('Temperature')) {\n                                        sensorType = '1k';\n                                        conversionType = 'temperature';\n                                    }\n                                    else if (inputFunction.includes('Current') || inputFunction.includes('Amps')) {\n                                        sensorType = '0-10V';\n                                        conversionType = 'amps';\n                                        // Extract scaling\n                                        if (inputFunction.includes('0-50A')) {\n                                            scaling = '0-50';\n                                        }\n                                        else if (inputFunction.includes('0-20A')) {\n                                            scaling = '0-20';\n                                        }\n                                        else if (inputFunction.includes('0-100A')) {\n                                            scaling = '0-100';\n                                        }\n                                        else {\n                                            scaling = '0-50'; // Default\n                                        }\n                                    }\n                                    else if (inputFunction.includes('Pressure')) {\n                                        sensorType = '0-10V';\n                                        conversionType = 'pressure';\n                                    }\n                                    const inputConfig = {\n                                        channel: i,\n                                        name: inputFunction,\n                                        type: sensorType,\n                                        conversion: conversionType,\n                                        range: sensorType\n                                    };\n                                    if (scaling) {\n                                        inputConfig.scaling = scaling;\n                                    }\n                                    config.input16Channels.push(inputConfig);\n                                    console.log(`Added 16-Input CH${i}: ${inputFunction} (${sensorType}/${conversionType})`);\n                                }\n                            }\n                        }\n                        // 16 Relay HAT assignments (columns 4-5)\n                        const relayChannel = cells[4]?.textContent?.trim();\n                        const relayFunction = cells[5]?.textContent?.trim();\n                        if (relayChannel && relayFunction) {\n                            const chMatch = relayChannel.match(/CH(\\d+)(?:-(\\d+))?/);\n                            if (chMatch) {\n                                const start = parseInt(chMatch[1]);\n                                const end = chMatch[2] ? parseInt(chMatch[2]) : start;\n                                for (let i = start; i <= end; i++) {\n                                    config.relay16Channels.push({\n                                        channel: i,\n                                        name: relayFunction,\n                                        type: 'relay'\n                                    });\n                                }\n                            }\n                        }\n                    }\n                    else if (cells.length === 4) {\n                        // 4-column format: could be (BAU Channel, Function, 16Input Channel, Function)\n                        // Or (16Input Channel, Function, 16Relay Channel, Function)\n                        const col1Channel = cells[0]?.textContent?.trim();\n                        const col1Function = cells[1]?.textContent?.trim();\n                        const col2Channel = cells[2]?.textContent?.trim();\n                        const col2Function = cells[3]?.textContent?.trim();\n                        // Process first pair\n                        if (col1Channel && col1Function && col1Channel !== '') {\n                            // Determine type based on channel format\n                            if (col1Channel.match(/T\\d+|AO\\d+|AI\\d+/)) {\n                                // MegaBAS channel\n                                const bauChannel = col1Channel;\n                                const bauFunction = col1Function;\n                                if (bauChannel && bauFunction) {\n                                    if (bauChannel.startsWith('T')) {\n                                        // Triac outputs\n                                        const triacNum = bauChannel.replace('T', '').split('-');\n                                        triacNum.forEach(num => {\n                                            if (num.trim()) {\n                                                config.megabasTriacs.push({\n                                                    channel: parseInt(num.trim()),\n                                                    name: bauFunction,\n                                                    type: '24VAC Triac'\n                                                });\n                                            }\n                                        });\n                                    }\n                                    else if (bauChannel.startsWith('AO')) {\n                                        // Analog outputs\n                                        const aoMatch = bauChannel.match(/AO(\\d+)(?:-AO(\\d+))?/);\n                                        if (aoMatch) {\n                                            const start = parseInt(aoMatch[1]);\n                                            const end = aoMatch[2] ? parseInt(aoMatch[2]) : start;\n                                            for (let i = start; i <= end; i++) {\n                                                config.megabasAnalogOutputs.push({\n                                                    channel: i,\n                                                    name: bauFunction.includes('Speed') ? `VFD ${i} Speed` : bauFunction,\n                                                    type: '0-10V',\n                                                    range: bauFunction.includes('Speed') ? '0-10V' : '0-10V'\n                                                });\n                                            }\n                                        }\n                                    }\n                                    else if (bauChannel.startsWith('AI')) {\n                                        // Analog inputs\n                                        const aiMatch = bauChannel.match(/AI(\\d+)(?:-AI(\\d+))?/);\n                                        if (aiMatch) {\n                                            const start = parseInt(aiMatch[1]);\n                                            const end = aiMatch[2] ? parseInt(aiMatch[2]) : start;\n                                            for (let i = start; i <= end; i++) {\n                                                config.megabasInputs.push({\n                                                    channel: i,\n                                                    name: bauFunction.includes('Current') ? `VFD Current ${i}` : bauFunction,\n                                                    type: bauFunction.includes('Current') ? '0-10V' : '0-10V',\n                                                    conversion: bauFunction.includes('Current') ? 'current' : 'voltage',\n                                                    range: bauFunction.includes('0-50A') ? '0-50A' : '0-10V'\n                                                });\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else if (col1Channel.match(/CH\\d+|\\d+/)) {\n                                // 16-Input channel\n                                const inputChannel = col1Channel;\n                                const inputFunction = col1Function;\n                                let chMatch = inputChannel.match(/CH(\\d+)(?:-CH(\\d+))?/);\n                                if (!chMatch) {\n                                    chMatch = inputChannel.match(/(\\d+)(?:-(\\d+))?/);\n                                }\n                                if (chMatch) {\n                                    const start = parseInt(chMatch[1]);\n                                    const end = chMatch[2] ? parseInt(chMatch[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        let sensorType = '0-10V';\n                                        let conversionType = 'voltage';\n                                        if (inputFunction.includes('RTD') || inputFunction.includes('Temp') || inputFunction.includes('Temperature')) {\n                                            sensorType = '1k';\n                                            conversionType = 'temperature';\n                                        }\n                                        else if (inputFunction.includes('Current') || inputFunction.includes('Amps')) {\n                                            sensorType = '0-10V';\n                                            conversionType = 'current';\n                                        }\n                                        config.input16Channels.push({\n                                            channel: i,\n                                            name: inputFunction,\n                                            type: sensorType,\n                                            conversion: conversionType,\n                                            range: inputFunction.includes('0-50A') ? '0-50A' : sensorType\n                                        });\n                                        console.log(`Added 16-Input CH${i}: ${inputFunction} (${sensorType}/${conversionType})`);\n                                    }\n                                }\n                            }\n                        }\n                        // Process second pair\n                        if (col2Channel && col2Function && col2Channel !== '') {\n                            // Similar logic for second column pair\n                            if (col2Channel.match(/CH\\d+|\\d+/)) {\n                                // Could be 16-Input or 16-Relay\n                                let chMatch = col2Channel.match(/CH(\\d+)(?:-CH(\\d+))?/);\n                                if (!chMatch) {\n                                    chMatch = col2Channel.match(/(\\d+)(?:-(\\d+))?/);\n                                }\n                                if (chMatch) {\n                                    const start = parseInt(chMatch[1]);\n                                    const end = chMatch[2] ? parseInt(chMatch[2]) : start;\n                                    // Determine if it's a relay based on function name\n                                    if (col2Function.includes('Relay') || col2Function.includes('Heater') || col2Function.includes('Pump')) {\n                                        for (let i = start; i <= end; i++) {\n                                            config.relay16Channels.push({\n                                                channel: i,\n                                                name: col2Function,\n                                                type: 'relay'\n                                            });\n                                            console.log(`Added 16-Relay CH${i}: ${col2Function}`);\n                                        }\n                                    }\n                                    else {\n                                        // It's an input\n                                        for (let i = start; i <= end; i++) {\n                                            let sensorType = '0-10V';\n                                            let conversionType = 'voltage';\n                                            if (col2Function.includes('RTD') || col2Function.includes('Temp')) {\n                                                sensorType = '1k';\n                                                conversionType = 'temperature';\n                                            }\n                                            config.input16Channels.push({\n                                                channel: i,\n                                                name: col2Function,\n                                                type: sensorType,\n                                                conversion: conversionType,\n                                                range: sensorType\n                                            });\n                                            console.log(`Added 16-Input CH${i}: ${col2Function} (${sensorType}/${conversionType})`);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else if (cells.length === 2) {\n                        // 2-column format: Channel, Function\n                        const channel = cells[0]?.textContent?.trim();\n                        const func = cells[1]?.textContent?.trim();\n                        if (channel && func && channel !== '') {\n                            // Determine board type from channel format\n                            if (channel.match(/T\\d+/)) {\n                                // MegaBAS Triac\n                                const matches = channel.match(/T(\\d+)(?:-T(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        config.megabasTriacs.push({\n                                            channel: i,\n                                            name: func,\n                                            type: '24VAC Triac'\n                                        });\n                                    }\n                                }\n                            }\n                            else if (channel.match(/AO\\d+/)) {\n                                // MegaBAS Analog Output\n                                const matches = channel.match(/AO(\\d+)(?:-AO(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        config.megabasAnalogOutputs.push({\n                                            channel: i,\n                                            name: func,\n                                            type: '0-10V',\n                                            range: '0-10V'\n                                        });\n                                    }\n                                }\n                            }\n                            else if (channel.match(/AI\\d+/)) {\n                                // MegaBAS Analog Input\n                                const matches = channel.match(/AI(\\d+)(?:-AI(\\d+))?/);\n                                if (matches) {\n                                    const start = parseInt(matches[1]);\n                                    const end = matches[2] ? parseInt(matches[2]) : start;\n                                    for (let i = start; i <= end; i++) {\n                                        const isCurrentSensor = func.includes('Current') || func.includes('Amps') || func.includes('0-50A');\n                                        config.megabasInputs.push({\n                                            channel: i,\n                                            name: func,\n                                            type: '0-10V',\n                                            conversion: isCurrentSensor ? 'current' : 'voltage',\n                                            range: func.includes('0-50A') ? '0-50A' :\n                                                func.includes('0-20A') ? '0-20A' :\n                                                    func.includes('0-100A') ? '0-100A' : '0-10V'\n                                        });\n                                        console.log(`Added MegaBAS AI${i}: ${func} (${isCurrentSensor ? 'current' : 'voltage'})`);\n                                    }\n                                }\n                            }\n                            else if (channel.match(/CH\\d+|^\\d+$/)) {\n                                // 16-Input or 16-Relay channel\n                                let chMatch = channel.match(/CH(\\d+)(?:-CH(\\d+))?/);\n                                if (!chMatch) {\n                                    chMatch = channel.match(/^(\\d+)(?:-(\\d+))?$/);\n                                }\n                                if (chMatch) {\n                                    const start = parseInt(chMatch[1]);\n                                    const end = chMatch[2] ? parseInt(chMatch[2]) : start;\n                                    // Determine type from function name\n                                    if (func.includes('Relay') || func.includes('Heater') || func.includes('Pump') || func.includes('Valve')) {\n                                        // It's a relay\n                                        for (let i = start; i <= end; i++) {\n                                            config.relay16Channels.push({\n                                                channel: i,\n                                                name: func,\n                                                type: 'relay'\n                                            });\n                                            console.log(`Added 16-Relay CH${i}: ${func}`);\n                                        }\n                                    }\n                                    else {\n                                        // It's an input\n                                        for (let i = start; i <= end; i++) {\n                                            let sensorType = '0-10V';\n                                            let conversionType = 'voltage';\n                                            if (func.includes('RTD') || func.includes('Temp') || func.includes('Temperature')) {\n                                                sensorType = '1k';\n                                                conversionType = 'temperature';\n                                            }\n                                            else if (func.includes('Current') || func.includes('Amps')) {\n                                                sensorType = '0-10V';\n                                                conversionType = 'current';\n                                            }\n                                            else if (func.includes('Pressure')) {\n                                                sensorType = '0-10V';\n                                                conversionType = 'pressure';\n                                            }\n                                            config.input16Channels.push({\n                                                channel: i,\n                                                name: func,\n                                                type: sensorType,\n                                                conversion: conversionType,\n                                                range: func.includes('0-50A') ? '0-50A' :\n                                                    func.includes('0-20A') ? '0-20A' :\n                                                        func.includes('0-100A') ? '0-100A' : sensorType\n                                            });\n                                            console.log(`Added 16-Input CH${i}: ${func} (${sensorType}/${conversionType})`);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n            });\n            // Extract sensor specifications from notes\n            const notesText = doc.querySelector('.notes')?.textContent || '';\n            if (notesText.includes('0-10VDC') && notesText.includes('0-50A')) {\n                config.sensorSpecs.currentSensors = '0-10VDC (0V=0A, 10V=50A)';\n            }\n            if (notesText.includes('1K Platinum RTD')) {\n                config.sensorSpecs.tempSensors = '1K Platinum RTD';\n            }\n            // Extract system components\n            const componentsList = doc.querySelectorAll('ul li');\n            componentsList.forEach(item => {\n                const text = item.textContent || '';\n                if (text.includes('VFD') || text.includes('Pump') || text.includes('Sensor') ||\n                    text.includes('Valve') || text.includes('Heater')) {\n                    config.systemComponents.push(text.trim());\n                }\n            });\n            // Extract Equipment IDs (UUIDs) from the document\n            // Look for UUID patterns in the HTML\n            const uuidPattern = /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/gi;\n            const allText = doc.body?.textContent || '';\n            const foundUUIDs = allText.match(uuidPattern) || [];\n            // Also look for equipment ID references in specific elements\n            const equipmentElements = doc.querySelectorAll('[data-equipment-id], [data-tower-id], .equipment-id, .tower-id');\n            equipmentElements.forEach(elem => {\n                const id = elem.getAttribute('data-equipment-id') ||\n                    elem.getAttribute('data-tower-id') ||\n                    elem.textContent?.match(uuidPattern)?.[0];\n                if (id && !config.equipmentIds?.includes(id)) {\n                    config.equipmentIds?.push(id);\n                }\n            });\n            // Add any UUIDs found in the document text\n            foundUUIDs.forEach(uuid => {\n                if (!config.equipmentIds?.includes(uuid)) {\n                    config.equipmentIds?.push(uuid);\n                }\n            });\n            // Also look for tower-specific references in tables\n            const tableCells = doc.querySelectorAll('td');\n            tableCells.forEach(cell => {\n                const text = cell.textContent || '';\n                if (text.includes('Tower') && text.includes('UUID')) {\n                    const matches = text.match(uuidPattern);\n                    if (matches) {\n                        matches.forEach(uuid => {\n                            if (!config.equipmentIds?.includes(uuid)) {\n                                config.equipmentIds?.push(uuid);\n                            }\n                        });\n                    }\n                }\n            });\n            console.log(`Extracted ${config.equipmentIds?.length || 0} equipment IDs from configuration`);\n            // Auto-configure PID controllers based on analog outputs found\n            configurePIDFromParsedConfig(config);\n            return config;\n        }\n        catch (error) {\n            console.error('Error parsing hardware config HTML:', error);\n            return null;\n        }\n    };\n    const configurePIDFromParsedConfig = (config) => {\n        if (!config || !config.megabasAnalogOutputs)\n            return;\n        const newPIDControllers = [];\n        // Analyze each analog output and create appropriate PID controller\n        config.megabasAnalogOutputs.forEach((ao) => {\n            const name = ao.name.toLowerCase();\n            let pidConfig = {\n                name: ao.name,\n                enabled: false, // Start disabled until user enables\n                setpoint: 72, // Default setpoint\n                kp: 2.0,\n                ki: 0.5,\n                kd: 0.1,\n                minV: 0.0,\n                maxV: 10.0,\n                reverseActing: false,\n                output: 0,\n                outputChannel: `AO${ao.channel}`,\n                processVariable: '' // Will be determined based on type\n            };\n            // Determine PID parameters based on equipment type\n            if (name.includes('bypass')) {\n                // Bypass valve for temperature control\n                pidConfig.name = ao.name || `Bypass Valve (AO${ao.channel})`;\n                pidConfig.setpoint = 70; // Typical supply temp\n                pidConfig.kp = 2.5;\n                pidConfig.ki = 0.3;\n                pidConfig.kd = 0.1;\n                pidConfig.processVariable = 'CH1'; // Usually supply temp\n            }\n            else if (name.includes('vfd') || name.includes('speed') || name.includes('fan')) {\n                // VFD/Fan speed control\n                pidConfig.name = ao.name || `VFD Speed (AO${ao.channel})`;\n                pidConfig.setpoint = 75;\n                pidConfig.kp = 1.5;\n                pidConfig.ki = 0.2;\n                pidConfig.kd = 0.05;\n                // Check if it's for cooling tower (limited speed range)\n                if (name.includes('tower') || name.includes('cell')) {\n                    pidConfig.minV = 4.0; // Low speed\n                    pidConfig.maxV = 5.5; // High speed\n                }\n                else {\n                    pidConfig.minV = 2.0; // 20% min for general VFD\n                    pidConfig.maxV = 10.0; // 100% max\n                }\n                pidConfig.processVariable = 'CH2'; // Usually return temp\n            }\n            else if (name.includes('damper') || name.includes('oa') || name.includes('outside')) {\n                // Outside air damper\n                pidConfig.name = ao.name || `OA Damper (AO${ao.channel})`;\n                pidConfig.setpoint = 72;\n                pidConfig.kp = 2.0;\n                pidConfig.ki = 0.5;\n                pidConfig.kd = 0.1;\n                pidConfig.minV = 2.0; // 20% minimum\n                pidConfig.maxV = 10.0;\n                pidConfig.processVariable = 'AI1'; // Mixed air temp typically\n            }\n            else if (name.includes('hw') || name.includes('hot') || name.includes('heat')) {\n                // Hot water valve\n                pidConfig.name = ao.name || `HW Valve (AO${ao.channel})`;\n                pidConfig.setpoint = 72;\n                pidConfig.kp = 3.0;\n                pidConfig.ki = 0.8;\n                pidConfig.kd = 0.2;\n                pidConfig.reverseActing = true; // Heating is reverse acting\n                pidConfig.processVariable = 'AI2'; // Space or discharge temp\n            }\n            else if (name.includes('cw') || name.includes('chilled') || name.includes('cool')) {\n                // Chilled water valve\n                pidConfig.name = ao.name || `CW Valve (AO${ao.channel})`;\n                pidConfig.setpoint = 72;\n                pidConfig.kp = 2.5;\n                pidConfig.ki = 0.6;\n                pidConfig.kd = 0.15;\n                pidConfig.reverseActing = false; // Cooling is direct acting\n                pidConfig.processVariable = 'AI2'; // Space or discharge temp\n            }\n            else if (name.includes('valve')) {\n                // Generic valve\n                pidConfig.name = ao.name || `Control Valve (AO${ao.channel})`;\n                pidConfig.kp = 2.5;\n                pidConfig.ki = 0.5;\n                pidConfig.kd = 0.1;\n                pidConfig.processVariable = 'AI1';\n            }\n            else {\n                // Generic analog output\n                pidConfig.name = ao.name || `Analog Output ${ao.channel}`;\n                pidConfig.processVariable = 'AI1';\n            }\n            newPIDControllers.push(pidConfig);\n        });\n        // Update PID controllers state\n        setPidControllers(newPIDControllers);\n        console.log(`Auto-configured ${newPIDControllers.length} PID controllers from hardware config`);\n    };\n    const parseEquipmentIdsFromLogic = (content) => {\n        // Look for equipment ID patterns in the logic file\n        const equipmentData = [];\n        // Try to find equipmentMap with names in comments\n        const mapPattern = /(?:const|let|var)?\\s*equipmentMap\\s*=\\s*{([^}]+)}/s;\n        const mapMatch = content.match(mapPattern);\n        if (mapMatch) {\n            const mapContent = mapMatch[1];\n            // Match pattern like \"2JFzwQkC1XwJhUvm09rE\": 1, // AHU-1\n            const entryPattern = /[\"']([a-zA-Z0-9]{20})[\"']\\s*:\\s*\\d+,?\\s*\\/\\/\\s*([^\\n]+)/g;\n            let match;\n            while ((match = entryPattern.exec(mapContent)) !== null) {\n                equipmentData.push({\n                    id: match[1],\n                    name: match[2].trim()\n                });\n            }\n        }\n        // If no comments found, try to extract from the configuration comments section\n        if (equipmentData.length === 0) {\n            // Look for patterns like: - AHU-1 (2JFzwQkC1XwJhUvm09rE):\n            const configPattern = /-\\s*([^(]+)\\s*\\(([a-zA-Z0-9]{20})\\)/g;\n            let match;\n            while ((match = configPattern.exec(content)) !== null) {\n                equipmentData.push({\n                    id: match[2],\n                    name: match[1].trim()\n                });\n            }\n        }\n        // If still no equipment found, look for standalone IDs\n        if (equipmentData.length === 0) {\n            const idPattern = /[\"']([a-zA-Z0-9]{20})[\"']/g;\n            const foundIds = new Set();\n            let match;\n            while ((match = idPattern.exec(content)) !== null) {\n                if (!foundIds.has(match[1])) {\n                    foundIds.add(match[1]);\n                    equipmentData.push({\n                        id: match[1],\n                        name: `Equipment ${match[1].substring(0, 6)}`\n                    });\n                }\n            }\n        }\n        return equipmentData;\n    };\n    const fetchLogicResults = async () => {\n        if (!selectedEquipment || !autoRunEnabled)\n            return;\n        try {\n            const response = await authenticatedFetch(`/api/logic/results/${selectedEquipment}`);\n            if (response.ok) {\n                const data = await response.json();\n                setLogicResults(data);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching logic results:', error);\n        }\n    };\n    const fetchExecutionResults = async () => {\n        try {\n            const response = await authenticatedFetch('/api/logic/execution-results');\n            if (response.ok) {\n                const data = await response.json();\n                setExecutionResults(data);\n            }\n        }\n        catch (error) {\n            console.error('Error fetching execution results:', error);\n        }\n    };\n    const fetchCurrentLogic = async () => {\n        if (!selectedEquipment)\n            return;\n        try {\n            // Get logic file content\n            const response = await authenticatedFetch(`/api/logic/current/${selectedEquipment}`);\n            if (response.ok) {\n                const data = await response.text();\n                setLogicContent(data);\n                setOriginalLogicContent(data);\n                setIsEditingLogic(false);\n            }\n            else if (response.status === 404) {\n                setLogicContent('');\n                setOriginalLogicContent('');\n            }\n            // Get configuration from database\n            const configResponse = await authenticatedFetch(`/api/logic/config/${selectedEquipment}`);\n            if (configResponse.ok) {\n                const config = await configResponse.json();\n                setLogicEnabled(config.enabled || false);\n                setAutoRunEnabled(config.autoRunEnabled || false);\n                setPollingInterval(config.pollingInterval || 7);\n                setConfigChanged(false);\n                // If auto-run is enabled, start fetching results\n                if (config.autoRunEnabled) {\n                    fetchLogicResults();\n                }\n            }\n        }\n        catch (error) {\n            console.error('Error fetching current logic:', error);\n        }\n    };\n    const handleConfigHtmlUpload = (event) => {\n        const file = event.target.files?.[0];\n        if (file && file.name.endsWith('.html')) {\n            setConfigHtmlFile(file);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const content = e.target?.result;\n                const parsed = parseHardwareConfigFromHTML(content);\n                if (parsed) {\n                    setParsedHardwareConfig(parsed);\n                    setShowConfigPreview(true);\n                }\n                else {\n                    alert('Failed to parse configuration HTML file');\n                }\n            };\n            reader.readAsText(file);\n        }\n        else {\n            alert('Please select a valid .html configuration file');\n        }\n    };\n    const applyParsedConfiguration = async () => {\n        if (!parsedHardwareConfig)\n            return;\n        try {\n            // Convert parsed config to board configurations\n            const newBoardConfigs = [];\n            // MegaBAS configuration\n            if (parsedHardwareConfig.megabasInputs.length > 0 ||\n                parsedHardwareConfig.megabasTriacs.length > 0 ||\n                parsedHardwareConfig.megabasAnalogOutputs.length > 0) {\n                const megabasConfig = {\n                    boardType: 'megabas',\n                    stackAddress: 0,\n                    enabled: true,\n                    outputs: {},\n                    inputs: {}\n                };\n                // Configure triacs\n                parsedHardwareConfig.megabasTriacs.forEach((triac) => {\n                    megabasConfig.outputs[triac.channel] = {\n                        name: triac.name,\n                        type: 'triac',\n                        enabled: true\n                    };\n                });\n                // Configure analog outputs\n                parsedHardwareConfig.megabasAnalogOutputs.forEach((ao) => {\n                    megabasConfig.outputs[ao.channel + 4] = {\n                        name: ao.name,\n                        type: '0-10V',\n                        enabled: true\n                    };\n                });\n                // Configure inputs with proper scaling for current sensors\n                parsedHardwareConfig.megabasInputs.forEach((input) => {\n                    const inputConfig = {\n                        name: input.name,\n                        inputType: '0-10V',\n                        conversionType: input.conversion === 'amps' ? 'amps' : 'voltage',\n                        enabled: true\n                    };\n                    // Add scaling for current sensors\n                    if (input.scaling) {\n                        inputConfig.scaling = input.scaling;\n                    }\n                    megabasConfig.inputs[input.channel] = inputConfig;\n                    console.log(`Configured MegaBAS input ${input.channel}: ${input.name} as ${inputConfig.conversionType}${input.scaling ? ' with scaling ' + input.scaling : ''}`);\n                });\n                newBoardConfigs.push(megabasConfig);\n            }\n            // 16-Input configuration\n            if (parsedHardwareConfig.input16Channels.length > 0) {\n                const input16Config = {\n                    boardType: '16univin',\n                    stackAddress: 0,\n                    enabled: true,\n                    outputs: {},\n                    inputs: {}\n                };\n                parsedHardwareConfig.input16Channels.forEach((input) => {\n                    const inputConfig = {\n                        name: input.name,\n                        inputType: input.type === '1k' ? '1k' : '0-10V',\n                        conversionType: input.conversion === 'temperature' ? 'temperature' :\n                            input.conversion === 'amps' ? 'amps' : 'voltage',\n                        enabled: true\n                    };\n                    // Add scaling for current sensors\n                    if (input.scaling) {\n                        inputConfig.scaling = input.scaling;\n                    }\n                    input16Config.inputs[input.channel] = inputConfig;\n                    console.log(`Configured 16-Input CH${input.channel}: ${input.name} as ${input.type}/${inputConfig.conversionType}${input.scaling ? ' with scaling ' + input.scaling : ''}`);\n                });\n                newBoardConfigs.push(input16Config);\n            }\n            // 16-Relay configuration\n            if (parsedHardwareConfig.relay16Channels.length > 0) {\n                const relay16Config = {\n                    boardType: '16relind',\n                    stackAddress: 0,\n                    enabled: true,\n                    outputs: {},\n                    inputs: {}\n                };\n                parsedHardwareConfig.relay16Channels.forEach((relay) => {\n                    relay16Config.outputs[relay.channel] = {\n                        name: relay.name,\n                        type: 'relay',\n                        enabled: true\n                    };\n                });\n                newBoardConfigs.push(relay16Config);\n            }\n            // Save the configuration\n            setBoardConfigs(newBoardConfigs);\n            // Save to backend\n            const response = await authenticatedFetch('/api/logic/boards', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(newBoardConfigs)\n            });\n            if (response.ok) {\n                alert('Hardware configuration applied successfully!');\n                setShowConfigPreview(false);\n                setConfigHtmlFile(null);\n                setParsedHardwareConfig(null);\n                setActiveTab('boards'); // Switch to boards tab to show the configuration\n            }\n            else {\n                alert('Failed to save hardware configuration');\n            }\n        }\n        catch (error) {\n            console.error('Error applying configuration:', error);\n            alert('Error applying hardware configuration');\n        }\n    };\n    const handleFileUpload = (event) => {\n        const file = event.target.files?.[0];\n        if (file && file.name.endsWith('.js')) {\n            setLogicFile(file);\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const content = e.target?.result;\n                setLogicContent(content);\n                // Check if this is a cooling tower control file\n                if (content.includes('processCoolingTowerControl')) {\n                    // Extract the actual equipment IDs from the EQUIPMENT_IDS constant\n                    const equipmentIds = [];\n                    const equipmentNames = [];\n                    // Look for EQUIPMENT_IDS constant\n                    const idsMatch = content.match(/const\\s+EQUIPMENT_IDS\\s*=\\s*{([^}]+)}/s);\n                    if (idsMatch) {\n                        const idsContent = idsMatch[1];\n                        // Extract each tower ID\n                        const towerPattern = /COOLING_TOWER_(\\d+):\\s*['\"]([a-zA-Z0-9]{20})['\"]/g;\n                        let match;\n                        while ((match = towerPattern.exec(idsContent)) !== null) {\n                            const towerNum = match[1];\n                            const towerId = match[2];\n                            equipmentIds.push(towerId);\n                            equipmentNames.push(`Cooling Tower ${towerNum}`);\n                        }\n                    }\n                    if (equipmentIds.length > 0) {\n                        // Create equipment entries for each tower\n                        const towerEquipment = equipmentIds.map((id, index) => ({\n                            id: id,\n                            name: equipmentNames[index],\n                            hasLogic: false,\n                            fromFile: true\n                        }));\n                        setEquipmentList(towerEquipment);\n                        // Select all tower IDs (comma-separated)\n                        setSelectedEquipment(equipmentIds.join(','));\n                    }\n                    else {\n                        // Fallback if we can't extract IDs\n                        const coolingTowerEquipment = {\n                            id: 'COOLING-TOWER-SYSTEM',\n                            name: 'Cooling Tower Control System',\n                            hasLogic: false,\n                            fromFile: true\n                        };\n                        setEquipmentList([coolingTowerEquipment]);\n                        setSelectedEquipment('COOLING-TOWER-SYSTEM');\n                    }\n                }\n                else {\n                    // Parse equipment IDs and names from the logic file\n                    const parsedEquipment = parseEquipmentIdsFromLogic(content);\n                    if (parsedEquipment.length > 0) {\n                        // Update equipment list with ALL parsed IDs and their names\n                        const newEquipment = parsedEquipment.map(eq => ({\n                            id: eq.id,\n                            name: eq.name,\n                            hasLogic: false,\n                            fromFile: true\n                        }));\n                        setEquipmentList(prev => {\n                            // Keep existing equipment that have logic saved\n                            const existingWithLogic = prev.filter(e => e.hasLogic);\n                            // Add all new parsed equipment with names\n                            return [...existingWithLogic, ...newEquipment];\n                        });\n                        // Don't auto-select, let user choose\n                        setSelectedEquipment('');\n                    }\n                }\n            };\n            reader.readAsText(file);\n        }\n        else {\n            alert('Please select a valid .js file');\n        }\n    };\n    const handleUploadLogic = async () => {\n        if (!logicContent) {\n            alert('Please select a logic file first');\n            return;\n        }\n        if (!selectedEquipment) {\n            alert('Please select an equipment ID first');\n            return;\n        }\n        const confirmUpload = window.confirm(`Save configuration for Equipment ID: ${selectedEquipment}?\\n\\n` +\n            `Logic Execution: ${logicEnabled ? 'ENABLED' : 'DISABLED'}\\n` +\n            `Auto-Run: ${autoRunEnabled ? 'ENABLED' : 'DISABLED'}${autoRunEnabled ? ` (every ${pollingInterval} seconds)` : ''}\\n\\n` +\n            `This will ${logicEnabled ? 'enable' : 'disable'} local failover control when the BMS server is unavailable.`);\n        if (!confirmUpload)\n            return;\n        try {\n            const response = await authenticatedFetch('/api/logic/upload', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    content: logicContent,\n                    equipmentId: selectedEquipment,\n                    enabled: logicEnabled,\n                    autoRunEnabled: autoRunEnabled,\n                    pollingInterval: pollingInterval\n                })\n            });\n            if (response.ok) {\n                alert(`Configuration saved successfully for ${selectedEquipment}`);\n                setConfigChanged(false);\n                fetchEquipmentList();\n                fetchCurrentLogic();\n                // Start or stop local controller service based on enabled status\n                if (logicEnabled) {\n                    await authenticatedFetch('/api/logic/start-controller', {\n                        method: 'POST'\n                    });\n                }\n            }\n            else {\n                alert('Failed to save configuration');\n            }\n        }\n        catch (error) {\n            console.error('Error saving configuration:', error);\n            alert('Error saving configuration');\n        }\n    };\n    const handleResetConfiguration = async () => {\n        const confirmReset = window.confirm(`Reset ALL configurations?\\n\\nThis will:\\n- Clear all board configurations\\n- Remove loaded hardware config\\n- Clear equipment logic files`);\n        if (!confirmReset)\n            return;\n        // Clear board configs\n        setBoardConfigs([]);\n        setParsedHardwareConfig(null);\n        setConfigHtmlFile(null);\n        setPidControllers([]);\n        // Clear from backend\n        try {\n            await authenticatedFetch('/api/logic/boards', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify([])\n            });\n            // If equipment selected, clear that too\n            if (selectedEquipment) {\n                await authenticatedFetch(`/api/logic/delete/${selectedEquipment}`, {\n                    method: 'DELETE'\n                });\n                setLogicContent('');\n                setLogicFile(null);\n                setOriginalLogicContent('');\n                setIsEditingLogic(false);\n                setSelectedEquipment('');\n            }\n            alert('All configurations have been reset');\n            fetchEquipmentList();\n            // Reload board configs to clear everything\n            window.location.reload();\n        }\n        catch (error) {\n            console.error('Error resetting configuration:', error);\n            alert('Error resetting configuration');\n        }\n    };\n    const handleRemoveLogicFile = async () => {\n        if (!selectedEquipment) {\n            // Just clear the UI if no equipment selected\n            setLogicFile(null);\n            setLogicContent('');\n            setOriginalLogicContent('');\n            setSelectedEquipment('');\n            setEquipmentList(prev => prev.filter(eq => eq.hasLogic));\n            setIsEditingLogic(false);\n            return;\n        }\n        const confirmDelete = window.confirm(`Remove logic file for ${selectedEquipment}?\\n\\nThis will delete the logic file from the server.`);\n        if (!confirmDelete)\n            return;\n        try {\n            // Delete from server\n            const response = await authenticatedFetch(`/api/logic/delete/${selectedEquipment}`, {\n                method: 'DELETE'\n            });\n            if (response.ok) {\n                // Clear UI state\n                setLogicFile(null);\n                setLogicContent('');\n                setOriginalLogicContent('');\n                setSelectedEquipment('');\n                setIsEditingLogic(false);\n                // Refresh equipment list\n                await fetchEquipmentList();\n                alert('Logic file removed successfully');\n            }\n            else {\n                alert('Failed to remove logic file from server');\n            }\n        }\n        catch (error) {\n            console.error('Error removing logic file:', error);\n            alert('Error removing logic file');\n        }\n    };\n    const handleSaveLogicChanges = async () => {\n        if (!selectedEquipment || !logicContent) {\n            alert('No logic content to save');\n            return;\n        }\n        const confirmSave = window.confirm(`Save logic changes for ${equipmentList.find(eq => eq.id === selectedEquipment)?.name || selectedEquipment}?\\n\\n` +\n            `This will update the logic file that controls the equipment when in failover mode.`);\n        if (!confirmSave)\n            return;\n        try {\n            const response = await authenticatedFetch('/api/logic/upload', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    content: logicContent,\n                    equipmentId: selectedEquipment,\n                    enabled: logicEnabled\n                })\n            });\n            if (response.ok) {\n                alert('Logic changes saved successfully');\n                setOriginalLogicContent(logicContent);\n                setIsEditingLogic(false);\n                fetchEquipmentList();\n            }\n            else {\n                alert('Failed to save logic changes');\n            }\n        }\n        catch (error) {\n            console.error('Error saving logic changes:', error);\n            alert('Error saving logic changes');\n        }\n    };\n    const handleCancelEdit = () => {\n        setLogicContent(originalLogicContent);\n        setIsEditingLogic(false);\n    };\n    const handleTestLogic = async () => {\n        if (!selectedEquipment) {\n            alert('Please select an equipment ID first');\n            return;\n        }\n        // Check if we have logic content or if it's saved on server\n        let testContent = logicContent;\n        // If no logic content loaded in UI, try to fetch from server\n        if (!testContent) {\n            try {\n                const checkResponse = await authenticatedFetch(`/api/logic/current/${selectedEquipment}`);\n                if (checkResponse.ok) {\n                    testContent = await checkResponse.text();\n                }\n            }\n            catch (error) {\n                console.error('Error fetching saved logic:', error);\n            }\n        }\n        if (!testContent) {\n            alert('No logic file loaded or saved for this equipment');\n            return;\n        }\n        setLogicRunning(true);\n        setLogicOutput('Testing logic...\\n');\n        try {\n            const response = await authenticatedFetch('/api/logic/test', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    content: testContent,\n                    equipmentId: selectedEquipment\n                })\n            });\n            if (response.ok) {\n                const result = await response.json();\n                setLogicOutput(result.output || 'Test completed successfully');\n            }\n            else {\n                const errorText = await response.text();\n                setLogicOutput(`Test failed: ${errorText}`);\n            }\n        }\n        catch (error) {\n            console.error('Error testing logic:', error);\n            setLogicOutput('Error: ' + error);\n        }\n        finally {\n            setLogicRunning(false);\n        }\n    };\n    const handleBoardConfigChange = async (boardIndex, field, value) => {\n        const newConfigs = [...boardConfigs];\n        if (field === 'type') {\n            newConfigs[boardIndex].boardType = value;\n            // Reset outputs when board type changes\n            newConfigs[boardIndex].outputs = {};\n            newConfigs[boardIndex].inputs = {};\n        }\n        else if (field === 'enabled') {\n            newConfigs[boardIndex].enabled = value;\n        }\n        else if (field.startsWith('output_')) {\n            const outputNum = parseInt(field.split('_')[1]);\n            if (!newConfigs[boardIndex].outputs[outputNum]) {\n                newConfigs[boardIndex].outputs[outputNum] = { name: '', type: '', enabled: false };\n            }\n            const outputField = field.split('_')[2];\n            if (outputField === 'name' || outputField === 'type') {\n                newConfigs[boardIndex].outputs[outputNum][outputField] = value;\n            }\n            else if (outputField === 'enabled') {\n                newConfigs[boardIndex].outputs[outputNum].enabled = value;\n            }\n        }\n        else if (field.startsWith('input_')) {\n            const inputNum = parseInt(field.split('_')[1]);\n            if (!newConfigs[boardIndex].inputs) {\n                newConfigs[boardIndex].inputs = {};\n            }\n            if (!newConfigs[boardIndex].inputs[inputNum]) {\n                newConfigs[boardIndex].inputs[inputNum] = { name: '', inputType: '0-10V', conversionType: 'temperature', enabled: false };\n            }\n            const inputField = field.split('_')[2];\n            if (inputField === 'name') {\n                newConfigs[boardIndex].inputs[inputNum].name = value;\n            }\n            else if (inputField === 'type') {\n                newConfigs[boardIndex].inputs[inputNum].inputType = value;\n            }\n            else if (inputField === 'conversion') {\n                newConfigs[boardIndex].inputs[inputNum].conversionType = value;\n            }\n            else if (inputField === 'scaling') {\n                newConfigs[boardIndex].inputs[inputNum].scaling = value;\n            }\n            else if (inputField === 'enabled') {\n                newConfigs[boardIndex].inputs[inputNum].enabled = value;\n            }\n        }\n        setBoardConfigs(newConfigs);\n        // Save to backend\n        try {\n            await authenticatedFetch('/api/logic/boards', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(newConfigs)\n            });\n        }\n        catch (error) {\n            console.error('Error saving board config:', error);\n        }\n    };\n    const toggleBMSConnection = async () => {\n        try {\n            const response = await authenticatedFetch('/api/logic/bms-toggle', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ enabled: !bmsEnabled })\n            });\n            if (response.ok) {\n                setBmsEnabled(!bmsEnabled);\n                fetchBMSStatus();\n            }\n        }\n        catch (error) {\n            console.error('Error toggling BMS:', error);\n        }\n    };\n    const handleAutoRunToggle = async () => {\n        const newState = !autoRunEnabled;\n        setAutoRunEnabled(newState);\n        setConfigChanged(true);\n        try {\n            const response = await authenticatedFetch('/api/logic/auto-run', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    enabled: newState,\n                    interval: pollingInterval\n                })\n            });\n            if (response.ok) {\n                setConfigChanged(false);\n            }\n        }\n        catch (error) {\n            console.error('Error toggling auto-run:', error);\n        }\n    };\n    const handlePollingIntervalChange = async (interval) => {\n        setPollingInterval(interval);\n        setConfigChanged(true);\n        if (autoRunEnabled) {\n            try {\n                const response = await authenticatedFetch('/api/logic/auto-run', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        enabled: autoRunEnabled,\n                        interval: interval\n                    })\n                });\n                if (response.ok) {\n                    setConfigChanged(false);\n                }\n            }\n            catch (error) {\n                console.error('Error updating polling interval:', error);\n            }\n        }\n    };\n    const updatePIDController = async (index, field, value) => {\n        const newControllers = [...pidControllers];\n        newControllers[index] = { ...newControllers[index], [field]: value };\n        setPidControllers(newControllers);\n        // Save to backend\n        try {\n            const controller = newControllers[index];\n            await authenticatedFetch(`/api/pid-controllers/${controller.equipmentId}/${controller.controllerType}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ [field]: value })\n            });\n        }\n        catch (error) {\n            console.error('Error saving PID config:', error);\n        }\n    };\n    const getActionIcon = (action) => {\n        if (!action)\n            return '📝';\n        switch (action.toUpperCase()) {\n            case 'LOGIN': return '🔐';\n            case 'LOGOUT': return '🚪';\n            case 'CREATE': return '➕';\n            case 'UPDATE': return '✏️';\n            case 'DELETE': return '🗑️';\n            case 'VIEW': return '👁️';\n            default: return '📝';\n        }\n    };\n    const getStatusColor = (status) => {\n        if (!status)\n            return '#6b7280'; // Gray for unknown\n        return status === 'success' ? '#10b981' : '#ef4444';\n    };\n    // Removed unused getBoardOutputs function\n    if (!isAdmin) {\n        return (_jsx(AuthGuard, { children: _jsx(\"div\", { className: \"admin-container\", children: _jsxs(\"div\", { className: \"access-denied\", children: [_jsx(AlertTriangle, { size: 48, color: \"#ef4444\" }), _jsx(\"h2\", { children: \"Access Denied\" }), _jsx(\"p\", { children: \"You must be an administrator to access this page.\" })] }) }) }));\n    }\n    return (_jsx(AuthGuard, { children: _jsxs(\"div\", { className: \"admin-container\", children: [_jsxs(\"div\", { className: \"admin-header\", children: [_jsxs(\"div\", { className: \"admin-title\", children: [_jsx(Shield, { size: 28 }), _jsx(\"h1\", { children: \"System Administration\" })] }), _jsx(\"div\", { className: \"admin-subtitle\", children: \"Advanced Configuration & Monitoring\" })] }), _jsxs(\"div\", { className: \"admin-tabs\", children: [_jsxs(\"button\", { className: `tab-button ${activeTab === 'logic' ? 'active' : ''}`, onClick: () => setActiveTab('logic'), children: [_jsx(FileCode, { size: 18 }), _jsx(\"span\", { children: \"Logic Engine\" })] }), _jsxs(\"button\", { className: `tab-button ${activeTab === 'pid' ? 'active' : ''}`, onClick: () => setActiveTab('pid'), children: [_jsx(Cpu, { size: 18 }), _jsx(\"span\", { children: \"PID Controllers\" })] }), _jsxs(\"button\", { className: `tab-button ${activeTab === 'boards' ? 'active' : ''}`, onClick: () => setActiveTab('boards'), children: [_jsx(Settings, { size: 18 }), _jsx(\"span\", { children: \"Board Config\" })] }), _jsxs(\"button\", { className: `tab-button ${activeTab === 'status' ? 'active' : ''}`, onClick: () => setActiveTab('status'), children: [_jsx(Activity, { size: 18 }), _jsx(\"span\", { children: \"BMS Status\" })] }), _jsxs(\"button\", { className: `tab-button ${activeTab === 'audit' ? 'active' : ''}`, onClick: () => setActiveTab('audit'), children: [_jsx(FileText, { size: 18 }), _jsx(\"span\", { children: \"Audit Logs\" })] }), _jsxs(\"button\", { className: `tab-button ${activeTab === 'security' ? 'active' : ''}`, onClick: () => setActiveTab('security'), children: [_jsx(Lock, { size: 18 }), _jsx(\"span\", { children: \"Security\" })] })] }), _jsxs(\"div\", { className: \"admin-content\", children: [activeTab === 'logic' && (_jsxs(\"div\", { className: \"logic-section\", children: [_jsx(\"h2\", { children: \"Equipment Configuration & Logic Control\" }), _jsxs(\"div\", { className: \"section\", style: { background: '#f0f9ff', padding: '20px', borderRadius: '8px', marginBottom: '20px', border: '2px solid #0ea5e9' }, children: [_jsx(\"h3\", { style: { marginTop: 0, color: '#0c4a6e' }, children: \"Hardware Configuration Import\" }), _jsx(\"p\", { style: { color: '#64748b', marginBottom: '15px' }, children: \"Upload a hardware configuration HTML file to automatically configure I/O assignments, sensor types, and device names.\" }), _jsxs(\"div\", { style: { display: 'flex', gap: '15px', alignItems: 'center', marginBottom: '15px' }, children: [_jsx(\"input\", { ref: configFileInputRef, type: \"file\", accept: \".html\", onChange: handleConfigHtmlUpload, style: { display: 'none' } }), _jsxs(\"button\", { className: \"btn-primary\", onClick: () => configFileInputRef.current?.click(), style: { background: parsedHardwareConfig ? '#10b981' : '#0ea5e9', color: 'white' }, children: [_jsx(Upload, { size: 14 }), parsedHardwareConfig ? 'Config Loaded - Change File' : 'Select Config HTML'] }), (configHtmlFile || parsedHardwareConfig) && (_jsxs(_Fragment, { children: [_jsx(\"span\", { style: { color: '#374151', fontWeight: 500 }, children: configHtmlFile?.name || 'Configuration Applied' }), _jsxs(\"button\", { className: \"btn-remove\", onClick: () => {\n                                                                setConfigHtmlFile(null);\n                                                                setParsedHardwareConfig(null);\n                                                            }, title: \"Remove configuration\", children: [_jsx(XCircle, { size: 14 }), \"Remove\"] })] }))] }), showConfigPreview && parsedHardwareConfig && (_jsx(\"div\", { style: {\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                background: 'rgba(0,0,0,0.5)',\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                                zIndex: 1000\n                                            }, children: _jsxs(\"div\", { style: {\n                                                    background: 'white',\n                                                    borderRadius: '12px',\n                                                    padding: '30px',\n                                                    maxWidth: '800px',\n                                                    maxHeight: '80vh',\n                                                    overflow: 'auto',\n                                                    boxShadow: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'\n                                                }, children: [_jsx(\"h3\", { style: { marginTop: 0, marginBottom: '20px' }, children: \"Hardware Configuration Preview\" }), parsedHardwareConfig.projectInfo && (_jsxs(\"div\", { style: { marginBottom: '20px', padding: '10px', background: '#f9fafb', borderRadius: '6px' }, children: [_jsx(\"h4\", { style: { margin: '0 0 10px 0', color: '#374151' }, children: \"Project Information\" }), _jsxs(\"p\", { style: { margin: '5px 0' }, children: [\"Project: \", parsedHardwareConfig.projectInfo.project] }), _jsxs(\"p\", { style: { margin: '5px 0' }, children: [\"Date: \", parsedHardwareConfig.projectInfo.date] }), _jsxs(\"p\", { style: { margin: '5px 0' }, children: [\"Contractor: \", parsedHardwareConfig.projectInfo.contractor] })] })), parsedHardwareConfig.megabasTriacs.length > 0 && (_jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"h4\", { style: { color: '#374151' }, children: \"MegaBAS Triacs\" }), _jsx(\"ul\", { style: { margin: '5px 0' }, children: parsedHardwareConfig.megabasTriacs.map((t, i) => (_jsxs(\"li\", { children: [\"T\", t.channel, \": \", t.name] }, i))) })] })), parsedHardwareConfig.megabasAnalogOutputs.length > 0 && (_jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"h4\", { style: { color: '#374151' }, children: \"MegaBAS Analog Outputs\" }), _jsx(\"ul\", { style: { margin: '5px 0' }, children: parsedHardwareConfig.megabasAnalogOutputs.map((ao, i) => (_jsxs(\"li\", { children: [\"AO\", ao.channel, \": \", ao.name, \" (\", ao.type, \")\"] }, i))) })] })), parsedHardwareConfig.megabasInputs.length > 0 && (_jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"h4\", { style: { color: '#374151' }, children: \"MegaBAS Inputs\" }), _jsx(\"ul\", { style: { margin: '5px 0' }, children: parsedHardwareConfig.megabasInputs.map((input, i) => (_jsxs(\"li\", { children: [\"AI\", input.channel, \": \", input.name, \" (\", input.range, \")\"] }, i))) })] })), parsedHardwareConfig.input16Channels.length > 0 && (_jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"h4\", { style: { color: '#374151' }, children: \"16-Input Channels\" }), _jsx(\"ul\", { style: { margin: '5px 0' }, children: parsedHardwareConfig.input16Channels.map((ch, i) => (_jsxs(\"li\", { children: [\"CH\", ch.channel, \": \", ch.name, \" (\", ch.type, \")\"] }, i))) })] })), parsedHardwareConfig.relay16Channels.length > 0 && (_jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"h4\", { style: { color: '#374151' }, children: \"16-Relay Outputs\" }), _jsx(\"ul\", { style: { margin: '5px 0' }, children: parsedHardwareConfig.relay16Channels.map((r, i) => (_jsxs(\"li\", { children: [\"Relay \", r.channel, \": \", r.name] }, i))) })] })), _jsxs(\"div\", { style: { display: 'flex', gap: '10px', justifyContent: 'flex-end', marginTop: '20px' }, children: [_jsx(\"button\", { className: \"btn-cancel\", onClick: () => {\n                                                                    setShowConfigPreview(false);\n                                                                    setParsedHardwareConfig(null);\n                                                                }, children: \"Cancel\" }), _jsx(\"button\", { className: \"btn-success\", onClick: applyParsedConfiguration, children: \"Apply Configuration\" })] })] }) }))] }), _jsx(\"h3\", { children: \"Equipment Logic Files (Failover Control)\" }), _jsxs(\"div\", { className: \"equipment-selector\", children: [_jsx(\"label\", { children: \"Equipment ID Configuration:\" }), _jsxs(\"div\", { style: {\n                                                display: 'flex',\n                                                gap: '10px',\n                                                alignItems: 'flex-start',\n                                                marginBottom: '10px'\n                                            }, children: [_jsxs(\"div\", { style: { flex: 1 }, children: [_jsx(\"input\", { type: \"text\", value: selectedEquipment, onChange: (e) => {\n                                                                setSelectedEquipment(e.target.value);\n                                                                setConfigChanged(true);\n                                                            }, placeholder: \"Enter equipment UUID(s) - comma separated for multiple towers\", style: {\n                                                                width: '100%',\n                                                                padding: '10px 12px',\n                                                                border: '1px solid #d1d5db',\n                                                                borderRadius: '6px',\n                                                                fontSize: '14px',\n                                                                fontFamily: 'monospace',\n                                                                background: logicContent ? 'white' : '#f9fafb'\n                                                            }, disabled: !logicContent }), _jsx(\"small\", { style: {\n                                                                color: '#6b7280',\n                                                                display: 'block',\n                                                                marginTop: '5px'\n                                                            }, children: parsedHardwareConfig && parsedHardwareConfig.equipmentIds ?\n                                                                `Extracted IDs from config: ${parsedHardwareConfig.equipmentIds.join(', ')}` :\n                                                                'Equipment UUIDs will be extracted from config HTML file or enter manually' })] }), _jsx(\"button\", { className: \"btn-secondary\", onClick: () => {\n                                                        const ids = selectedEquipment.split(',').map(id => id.trim()).filter(id => id);\n                                                        if (ids.length > 0) {\n                                                            alert(`Equipment IDs configured:\\n${ids.map((id, i) => `Equipment ${i + 1}: ${id}`).join('\\n')}`);\n                                                        }\n                                                        else {\n                                                            alert('Please enter at least one equipment ID');\n                                                        }\n                                                    }, style: {\n                                                        background: '#6b7280',\n                                                        color: 'white',\n                                                        padding: '10px 16px',\n                                                        borderRadius: '6px',\n                                                        border: 'none',\n                                                        cursor: 'pointer',\n                                                        fontSize: '14px',\n                                                        fontWeight: 500\n                                                    }, disabled: !logicContent, children: \"Validate IDs\" })] }), parsedHardwareConfig && parsedHardwareConfig.equipmentIds && (_jsxs(\"div\", { style: {\n                                                marginTop: '10px',\n                                                padding: '12px',\n                                                background: '#f0f9ff',\n                                                borderRadius: '6px',\n                                                border: '1px solid #0ea5e9'\n                                            }, children: [_jsx(\"h4\", { style: { margin: '0 0 8px 0', fontSize: '14px', color: '#0c4a6e' }, children: \"Equipment IDs from Configuration:\" }), _jsx(\"div\", { style: { display: 'flex', gap: '8px', flexWrap: 'wrap' }, children: parsedHardwareConfig.equipmentIds?.map((id, index) => (_jsxs(\"button\", { onClick: () => {\n                                                            setSelectedEquipment(parsedHardwareConfig.equipmentIds?.join(', ') || '');\n                                                            alert(`Loaded ${parsedHardwareConfig.equipmentIds?.length || 0} equipment IDs from configuration`);\n                                                        }, style: {\n                                                            padding: '6px 12px',\n                                                            background: '#0ea5e9',\n                                                            color: 'white',\n                                                            border: 'none',\n                                                            borderRadius: '4px',\n                                                            fontSize: '12px',\n                                                            cursor: 'pointer',\n                                                            fontFamily: 'monospace'\n                                                        }, children: [\"Tower \", index + 1, \": \", id.substring(0, 8), \"...\"] }, id))) }), _jsx(\"button\", { onClick: () => {\n                                                        setSelectedEquipment(parsedHardwareConfig.equipmentIds?.join(', ') || '');\n                                                    }, style: {\n                                                        marginTop: '10px',\n                                                        padding: '8px 16px',\n                                                        background: '#0ea5e9',\n                                                        color: 'white',\n                                                        border: 'none',\n                                                        borderRadius: '6px',\n                                                        fontSize: '14px',\n                                                        cursor: 'pointer',\n                                                        fontWeight: 500\n                                                    }, children: \"Use All IDs from Config\" })] })), !logicContent && (_jsx(\"div\", { className: \"equipment-info\", children: _jsx(\"small\", { children: \"Upload a logic file first to configure equipment IDs\" }) }))] }), equipmentList.length > 0 && (_jsxs(\"div\", { className: \"existing-equipment\", children: [_jsx(\"h4\", { children: \"Equipment with Local Logic Files:\" }), _jsx(\"div\", { className: \"equipment-grid\", children: equipmentList.filter(eq => eq.hasLogic).map(eq => (_jsxs(\"button\", { className: `equipment-card ${selectedEquipment === eq.id ? 'selected' : ''}`, onClick: () => {\n                                                    setSelectedEquipment(eq.id);\n                                                    fetchCurrentLogic();\n                                                }, children: [_jsxs(\"span\", { className: \"equipment-id\", children: [eq.name, \" (\", eq.id.substring(0, 8), \"...)\"] }), _jsx(\"span\", { className: \"equipment-status\", children: \"\\u2713 Logic Uploaded\" })] }, eq.id))) })] })), _jsxs(\"div\", { className: \"logic-controls\", children: [_jsx(\"div\", { className: \"logic-enable-toggle\", children: _jsxs(\"label\", { className: \"toggle-container\", children: [_jsx(\"span\", { className: \"toggle-label-text\", children: \"Logic Execution:\" }), _jsxs(\"label\", { className: \"toggle-switch large\", children: [_jsx(\"input\", { type: \"checkbox\", checked: logicEnabled, onChange: (e) => {\n                                                                    setLogicEnabled(e.target.checked);\n                                                                    setConfigChanged(true);\n                                                                }, disabled: !selectedEquipment }), _jsx(\"span\", { className: \"toggle-slider\" })] }), _jsx(\"span\", { className: `status-text ${logicEnabled ? 'enabled' : 'disabled'}`, children: logicEnabled ? 'ENABLED' : 'DISABLED' })] }) }), _jsxs(\"div\", { className: \"auto-run-controls\", children: [_jsxs(\"label\", { className: \"toggle-container\", children: [_jsx(\"span\", { className: \"toggle-label-text\", children: \"Auto-Run Logic:\" }), _jsxs(\"label\", { className: \"toggle-switch\", children: [_jsx(\"input\", { type: \"checkbox\", checked: autoRunEnabled, onChange: handleAutoRunToggle, disabled: !logicEnabled }), _jsx(\"span\", { className: \"toggle-slider\" })] }), _jsx(\"span\", { className: `status-text ${autoRunEnabled ? 'enabled' : 'disabled'}`, children: autoRunEnabled ? 'RUNNING' : 'STOPPED' })] }), autoRunEnabled && (_jsxs(\"div\", { className: \"polling-interval-selector\", children: [_jsx(\"label\", { children: \"Run Interval:\" }), _jsxs(\"select\", { value: pollingInterval, onChange: (e) => handlePollingIntervalChange(Number(e.target.value)), className: \"interval-select\", children: [_jsx(\"option\", { value: 7, children: \"7 seconds\" }), _jsx(\"option\", { value: 12, children: \"12 seconds\" }), _jsx(\"option\", { value: 15, children: \"15 seconds\" }), _jsx(\"option\", { value: 20, children: \"20 seconds\" }), _jsx(\"option\", { value: 30, children: \"30 seconds\" }), _jsx(\"option\", { value: 45, children: \"45 seconds\" }), _jsx(\"option\", { value: 60, children: \"1 minute\" }), _jsx(\"option\", { value: 300, children: \"5 minutes\" }), _jsx(\"option\", { value: 900, children: \"15 minutes\" })] })] }))] }), configChanged && (_jsx(\"div\", { className: \"config-warning\", children: \"\\u26A0\\uFE0F Configuration changed - Save to apply changes\" }))] }), _jsxs(\"div\", { className: \"logic-upload\", children: [_jsxs(\"div\", { className: \"upload-controls\", children: [_jsx(\"input\", { ref: fileInputRef, type: \"file\", accept: \".js\", onChange: handleFileUpload, style: { display: 'none' } }), _jsxs(\"button\", { className: \"btn-primary\", onClick: () => fileInputRef.current?.click(), style: { background: logicContent ? '#10b981' : '#3b82f6' }, children: [_jsx(Upload, { size: 14 }), logicContent ? 'Logic Loaded - Change File' : 'Select Logic File'] }), (logicFile || (logicContent && selectedEquipment)) && (_jsxs(_Fragment, { children: [_jsx(\"span\", { className: \"file-name\", children: logicFile?.name || `Logic for ${selectedEquipment?.substring(0, 20)}...` }), _jsxs(\"button\", { className: \"btn-remove\", onClick: handleRemoveLogicFile, title: \"Remove selected file\", children: [_jsx(XCircle, { size: 14 }), \"Remove\"] })] }))] }), _jsxs(\"div\", { className: \"logic-actions\", children: [_jsxs(\"button\", { className: \"btn-primary\", onClick: handleUploadLogic, disabled: !logicContent || !selectedEquipment, style: { background: '#14b8a6', borderColor: '#14b8a6' }, children: [_jsx(Upload, { size: 14 }), \"Save Configuration\"] }), _jsxs(\"button\", { className: \"btn-info\", onClick: handleTestLogic, disabled: !logicContent || logicRunning, children: [logicRunning ? _jsx(Square, { size: 14 }) : _jsx(Play, { size: 14 }), logicRunning ? 'Testing...' : 'Test Logic'] }), _jsxs(\"button\", { className: \"btn-danger\", onClick: handleResetConfiguration, disabled: false, children: [_jsx(XCircle, { size: 14 }), \"Reset Configuration\"] })] })] }), _jsxs(\"div\", { className: \"logic-editor\", children: [_jsxs(\"div\", { className: \"editor-header\", children: [_jsx(\"h3\", { children: \"Logic File Content\" }), logicContent && selectedEquipment && (_jsx(\"div\", { className: \"editor-actions\", children: !isEditingLogic ? (_jsxs(\"button\", { className: \"btn-modify\", onClick: () => setIsEditingLogic(true), children: [_jsx(FileCode, { size: 14 }), \"Modify Logic\"] })) : (_jsxs(_Fragment, { children: [_jsxs(\"button\", { className: \"btn-save-changes\", onClick: handleSaveLogicChanges, children: [_jsx(CheckCircle, { size: 14 }), \"Save Logic Changes\"] }), _jsxs(\"button\", { className: \"btn-cancel\", onClick: handleCancelEdit, children: [_jsx(XCircle, { size: 14 }), \"Cancel\"] })] })) }))] }), _jsx(\"textarea\", { value: logicContent, onChange: (e) => isEditingLogic && setLogicContent(e.target.value), placeholder: \"// Equipment logic code will appear here...\", spellCheck: false, readOnly: !isEditingLogic, className: isEditingLogic ? 'editing' : 'readonly' }), isEditingLogic && (_jsx(\"div\", { className: \"edit-indicator\", children: _jsx(\"span\", { children: \"\\uD83D\\uDCDD Editing Mode - Make your changes and click \\\"Save Logic Changes\\\" when done\" }) }))] }), logicOutput && (_jsxs(\"div\", { className: \"logic-output\", children: [_jsx(\"h3\", { children: \"Test Output\" }), _jsx(\"pre\", { children: logicOutput })] })), logicContent && selectedEquipment && logicContent.includes('processCoolingTowerControl') && (_jsxs(\"div\", { className: \"logic-execution-section\", style: {\n                                        background: '#f0fdf4',\n                                        border: '2px solid #10b981',\n                                        borderRadius: '8px',\n                                        padding: '20px',\n                                        marginTop: '20px'\n                                    }, children: [_jsxs(\"h3\", { style: { color: '#065f46', marginTop: 0 }, children: [_jsx(Cpu, { size: 20, style: { verticalAlign: 'middle', marginRight: '8px' } }), \"Logic Execution Engine\"] }), _jsxs(\"div\", { style: { marginBottom: '15px' }, children: [_jsx(\"p\", { style: { color: '#374151' }, children: \"The Cooling Tower Control Logic is ready for execution. When enabled, the system will:\" }), _jsxs(\"ul\", { style: { color: '#6b7280', marginLeft: '20px' }, children: [_jsxs(\"li\", { children: [\"Read inputs from MegaBAS and 16-Input boards every \", pollingInterval >= 60\n                                                                    ? pollingInterval === 60\n                                                                        ? '1 minute'\n                                                                        : `${pollingInterval / 60} minutes`\n                                                                    : `${pollingInterval} seconds`] }), _jsx(\"li\", { children: \"Execute the control logic with real sensor data\" }), _jsx(\"li\", { children: \"Write outputs to control tower VFDs, valves, and heaters\" }), _jsx(\"li\", { children: \"Monitor safety limits and vibration levels\" })] })] }), _jsxs(\"div\", { style: {\n                                                display: 'flex',\n                                                gap: '15px',\n                                                alignItems: 'center',\n                                                padding: '15px',\n                                                background: 'white',\n                                                borderRadius: '6px'\n                                            }, children: [_jsxs(\"button\", { className: \"btn-success\", onClick: async () => {\n                                                        if (confirm('Start real-time logic execution? This will control actual equipment based on sensor readings.')) {\n                                                            try {\n                                                                // First save the board configuration\n                                                                await authenticatedFetch('/api/boards/save-config', {\n                                                                    method: 'POST',\n                                                                    headers: { 'Content-Type': 'application/json' },\n                                                                    body: JSON.stringify(boardConfigs)\n                                                                });\n                                                                // Then start execution\n                                                                const response = await authenticatedFetch('/api/logic/execute', {\n                                                                    method: 'POST',\n                                                                    headers: { 'Content-Type': 'application/json' },\n                                                                    body: JSON.stringify({\n                                                                        logicFile: logicContent,\n                                                                        equipmentId: selectedEquipment,\n                                                                        pollingInterval: pollingInterval\n                                                                    })\n                                                                });\n                                                                if (response.ok) {\n                                                                    alert('Logic execution started successfully!');\n                                                                    setAutoRunEnabled(true);\n                                                                }\n                                                            }\n                                                            catch (error) {\n                                                                console.error('Failed to start execution:', error);\n                                                                alert('Failed to start logic execution');\n                                                            }\n                                                        }\n                                                    }, disabled: !logicEnabled, children: [_jsx(Play, { size: 14 }), \"Start Real-Time Execution\"] }), _jsxs(\"button\", { className: \"btn-danger\", onClick: async () => {\n                                                        try {\n                                                            const response = await authenticatedFetch('/api/logic/stop', {\n                                                                method: 'POST'\n                                                            });\n                                                            if (response.ok) {\n                                                                alert('Logic execution stopped');\n                                                                setAutoRunEnabled(false);\n                                                            }\n                                                        }\n                                                        catch (error) {\n                                                            console.error('Failed to stop execution:', error);\n                                                        }\n                                                    }, children: [_jsx(Square, { size: 14 }), \"Stop Execution\"] }), _jsxs(\"div\", { style: { marginLeft: 'auto', display: 'flex', alignItems: 'center', gap: '10px' }, children: [_jsx(\"label\", { children: \"Execution Interval:\" }), _jsxs(\"select\", { value: pollingInterval, onChange: (e) => setPollingInterval(Number(e.target.value)), className: \"interval-select\", children: [_jsx(\"option\", { value: 7, children: \"7 seconds\" }), _jsx(\"option\", { value: 12, children: \"12 seconds\" }), _jsx(\"option\", { value: 15, children: \"15 seconds\" }), _jsx(\"option\", { value: 20, children: \"20 seconds\" }), _jsx(\"option\", { value: 30, children: \"30 seconds\" }), _jsx(\"option\", { value: 45, children: \"45 seconds\" }), _jsx(\"option\", { value: 60, children: \"1 minute\" }), _jsx(\"option\", { value: 300, children: \"5 minutes\" }), _jsx(\"option\", { value: 900, children: \"15 minutes\" })] })] })] }), autoRunEnabled && (_jsxs(\"div\", { style: {\n                                                marginTop: '15px',\n                                                padding: '10px',\n                                                background: '#d1fae5',\n                                                borderRadius: '4px',\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                gap: '10px'\n                                            }, children: [_jsx(Activity, { size: 18, color: \"#10b981\" }), _jsx(\"span\", { style: { color: '#065f46', fontWeight: 500 }, children: \"Logic execution is ACTIVE - Reading sensors and controlling equipment\" })] })), executionResults.length > 0 && (_jsxs(\"div\", { style: {\n                                                marginTop: '20px',\n                                                border: '1px solid #d1d5db',\n                                                borderRadius: '6px',\n                                                padding: '15px',\n                                                background: '#f9fafb',\n                                                maxHeight: '400px',\n                                                overflow: 'auto'\n                                            }, children: [_jsxs(\"h4\", { style: { margin: '0 0 15px 0', color: '#374151' }, children: [\"Live Execution Results\", _jsxs(\"span\", { style: {\n                                                                float: 'right',\n                                                                fontSize: '12px',\n                                                                color: '#6b7280',\n                                                                fontWeight: 'normal'\n                                                            }, children: [\"Last \", executionResults.length, \" executions\"] })] }), _jsx(\"div\", { style: { display: 'grid', gap: '10px' }, children: executionResults.slice(-5).reverse().map((result, index) => (_jsxs(\"div\", { style: {\n                                                            background: 'white',\n                                                            border: '1px solid #e5e7eb',\n                                                            borderRadius: '4px',\n                                                            padding: '10px',\n                                                            fontSize: '12px'\n                                                        }, children: [_jsxs(\"div\", { style: {\n                                                                    display: 'flex',\n                                                                    justifyContent: 'space-between',\n                                                                    marginBottom: '8px',\n                                                                    borderBottom: '1px solid #f3f4f6',\n                                                                    paddingBottom: '5px'\n                                                                }, children: [_jsx(\"span\", { style: { color: '#6b7280' }, children: new Date(result.timestamp).toLocaleTimeString() }), _jsx(\"span\", { style: { color: '#10b981', fontWeight: 500 }, children: result.activeLogic || 'CoolingTower' })] }), result.outputs && (_jsxs(\"div\", { style: { display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)', gap: '10px' }, children: [_jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Tower 1:\" }), _jsxs(\"span\", { style: {\n                                                                                    marginLeft: '5px',\n                                                                                    color: result.outputs.tower1VFDEnable ? '#10b981' : '#6b7280',\n                                                                                    fontWeight: 500\n                                                                                }, children: [result.outputs.tower1VFDEnable ? 'ON' : 'OFF', result.outputs.tower1FanSpeed > 0 && ` (${result.outputs.tower1FanSpeed}V)`] })] }), _jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Tower 2:\" }), _jsxs(\"span\", { style: {\n                                                                                    marginLeft: '5px',\n                                                                                    color: result.outputs.tower2VFDEnable ? '#10b981' : '#6b7280',\n                                                                                    fontWeight: 500\n                                                                                }, children: [result.outputs.tower2VFDEnable ? 'ON' : 'OFF', result.outputs.tower2FanSpeed > 0 && ` (${result.outputs.tower2FanSpeed}V)`] })] }), _jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Tower 3:\" }), _jsxs(\"span\", { style: {\n                                                                                    marginLeft: '5px',\n                                                                                    color: result.outputs.tower3VFDEnable ? '#10b981' : '#6b7280',\n                                                                                    fontWeight: 500\n                                                                                }, children: [result.outputs.tower3VFDEnable ? 'ON' : 'OFF', result.outputs.tower3FanSpeed > 0 && ` (${result.outputs.tower3FanSpeed}V)`] })] }), _jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Active Towers:\" }), _jsx(\"span\", { style: { marginLeft: '5px', fontWeight: 500 }, children: result.outputs.activeTowers || 0 })] }), _jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Cooling Demand:\" }), _jsxs(\"span\", { style: { marginLeft: '5px', fontWeight: 500 }, children: [result.outputs.coolingDemand || 0, \"%\"] })] }), _jsxs(\"div\", { children: [_jsx(\"span\", { style: { color: '#9ca3af' }, children: \"Delta-T:\" }), _jsxs(\"span\", { style: { marginLeft: '5px', fontWeight: 500 }, children: [result.outputs.loopDeltaT?.toFixed(1) || '0.0', \"\\u00B0F\"] })] })] })), result.inputs && (_jsxs(\"div\", { style: {\n                                                                    marginTop: '8px',\n                                                                    paddingTop: '8px',\n                                                                    borderTop: '1px solid #f3f4f6',\n                                                                    color: '#9ca3af',\n                                                                    fontSize: '11px'\n                                                                }, children: [\"Supply: \", result.inputs.CH1?.toFixed(1) || '--', \"\\u00B0F | Return: \", result.inputs.CH2?.toFixed(1) || '--', \"\\u00B0F | OAT: \", result.inputs.outdoorTemp?.toFixed(1) || result.outputs?.outdoorTemp?.toFixed(1) || '--', \"\\u00B0F\"] }))] }, index))) })] }))] })), autoRunEnabled && (_jsxs(\"div\", { className: \"processing-results\", children: [_jsxs(\"h3\", { children: [\"Processing Logic Results \", logicResults.length > 0 && _jsx(\"span\", { className: \"live-indicator\", children: \"\\u25CF Live\" })] }), logicResults.length === 0 ? (_jsxs(\"div\", { className: \"no-results\", children: [_jsx(\"p\", { children: \"Waiting for logic execution results...\" }), _jsxs(\"small\", { children: [\"Results will appear here when the logic runs (every \", pollingInterval >= 60\n                                                            ? pollingInterval === 60\n                                                                ? '1 minute'\n                                                                : `${pollingInterval / 60} minutes`\n                                                            : `${pollingInterval} seconds`, \")\"] })] })) : (_jsxs(_Fragment, { children: [_jsx(\"div\", { className: \"results-grid\", children: logicResults.map((result, index) => (_jsxs(\"div\", { className: \"result-card\", children: [_jsx(\"div\", { className: \"result-timestamp\", children: new Date(result.timestamp).toLocaleTimeString() }), _jsxs(\"div\", { className: \"result-data\", children: [_jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Setpoint:\" }), _jsxs(\"span\", { className: \"result-value\", children: [result.setpoint?.toFixed(1), \"\\u00B0F\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Current:\" }), _jsxs(\"span\", { className: \"result-value\", children: [result.currentTemp?.toFixed(1), \"\\u00B0F\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Space/Supply/Outdoor:\" }), _jsxs(\"span\", { className: \"result-value\", children: [result.spaceTemp?.toFixed(0) || '--', \"/\", result.supplyTemp?.toFixed(0) || '--', \"/\", result.outdoorTemp?.toFixed(0) || '--', \"\\u00B0F\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Heating:\" }), _jsxs(\"span\", { className: \"result-value heat\", children: [result.heating?.toFixed(0), \"%\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Cooling:\" }), _jsxs(\"span\", { className: \"result-value cool\", children: [result.cooling?.toFixed(0), \"%\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"OA Damper:\" }), _jsxs(\"span\", { className: \"result-value\", children: [result.damper?.toFixed(0), \"%\"] })] }), _jsxs(\"div\", { className: \"result-row\", children: [_jsx(\"span\", { className: \"result-label\", children: \"Fan:\" }), _jsxs(\"span\", { className: `result-value ${result.fan ? 'active' : 'inactive'}`, children: [result.fan ? 'ON' : 'OFF', \" \", result.fanSpeed && `(${result.fanSpeed})`] })] })] })] }, index))) }), _jsx(\"div\", { className: \"results-info\", children: _jsxs(\"small\", { children: [\"Showing last \", logicResults.length, \" executions \\u2022 Updates every 2 seconds\"] }) })] }))] }))] })), activeTab === 'boards' && (_jsxs(\"div\", { className: \"boards-section\", children: [_jsx(\"h2\", { children: \"Sequent Microsystems Board Configuration\" }), _jsx(\"div\", { className: \"boards-grid\", children: boardConfigs.map((config, index) => (_jsxs(\"div\", { className: \"board-card\", children: [_jsxs(\"h3\", { children: [config.boardType === 'megabas' && 'MegaBAS', config.boardType === '16univin' && '16-Universal Inputs', config.boardType === '16relind' && '16-Relay', config.boardType === '16uout' && '16-Outputs', config.boardType === '8relind' && '8-Relay', ' ', \"(Stack \", config.stackAddress, \")\"] }), _jsx(\"div\", { className: \"board-status\", children: _jsxs(\"label\", { className: \"board-toggle-container\", children: [_jsx(\"span\", { children: \"Board Enabled\" }), _jsx(Switch, { checked: config.enabled, onCheckedChange: (checked) => handleBoardConfigChange(index, 'enabled', checked) })] }) }), config.enabled && (_jsxs(\"div\", { className: \"board-outputs\", children: [_jsx(\"h4\", { children: \"Output Configuration\" }), config.boardType === 'megabas' && (_jsxs(_Fragment, { children: [_jsxs(\"div\", { className: \"output-group\", children: [_jsx(\"h5\", { children: \"Triac Outputs (1-4)\" }), [1, 2, 3, 4].map(num => (_jsxs(\"div\", { className: \"output-item\", children: [_jsxs(\"span\", { className: \"output-number\", children: [\"T\", num] }), _jsx(\"input\", { type: \"text\", placeholder: `Triac ${num} name`, value: config.outputs[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `output_${num}_name`, e.target.value) }), _jsx(Switch, { checked: config.outputs[num]?.enabled || false, onCheckedChange: (checked) => handleBoardConfigChange(index, `output_${num}_enabled`, checked) })] }, `triac-${num}`)))] }), _jsxs(\"div\", { className: \"output-group\", children: [_jsx(\"h5\", { children: \"0-10V Outputs (1-4)\" }), [5, 6, 7, 8].map((num, i) => (_jsxs(\"div\", { className: \"output-item\", children: [_jsxs(\"span\", { className: \"output-number\", children: [\"AO\", i + 1] }), _jsx(\"input\", { type: \"text\", placeholder: `Output ${i + 1} name`, value: config.outputs[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `output_${num}_name`, e.target.value) }), _jsx(Switch, { checked: config.outputs[num]?.enabled || false, onCheckedChange: (checked) => handleBoardConfigChange(index, `output_${num}_enabled`, checked) })] }, `out-${num}`)))] }), _jsxs(\"div\", { className: \"input-group\", children: [_jsx(\"h5\", { children: \"Universal Inputs (1-8)\" }), [1, 2, 3, 4, 5, 6, 7, 8].map(num => (_jsxs(\"div\", { className: \"input-config-item\", children: [_jsxs(\"span\", { className: \"input-number\", children: [\"In\", num] }), _jsx(\"input\", { type: \"text\", placeholder: `Input ${num} name`, value: config.inputs?.[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `input_${num}_name`, e.target.value) }), _jsxs(\"select\", { value: config.inputs?.[num]?.inputType || '0-10V', onChange: (e) => handleBoardConfigChange(index, `input_${num}_type`, e.target.value), className: \"input-type-select\", children: [_jsx(\"option\", { value: \"0-10V\", children: \"0-10V\" }), _jsx(\"option\", { value: \"1k\", children: \"1k RTD\" }), _jsx(\"option\", { value: \"10k\", children: \"10k Thermistor\" })] }), _jsxs(\"select\", { value: config.inputs?.[num]?.conversionType || 'voltage', onChange: (e) => handleBoardConfigChange(index, `input_${num}_conversion`, e.target.value), className: \"conversion-select\", children: [_jsx(\"option\", { value: \"temperature\", children: \"Temperature (\\u00B0F)\" }), _jsx(\"option\", { value: \"amps\", children: \"Current (Amps)\" }), _jsx(\"option\", { value: \"humidity\", children: \"Humidity (%)\" }), _jsx(\"option\", { value: \"pressure\", children: \"Pressure (PSI)\" }), _jsx(\"option\", { value: \"voltage\", children: \"Voltage (V)\" })] }), config.inputs?.[num]?.conversionType === 'amps' && (_jsxs(\"select\", { value: config.inputs?.[num]?.scaling || '0-50', onChange: (e) => handleBoardConfigChange(index, `input_${num}_scaling`, e.target.value), className: \"scaling-select\", children: [_jsx(\"option\", { value: \"0-20\", children: \"0-20A\" }), _jsx(\"option\", { value: \"0-50\", children: \"0-50A\" }), _jsx(\"option\", { value: \"0-100\", children: \"0-100A\" })] })), _jsx(Switch, { checked: config.inputs?.[num]?.enabled !== false, onCheckedChange: (checked) => handleBoardConfigChange(index, `input_${num}_enabled`, checked) })] }, `input-${num}`)))] })] })), config.boardType === '16univin' && (_jsxs(\"div\", { className: \"input-group\", children: [_jsx(\"h5\", { children: \"16 Universal Inputs\" }), Array.from({ length: 16 }, (_, i) => i + 1).map(num => (_jsxs(\"div\", { className: \"input-config-item\", children: [_jsxs(\"span\", { className: \"input-number\", children: [\"In\", num] }), _jsx(\"input\", { type: \"text\", placeholder: `Input ${num} name`, value: config.inputs?.[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `input_${num}_name`, e.target.value) }), _jsxs(\"select\", { value: config.inputs?.[num]?.inputType || '0-10V', onChange: (e) => handleBoardConfigChange(index, `input_${num}_type`, e.target.value), className: \"input-type-select\", children: [_jsx(\"option\", { value: \"0-10V\", children: \"0-10V\" }), _jsx(\"option\", { value: \"1k\", children: \"1k RTD\" }), _jsx(\"option\", { value: \"10k\", children: \"10k Thermistor\" })] }), _jsxs(\"select\", { value: config.inputs?.[num]?.conversionType || 'temperature', onChange: (e) => handleBoardConfigChange(index, `input_${num}_conversion`, e.target.value), className: \"conversion-select\", children: [_jsx(\"option\", { value: \"temperature\", children: \"Temperature (\\u00B0F)\" }), _jsx(\"option\", { value: \"amps\", children: \"Current (Amps)\" }), _jsx(\"option\", { value: \"humidity\", children: \"Humidity (%)\" }), _jsx(\"option\", { value: \"pressure\", children: \"Pressure (PSI)\" }), _jsx(\"option\", { value: \"voltage\", children: \"Voltage (V)\" })] }), config.inputs?.[num]?.conversionType === 'amps' && (_jsxs(\"select\", { value: config.inputs?.[num]?.scaling || '0-50', onChange: (e) => handleBoardConfigChange(index, `input_${num}_scaling`, e.target.value), className: \"scaling-select\", children: [_jsx(\"option\", { value: \"0-20\", children: \"0-20A\" }), _jsx(\"option\", { value: \"0-50\", children: \"0-50A\" }), _jsx(\"option\", { value: \"0-100\", children: \"0-100A\" })] })), _jsx(Switch, { checked: config.inputs?.[num]?.enabled !== false, onCheckedChange: (checked) => handleBoardConfigChange(index, `input_${num}_enabled`, checked) })] }, `input-${num}`)))] })), (config.boardType === '16relind' || config.boardType === '8relind') && (_jsxs(\"div\", { className: \"output-group\", children: [_jsx(\"h5\", { children: \"Relays\" }), Array.from({ length: config.boardType === '16relind' ? 16 : 8 }, (_, i) => i + 1).map(num => (_jsxs(\"div\", { className: \"output-item compact\", children: [_jsxs(\"span\", { children: [\"R\", num] }), _jsx(\"input\", { type: \"text\", placeholder: `Relay ${num} name`, value: config.outputs[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `output_${num}_name`, e.target.value) }), _jsx(Switch, { checked: config.outputs[num]?.enabled || false, onCheckedChange: (checked) => handleBoardConfigChange(index, `output_${num}_enabled`, checked) })] }, `relay-${num}`)))] })), config.boardType === '16uout' && (_jsxs(\"div\", { className: \"output-group\", children: [_jsx(\"h5\", { children: \"0-10V Outputs\" }), Array.from({ length: 16 }, (_, i) => i + 1).map(num => (_jsxs(\"div\", { className: \"output-item compact\", children: [_jsxs(\"span\", { children: [\"O\", num] }), _jsx(\"input\", { type: \"text\", placeholder: `Output ${num} name`, value: config.outputs[num]?.name || '', onChange: (e) => handleBoardConfigChange(index, `output_${num}_name`, e.target.value) }), _jsx(Switch, { checked: config.outputs[num]?.enabled || false, onCheckedChange: (checked) => handleBoardConfigChange(index, `output_${num}_enabled`, checked) })] }, `uout-${num}`)))] }))] }))] }, index))) }), _jsx(\"div\", { className: \"board-actions\", children: _jsx(\"button\", { className: \"btn-save\", onClick: async () => {\n                                            try {\n                                                const response = await authenticatedFetch('/api/logic/boards', {\n                                                    method: 'POST',\n                                                    headers: { 'Content-Type': 'application/json' },\n                                                    body: JSON.stringify(boardConfigs)\n                                                });\n                                                if (response.ok) {\n                                                    alert('Board configuration saved successfully');\n                                                }\n                                                else {\n                                                    alert('Failed to save board configuration');\n                                                }\n                                            }\n                                            catch (error) {\n                                                console.error('Error saving board config:', error);\n                                                alert('Error saving board configuration');\n                                            }\n                                        }, children: \"Save Configuration\" }) })] })), activeTab === 'status' && (_jsxs(\"div\", { className: \"status-section\", children: [_jsx(\"h2\", { children: \"BMS Connection Status\" }), _jsxs(\"div\", { className: \"status-header\", children: [_jsx(\"div\", { className: \"connection-toggle\", children: _jsxs(\"button\", { className: `toggle-btn ${bmsEnabled ? 'enabled' : 'disabled'}`, onClick: toggleBMSConnection, children: [bmsEnabled ? _jsx(Wifi, { size: 24 }) : _jsx(WifiOff, { size: 24 }), _jsx(\"span\", { children: bmsEnabled ? 'Connected' : 'Disconnected' })] }) }), _jsxs(\"div\", { className: \"bms-address\", children: [_jsx(Server, { size: 20 }), _jsx(\"span\", { children: \"BMS Server: 143.198.162.31\" })] })] }), _jsxs(\"div\", { className: \"status-grid\", children: [_jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"Connection Status\" }), _jsxs(\"div\", { className: `status-indicator ${bmsStatus.connected ? 'connected' : 'disconnected'}`, children: [bmsStatus.connected ? _jsx(CheckCircle, { size: 32 }) : _jsx(XCircle, { size: 32 }), _jsx(\"span\", { children: bmsStatus.connected ? 'Connected' : 'Disconnected' })] })] }), _jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"Connection Details\" }), _jsxs(\"div\", { className: \"status-details\", children: [_jsxs(\"div\", { className: \"detail-row\", children: [_jsx(\"span\", { children: \"Last Ping:\" }), _jsx(\"span\", { children: bmsStatus.lastPing })] }), _jsxs(\"div\", { className: \"detail-row\", children: [_jsx(\"span\", { children: \"Latency:\" }), _jsxs(\"span\", { children: [bmsStatus.latency, \"ms\"] })] }), _jsxs(\"div\", { className: \"detail-row\", children: [_jsx(\"span\", { children: \"Logic Source:\" }), _jsx(\"span\", { className: `source-badge ${bmsStatus.logicFileStatus}`, children: bmsStatus.usingLocalFile ? 'Local File' : 'Remote Server' })] })] })] }), _jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"Failover Status\" }), _jsx(\"div\", { className: \"failover-info\", children: bmsStatus.usingLocalFile ? (_jsxs(\"div\", { className: \"failover-active\", children: [_jsx(AlertTriangle, { size: 24, color: \"#f59e0b\" }), _jsx(\"p\", { children: \"Using local logic file due to connection failure\" })] })) : (_jsxs(\"div\", { className: \"failover-standby\", children: [_jsx(CheckCircle, { size: 24, color: \"#10b981\" }), _jsx(\"p\", { children: \"Connected to remote server\" })] })) })] }), _jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"Node-RED Integration\" }), _jsxs(\"div\", { className: \"integration-status\", children: [_jsxs(\"div\", { className: \"detail-row\", children: [_jsx(\"span\", { children: \"Command Retrieval:\" }), _jsx(\"span\", { className: bmsStatus.connected ? 'active' : 'inactive', children: bmsStatus.connected ? 'Active' : 'Inactive' })] }), _jsxs(\"div\", { className: \"detail-row\", children: [_jsx(\"span\", { children: \"Logic File:\" }), _jsx(\"span\", { children: bmsStatus.logicFileStatus !== 'none' ? 'Loaded' : 'Not Loaded' })] })] })] })] })] })), activeTab === 'audit' && (_jsxs(\"div\", { className: \"audit-section\", children: [_jsxs(\"div\", { className: \"audit-controls\", children: [_jsx(\"h2\", { children: \"Audit Trail\" }), _jsxs(\"div\", { className: \"time-selector\", children: [_jsx(\"label\", { children: \"Time Range:\" }), _jsxs(\"select\", { value: timeRange, onChange: (e) => setTimeRange(Number(e.target.value)), children: [_jsx(\"option\", { value: 1, children: \"Last Hour\" }), _jsx(\"option\", { value: 6, children: \"Last 6 Hours\" }), _jsx(\"option\", { value: 24, children: \"Last 24 Hours\" }), _jsx(\"option\", { value: 72, children: \"Last 3 Days\" }), _jsx(\"option\", { value: 168, children: \"Last Week\" }), _jsx(\"option\", { value: 720, children: \"Last Month\" })] })] })] }), loading ? (_jsx(\"div\", { className: \"loading\", children: \"Loading audit logs...\" })) : auditLogs.length === 0 ? (_jsxs(\"div\", { className: \"no-data\", children: [_jsx(FileText, { size: 48, color: \"#9ca3af\" }), _jsx(\"h3\", { children: \"No Audit Logs\" }), _jsx(\"p\", { children: \"No activity recorded in the selected time range\" })] })) : (_jsx(\"div\", { className: \"audit-table-wrapper\", children: _jsxs(\"table\", { className: \"audit-table\", children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(\"th\", { children: \"Time\" }), _jsx(\"th\", { children: \"User\" }), _jsx(\"th\", { children: \"Action\" }), _jsx(\"th\", { children: \"Resource\" }), _jsx(\"th\", { children: \"IP Address\" }), _jsx(\"th\", { children: \"Status\" }), _jsx(\"th\", { children: \"Details\" })] }) }), _jsx(\"tbody\", { children: auditLogs.map(log => (_jsxs(\"tr\", { children: [_jsx(\"td\", { className: \"time-cell\", children: new Date(log.timestamp).toLocaleString('en-US', {\n                                                                timeZone: 'America/New_York',\n                                                                month: '2-digit',\n                                                                day: '2-digit',\n                                                                hour: '2-digit',\n                                                                minute: '2-digit'\n                                                            }) }), _jsx(\"td\", { className: \"user-cell\", children: _jsx(\"span\", { className: \"username\", children: log.username }) }), _jsx(\"td\", { className: \"action-cell\", children: _jsxs(\"span\", { className: \"action-badge\", children: [getActionIcon(log.action || ''), \" \", log.action || 'Unknown'] }) }), _jsx(\"td\", { className: \"resource-cell\", children: log.resource || '-' }), _jsx(\"td\", { className: \"ip-cell\", children: _jsx(\"code\", { children: log.ip_address || 'Unknown' }) }), _jsx(\"td\", { className: \"status-cell\", children: _jsx(\"span\", { className: \"status-badge\", style: { color: getStatusColor(log.status || '') }, children: log.status || 'unknown' }) }), _jsx(\"td\", { className: \"details-cell\", children: log.details && (_jsxs(\"span\", { className: \"details\", title: log.details, children: [log.details.substring(0, 50), log.details.length > 50 && '...'] })) })] }, log.id))) })] }) }))] })), activeTab === 'pid' && (_jsxs(\"div\", { className: \"pid-section\", children: [_jsx(\"h2\", { children: \"PID Controllers - 0-10V Actuator Control\" }), pidControllers.length === 0 ? (_jsxs(\"div\", { style: {\n                                        padding: '40px',\n                                        textAlign: 'center',\n                                        background: '#f9fafb',\n                                        borderRadius: '8px',\n                                        border: '2px dashed #d1d5db',\n                                        margin: '20px 0'\n                                    }, children: [_jsx(\"h3\", { style: { color: '#6b7280', marginBottom: '10px' }, children: \"No PID Controllers Configured\" }), _jsx(\"p\", { style: { color: '#9ca3af' }, children: \"Upload a hardware configuration HTML file in the Logic Engine tab to automatically configure PID controllers based on your equipment's analog outputs (valves, VFDs, dampers, etc.)\" })] })) : (_jsxs(_Fragment, { children: [parsedHardwareConfig && (_jsxs(\"div\", { style: {\n                                                padding: '15px',\n                                                background: '#f0fdf4',\n                                                border: '1px solid #10b981',\n                                                borderRadius: '6px',\n                                                marginBottom: '20px'\n                                            }, children: [_jsxs(\"p\", { style: { margin: 0, color: '#065f46', fontWeight: 500 }, children: [\"\\u2713 Auto-configured \", pidControllers.length, \" PID controller\", pidControllers.length > 1 ? 's' : '', \" from hardware configuration\"] }), _jsxs(\"small\", { style: { color: '#6b7280' }, children: [\"Controllers configured for: \", pidControllers.map(c => c.outputChannel).join(', ')] })] })), _jsx(\"div\", { className: \"pid-controllers\", children: pidControllers.map((controller, index) => (_jsxs(\"div\", { className: \"pid-card\", children: [_jsxs(\"div\", { className: \"pid-header\", children: [_jsx(\"h3\", { children: controller.name }), _jsxs(\"div\", { className: \"pid-toggle\", children: [_jsxs(\"label\", { className: \"toggle-switch\", children: [_jsx(\"input\", { type: \"checkbox\", checked: controller.enabled, onChange: (e) => updatePIDController(index, 'enabled', e.target.checked) }), _jsx(\"span\", { className: \"toggle-slider\" })] }), _jsx(\"span\", { className: \"toggle-label\", children: controller.enabled ? 'Enabled' : 'Disabled' })] })] }), _jsxs(\"div\", { className: \"pid-params\", children: [_jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Setpoint (\\u00B0F):\" }), _jsx(\"input\", { type: \"number\", value: controller.setpoint || 45, onChange: (e) => updatePIDController(index, 'setpoint', parseFloat(e.target.value)), min: \"40\", max: \"100\", step: \"0.5\" })] }), _jsxs(\"div\", { className: \"param-group\", children: [_jsx(\"h4\", { children: \"PID Tuning\" }), _jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Kp (Proportional):\" }), _jsx(\"input\", { type: \"number\", value: controller.kp || 2.5, onChange: (e) => updatePIDController(index, 'kp', parseFloat(e.target.value)), min: \"0\", max: \"10\", step: \"0.1\" })] }), _jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Ki (Integral):\" }), _jsx(\"input\", { type: \"number\", value: controller.ki || 0.15, onChange: (e) => updatePIDController(index, 'ki', parseFloat(e.target.value)), min: \"0\", max: \"5\", step: \"0.1\" })] }), _jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Kd (Derivative):\" }), _jsx(\"input\", { type: \"number\", value: controller.kd || 0.05, onChange: (e) => updatePIDController(index, 'kd', parseFloat(e.target.value)), min: \"0\", max: \"2\", step: \"0.01\" })] })] }), _jsxs(\"div\", { className: \"param-group\", children: [_jsx(\"h4\", { children: \"Output Limits (0-10V)\" }), _jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Min Voltage:\" }), _jsxs(\"div\", { className: \"voltage-input\", children: [_jsx(\"input\", { type: \"number\", value: controller.outputMin || 0, onChange: (e) => updatePIDController(index, 'outputMin', parseFloat(e.target.value)), min: \"0\", max: \"10\", step: \"0.1\" }), _jsxs(\"span\", { className: \"voltage-unit\", children: [\"V (\", ((controller.outputMin || 0) * 10).toFixed(0), \"%)\"] })] })] }), _jsxs(\"div\", { className: \"param-row\", children: [_jsx(\"label\", { children: \"Max Voltage:\" }), _jsxs(\"div\", { className: \"voltage-input\", children: [_jsx(\"input\", { type: \"number\", value: controller.outputMax || 10, onChange: (e) => updatePIDController(index, 'outputMax', parseFloat(e.target.value)), min: \"0\", max: \"10\", step: \"0.1\" }), _jsxs(\"span\", { className: \"voltage-unit\", children: [\"V (\", ((controller.outputMax || 10) * 10).toFixed(0), \"%)\"] })] })] })] }), _jsxs(\"div\", { className: \"param-group\", children: [_jsx(\"h4\", { children: \"Control Action\" }), _jsxs(\"div\", { className: \"action-toggle\", children: [_jsx(\"button\", { className: `action-btn ${!controller.reverseActing ? 'active' : ''}`, onClick: () => updatePIDController(index, 'reverseActing', false), children: \"Direct Acting\" }), _jsx(\"button\", { className: `action-btn ${controller.reverseActing ? 'active' : ''}`, onClick: () => updatePIDController(index, 'reverseActing', true), children: \"Reverse Acting\" })] }), _jsx(\"div\", { className: \"action-help\", children: controller.reverseActing ? (_jsx(\"p\", { children: \"Reverse: Output decreases as process variable increases (heating)\" })) : (_jsx(\"p\", { children: \"Direct: Output increases as process variable increases (cooling)\" })) })] }), _jsxs(\"div\", { className: \"output-display\", children: [_jsx(\"h4\", { children: \"Current Output\" }), _jsxs(\"div\", { className: \"output-value\", children: [_jsxs(\"span\", { className: \"voltage\", children: [(controller.currentOutput || 0).toFixed(2), \"V\"] }), _jsxs(\"span\", { className: \"percentage\", children: [\"(\", ((controller.currentOutput || 0) * 10).toFixed(0), \"%)\"] })] }), _jsx(\"div\", { className: \"output-bar\", children: _jsx(\"div\", { className: \"output-fill\", style: { width: `${(controller.currentOutput || 0) * 10}%` } }) })] })] })] }, index))) }), _jsxs(\"div\", { className: \"pid-actions\", children: [_jsx(\"button\", { className: \"btn-save\", onClick: async () => {\n                                                        try {\n                                                            // Save all PID controllers to backend\n                                                            for (const controller of pidControllers) {\n                                                                await authenticatedFetch('/api/pid-controllers/save', {\n                                                                    method: 'POST',\n                                                                    headers: { 'Content-Type': 'application/json' },\n                                                                    body: JSON.stringify(controller)\n                                                                });\n                                                            }\n                                                            alert('PID configuration saved successfully!');\n                                                        }\n                                                        catch (error) {\n                                                            console.error('Error saving PID configuration:', error);\n                                                            alert('Failed to save PID configuration');\n                                                        }\n                                                    }, children: \"Save Configuration\" }), _jsx(\"button\", { className: \"btn-reset\", onClick: () => {\n                                                        if (confirm('Reset all PID controllers to default values?')) {\n                                                            const resetControllers = pidControllers.map(c => ({\n                                                                ...c,\n                                                                kp: 0.5,\n                                                                ki: 0.02,\n                                                                kd: 0.01,\n                                                                setpoint: 75,\n                                                                outputMin: 2.6,\n                                                                outputMax: 4.8\n                                                            }));\n                                                            setPidControllers(resetControllers);\n                                                            alert('PID controllers reset to defaults');\n                                                        }\n                                                    }, children: \"Reset to Defaults\" })] })] }))] })), activeTab === 'status' && (_jsxs(\"div\", { className: \"bms-status-section\", children: [_jsx(\"h2\", { children: \"BMS Connection Status\" }), _jsxs(\"div\", { className: \"status-cards\", children: [_jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"System Status\" }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Connection:\" }), _jsx(\"span\", { className: `status-value ${bmsStatus.connected ? 'connected' : 'disconnected'}`, children: bmsStatus.connected ? '● Connected' : '○ Disconnected' })] }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Last Ping:\" }), _jsx(\"span\", { className: \"status-value\", children: bmsStatus.lastPing })] }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Latency:\" }), _jsxs(\"span\", { className: \"status-value\", children: [bmsStatus.latency, \"ms\"] })] }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Logic File:\" }), _jsx(\"span\", { className: \"status-value\", children: logicContent ? 'Loaded' : 'Not Loaded' })] })] }), _jsxs(\"div\", { className: \"status-card\", style: {\n                                                border: nodeRedIntegrationEnabled ? '2px solid #10b981' : '2px solid #e5e7eb'\n                                            }, children: [_jsx(\"h3\", { children: \"Node-RED Integration\" }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Command Retrieval:\" }), _jsx(\"span\", { className: `status-value ${nodeRedIntegrationEnabled ? 'enabled' : 'disabled'}`, children: nodeRedIntegrationEnabled ? 'Enabled' : 'Disabled' })] }), _jsxs(\"div\", { style: {\n                                                        marginTop: '20px',\n                                                        padding: '15px',\n                                                        background: nodeRedIntegrationEnabled ? '#f0fdf4' : '#f9fafb',\n                                                        borderRadius: '6px'\n                                                    }, children: [_jsx(\"p\", { style: { marginBottom: '15px', color: '#6b7280' }, children: nodeRedIntegrationEnabled\n                                                                ? 'Node-RED is actively polling for commands and sending data to the BMS system.'\n                                                                : 'Node-RED integration is disabled. The system is using local logic execution.' }), _jsxs(\"div\", { style: { display: 'flex', alignItems: 'center', justifyContent: 'space-between' }, children: [_jsxs(\"label\", { style: {\n                                                                        display: 'flex',\n                                                                        alignItems: 'center',\n                                                                        gap: '10px',\n                                                                        fontWeight: 500,\n                                                                        color: '#374151'\n                                                                    }, children: [_jsx(\"span\", { children: \"Enable Node-RED Command Retrieval\" }), _jsxs(\"label\", { className: \"toggle-switch\", children: [_jsx(\"input\", { type: \"checkbox\", checked: nodeRedIntegrationEnabled, onChange: async (e) => {\n                                                                                        const newState = e.target.checked;\n                                                                                        setNodeRedIntegrationEnabled(newState);\n                                                                                        // Save state to backend\n                                                                                        try {\n                                                                                            await authenticatedFetch('/api/logic/node-red-toggle', {\n                                                                                                method: 'POST',\n                                                                                                headers: { 'Content-Type': 'application/json' },\n                                                                                                body: JSON.stringify({ enabled: newState })\n                                                                                            });\n                                                                                            if (newState) {\n                                                                                                alert('Node-RED integration enabled. Commands will be retrieved from Node-RED flows.');\n                                                                                            }\n                                                                                            else {\n                                                                                                alert('Node-RED integration disabled. Using local logic execution.');\n                                                                                            }\n                                                                                        }\n                                                                                        catch (error) {\n                                                                                            console.error('Failed to toggle Node-RED integration:', error);\n                                                                                        }\n                                                                                    } }), _jsx(\"span\", { className: \"toggle-slider\" })] })] }), nodeRedIntegrationEnabled && (_jsxs(\"span\", { style: {\n                                                                        color: '#10b981',\n                                                                        fontSize: '12px',\n                                                                        display: 'flex',\n                                                                        alignItems: 'center',\n                                                                        gap: '5px'\n                                                                    }, children: [_jsx(Activity, { size: 14 }), \"Active\"] }))] }), nodeRedIntegrationEnabled && (_jsxs(\"div\", { style: {\n                                                                marginTop: '15px',\n                                                                padding: '10px',\n                                                                background: '#d1fae5',\n                                                                borderRadius: '4px',\n                                                                fontSize: '12px',\n                                                                color: '#065f46'\n                                                            }, children: [_jsx(\"strong\", { children: \"Note:\" }), \" When enabled, Node-RED flows will override local logic execution. Disable this if you want to use the Logic Engine for equipment control.\"] }))] }), _jsxs(\"div\", { className: \"status-item\", style: { marginTop: '15px' }, children: [_jsx(\"span\", { className: \"status-label\", children: \"Node-RED URL:\" }), _jsx(\"span\", { className: \"status-value\", children: _jsx(\"a\", { href: \"/node-red\", target: \"_blank\", rel: \"noopener noreferrer\", style: { color: '#0ea5e9' }, children: \"Open Node-RED Editor \\u2192\" }) })] })] }), _jsxs(\"div\", { className: \"status-card\", children: [_jsx(\"h3\", { children: \"Logic Execution\" }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Mode:\" }), _jsx(\"span\", { className: \"status-value\", children: nodeRedIntegrationEnabled ? 'Node-RED Control' : 'Local Logic Engine' })] }), _jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Status:\" }), _jsx(\"span\", { className: `status-value ${autoRunEnabled ? 'enabled' : 'disabled'}`, children: autoRunEnabled ? 'Running' : 'Stopped' })] }), autoRunEnabled && (_jsxs(\"div\", { className: \"status-item\", children: [_jsx(\"span\", { className: \"status-label\", children: \"Interval:\" }), _jsx(\"span\", { className: \"status-value\", children: pollingInterval >= 60\n                                                                ? pollingInterval === 60\n                                                                    ? '1 minute'\n                                                                    : `${pollingInterval / 60} minutes`\n                                                                : `${pollingInterval} seconds` })] }))] })] }), _jsxs(\"div\", { className: \"notes\", style: { marginTop: '20px' }, children: [_jsx(\"h4\", { children: \"Usage Guidelines:\" }), _jsxs(\"ul\", { children: [_jsxs(\"li\", { children: [_jsx(\"strong\", { children: \"Node-RED Integration:\" }), \" Enable when you want to use Node-RED flows for BMS control and monitoring.\"] }), _jsxs(\"li\", { children: [_jsx(\"strong\", { children: \"Local Logic Engine:\" }), \" Disable Node-RED integration to use uploaded JavaScript logic files for equipment control.\"] }), _jsxs(\"li\", { children: [_jsx(\"strong\", { children: \"Switching Modes:\" }), \" You can switch between modes at any time. The system will remember your preference.\"] }), _jsxs(\"li\", { children: [_jsx(\"strong\", { children: \"Troubleshooting:\" }), \" If equipment isn't responding, check which mode is active and ensure the appropriate system is configured.\"] })] })] })] })), activeTab === 'security' && (_jsxs(\"div\", { className: \"feature-placeholder\", children: [_jsx(Lock, { size: 64, color: \"#14b8a6\" }), _jsx(\"h2\", { children: \"Security Features\" }), _jsx(\"div\", { className: \"placeholder-badge\", children: \"Feature In Progress\" }), _jsx(\"p\", { children: \"Advanced security configuration and monitoring tools coming soon.\" }), _jsxs(\"div\", { className: \"placeholder-features\", children: [_jsxs(\"div\", { className: \"feature-item\", children: [_jsx(\"span\", { className: \"feature-icon\", children: \"\\uD83D\\uDD10\" }), _jsx(\"span\", { children: \"Two-Factor Authentication\" })] }), _jsxs(\"div\", { className: \"feature-item\", children: [_jsx(\"span\", { className: \"feature-icon\", children: \"\\uD83D\\uDEE1\\uFE0F\" }), _jsx(\"span\", { children: \"Intrusion Detection\" })] }), _jsxs(\"div\", { className: \"feature-item\", children: [_jsx(\"span\", { className: \"feature-icon\", children: \"\\uD83D\\uDD11\" }), _jsx(\"span\", { children: \"API Key Management\" })] }), _jsxs(\"div\", { className: \"feature-item\", children: [_jsx(\"span\", { className: \"feature-icon\", children: \"\\uD83D\\uDCCA\" }), _jsx(\"span\", { children: \"Security Analytics\" })] })] })] }))] })] }) }));\n};\nexport default Admin;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","checked","onCheckedChange","disabled","className","children","___CSS_LOADER_EXPORT___","push","module","id","usePersistedState","key","defaultValue","page","state","setState","useState","loading","setLoading","previousValueRef","useRef","saveTimeoutRef","useEffect","async","token","sessionStorage","getItem","response","get","headers","Authorization","data","success","undefined","current","error","console","loadState","clearTimeout","newValue","setTimeout","post","stateKey","stateValue","JSON","stringify","actionType","component","description","oldValue","saveState","activeTab","setActiveTab","selectedEquipment","setSelectedEquipment","logicEnabled","setLogicEnabled","autoRunEnabled","setAutoRunEnabled","pollingInterval","setPollingInterval","auditLogs","setAuditLogs","isAdmin","setIsAdmin","timeRange","setTimeRange","checkInterval","setInterval","expiryTime","parse","atob","split","exp","now","Date","remainingSeconds","Math","floor","warn","clear","window","location","href","clearInterval","useSessionTimeout","logicFile","setLogicFile","logicContent","setLogicContent","logicRunning","setLogicRunning","logicOutput","setLogicOutput","equipmentList","setEquipmentList","configChanged","setConfigChanged","isEditingLogic","setIsEditingLogic","originalLogicContent","setOriginalLogicContent","logicResults","setLogicResults","executionResults","setExecutionResults","fileInputRef","resultsIntervalRef","executionResultsIntervalRef","configHtmlFile","setConfigHtmlFile","parsedHardwareConfig","setParsedHardwareConfig","showConfigPreview","setShowConfigPreview","configFileInputRef","boardConfigs","setBoardConfigs","bmsStatus","setBmsStatus","connected","lastPing","latency","usingLocalFile","logicFileStatus","bmsEnabled","setBmsEnabled","nodeRedIntegrationEnabled","setNodeRedIntegrationEnabled","pidControllers","setPidControllers","checkUserRole","fetchAuditLogs","fetchBoardConfigs","fetchBMSStatus","interval","fetchEquipmentList","fetchSavedBoardConfig","fetchCurrentLogic","then","fetchPIDControllers","fetchLogicResults","includes","fetchExecutionResults","payload","role","ok","json","savedConfigs","length","reconstructedConfig","megabasInputs","megabasTriacs","megabasAnalogOutputs","input16Channels","relay16Channels","systemComponents","sensorSpecs","forEach","board","boardType","outputs","Object","entries","output","channel","parseInt","type","name","range","inputs","input","conversion","conversionType","scaling","inputType","log","configResponse","detectResponse","detectedBoards","configs","megabas","stackAddress","enabled","input16","relay16","relay8","firstWithLogic","find","eq","hasLogic","logicResponse","logicData","text","config","status","handleBoardConfigChange","boardIndex","field","value","newConfigs","startsWith","outputNum","outputField","inputNum","inputField","method","body","updatePIDController","index","newControllers","controller","equipmentId","controllerType","getActionIcon","action","toUpperCase","AuthGuard","A","size","onClick","style","background","padding","borderRadius","marginBottom","border","marginTop","color","display","gap","alignItems","ref","accept","onChange","event","file","target","files","endsWith","reader","FileReader","onload","e","content","result","parsed","htmlContent","doc","DOMParser","parseFromString","projectInfo","equipmentIds","headerText","querySelector","textContent","projectMatch","match","dateMatch","contractorMatch","project","trim","date","contractor","ioTables","querySelectorAll","table","tableIndex","rows","headerRow","row","cells","equipmentName","hasBAUHeader","has16InputHeader","has16RelayHeader","bauChannel","bauFunction","matches","start","end","i","isCurrentSensor","inputName","inputChannel","inputFunction","chMatch","sensorType","inputConfig","relayChannel","relayFunction","col1Channel","col1Function","col2Channel","col2Function","replace","num","aoMatch","aiMatch","func","notesText","currentSensors","tempSensors","item","uuidPattern","foundUUIDs","elem","getAttribute","uuid","cell","newPIDControllers","ao","toLowerCase","pidConfig","setpoint","kp","ki","kd","minV","maxV","reverseActing","outputChannel","processVariable","configurePIDFromParsedConfig","parseHardwareConfigFromHTML","alert","readAsText","click","fontWeight","title","position","top","left","right","bottom","justifyContent","zIndex","maxWidth","maxHeight","overflow","boxShadow","margin","map","t","ch","r","newBoardConfigs","megabasConfig","triac","input16Config","relay16Config","relay","flex","placeholder","width","fontSize","fontFamily","join","ids","filter","cursor","flexWrap","substring","newState","handlePollingIntervalChange","Number","equipmentNames","idsMatch","idsContent","towerPattern","exec","towerNum","towerId","towerEquipment","fromFile","parsedEquipment","equipmentData","mapMatch","mapContent","entryPattern","configPattern","idPattern","foundIds","Set","has","add","parseEquipmentIdsFromLogic","newEquipment","prev","existingWithLogic","confirm","borderColor","testContent","checkResponse","errorText","reload","spellCheck","readOnly","verticalAlign","marginRight","marginLeft","float","slice","reverse","borderBottom","paddingBottom","timestamp","toLocaleTimeString","activeLogic","gridTemplateColumns","tower1VFDEnable","tower1FanSpeed","tower2VFDEnable","tower2FanSpeed","tower3VFDEnable","tower3FanSpeed","activeTowers","coolingDemand","loopDeltaT","toFixed","paddingTop","borderTop","CH1","CH2","outdoorTemp","currentTemp","spaceTemp","supplyTemp","heating","cooling","damper","fan","fanSpeed","Switch","Array","from","_","toLocaleString","timeZone","month","day","hour","minute","username","resource","ip_address","details","textAlign","c","parseFloat","min","max","step","outputMin","outputMax","currentOutput","resetControllers","rel"],"sourceRoot":""}